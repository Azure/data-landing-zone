name: Data Node Deployment

trigger:
  branches:
    include:
      - main
  paths:
    include:
      - infra/ArtifactStorage/*
      - infra/Databricks/*
      - infra/DataFactory/*
      - infra/EventHub/*
      - infra/KeyVault/*
      - infra/MySql/*
      - infra/SelfHostedIntegrationRuntimeDataFactory/*
      - infra/SelfHostedIntegrationRuntimePurview/*
      - infra/SqlDatabase/*
      - infra/SqlServer/*
      - infra/Storage/*
      - infra/Synapse/*
      - infra/VirtualNetwork/*
      - infra/VirtualNetworkPeering/*
      - .ado/workflows/dataNodeDeployment.yml
      - code/*
pr:
  branches:
    include:
      - main
  paths:
    include:
      - infra/ArtifactStorage/*
      - infra/Databricks/*
      - infra/DataFactory/*
      - infra/EventHub/*
      - infra/KeyVault/*
      - infra/MySql/*
      - infra/SelfHostedIntegrationRuntimeDataFactory/*
      - infra/SelfHostedIntegrationRuntimePurview/*
      - infra/SqlDatabase/*
      - infra/SqlServer/*
      - infra/Storage/*
      - infra/Synapse/*
      - infra/VirtualNetwork/*
      - infra/VirtualNetworkPeering/*
      - .ado/workflows/dataNodeDeployment.yml
      - code/*

variables:
  AZURE_RESOURCE_MANAGER_CONNECTION_NAME: "data-node001-service-connection" # Update to '{resourceManagerConnectionName}'
  AZURE_SUBSCRIPTION_ID: "2f68ca09-59d9-4ab5-ad11-c54872bfa28d"             # Update to '{dataLandingZoneSubscriptionId}'
  AZURE_RESOURCE_GROUP_NAME_NETWORK: "dn001-network"                        # Update to '{dataLandingZoneName}-network'
  AZURE_RESOURCE_GROUP_NAME_MANAGEMENT: "dn001-mgmt"                        # Update to '{dataLandingZoneName}-mgmt'
  AZURE_RESOURCE_GROUP_NAME_INTEGRATION: "dn001-integration"                # Update to '{dataLandingZoneName}-integration'
  AZURE_RESOURCE_GROUP_NAME_LOGGING: "dn001-logging"                        # Update to '{dataLandingZoneName}-logging'
  AZURE_RESOURCE_GROUP_NAME_STORAGE: "dn001-storage"                        # Update to '{dataLandingZoneName}-storage'
  AZURE_RESOURCE_GROUP_NAME_SECRETSTORAGE: "dn001-secretstorage"            # Update to '{dataLandingZoneName}-secretstorage'
  AZURE_RESOURCE_GROUP_NAME_EXTERNALSTORAGE: "dn001-externalstorage"        # Update to '{dataLandingZoneName}-externalstorage'
  AZURE_RESOURCE_GROUP_NAME_METADATA: "dn001-metadata"                      # Update to '{dataLandingZoneName}-metadata'
  AZURE_RESOURCE_GROUP_NAME_PROCESSINGDOMAIN: "dn001-shared-domain"         # Update to '{dataLandingZoneName}-processing-domain'
  AZURE_RESOURCE_GROUP_NAME_PROCESSINGPRODUCT: "dn001-shared-product"       # Update to '{dataLandingZoneName}-processing-product'
  AZURE_LOCATION: "North Europe"                                            # Update to '{regionName}'
  AZURE_TAGS: '{"CostCenter": "ABCDE-12345", "Owner": "EnterpriseScaleAnalytics"}'

stages:
  - stage: CreateResourceGroups
    displayName: "Create Resource Groups"
    jobs:
      - job: CreateResourceGroups
        displayName: "Create Resource Groups"
        continueOnError: false
        pool:
          vmImage: "ubuntu-latest"

        steps:
          # Checkout code
          - checkout: self
            name: checkout_repository
            displayName: Checkout repository
            submodules: true
            lfs: false
            clean: true
            continueOnError: false
            enabled: true

          # Deploy Resource Groups
          - task: AzureResourceManagerTemplateDeployment@3
            name: resource_groups_deployment
            displayName: Deploy Resource Groups
            enabled: true
            continueOnError: false
            inputs:
              deploymentScope: "Subscription"
              azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
              subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
              location: ${{ variables.AZURE_LOCATION }}
              templateLocation: "Linked artifact"
              csmFile: "$(System.DefaultWorkingDirectory)/infra/ResourceGroups/deploy.resourceGroups.json"
              csmParametersFile: "$(System.DefaultWorkingDirectory)/infra/ResourceGroups/params.resourceGroups001.json"
              overrideParameters: >
                -tags "${{ variables.AZURE_TAGS }}"

  - stage: Validation
    displayName: "Validation of ARM templates"
    dependsOn: CreateResourceGroups
    jobs:
      - job: Validation
        displayName: "Validation of ARM templates"
        continueOnError: false
        pool:
          vmImage: "ubuntu-latest"

        steps:
          # Checkout code
          - checkout: self
            name: checkout_repository
            displayName: "Checkout repository"
            submodules: true
            lfs: false
            clean: true
            continueOnError: false
            enabled: true

          # Deploy vnet - validation
          - task: AzureResourceManagerTemplateDeployment@3
            name: vnet_validation
            displayName: Deploy vnet - validation
            enabled: true
            continueOnError: false
            inputs:
              deploymentScope: "Resource Group"
              azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
              subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
              action: "Create Or Update Resource Group"
              resourceGroupName: ${{ variables.AZURE_RESOURCE_GROUP_NAME_NETWORK }}
              location: ${{ variables.AZURE_LOCATION }}
              templateLocation: "Linked artifact"
              csmFile: "$(System.DefaultWorkingDirectory)/infra/VirtualNetwork/deploy.vnet.json"
              csmParametersFile: "$(System.DefaultWorkingDirectory)/infra/VirtualNetwork/params.vnet.json"
              deploymentMode: "Validation"
              overrideParameters: >
                -tags "${{ variables.AZURE_TAGS }}"

          # Deploy Vnet Peering 001 - validation
          - task: AzureResourceManagerTemplateDeployment@3
            name: vnet_peering_001_validation
            displayName: Deploy Vnet Peering 001 - validation
            enabled: true
            continueOnError: false
            inputs:
              deploymentScope: "Resource Group"
              azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
              subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
              action: "Create Or Update Resource Group"
              resourceGroupName: ${{ variables.AZURE_RESOURCE_GROUP_NAME_NETWORK }}
              location: ${{ variables.AZURE_LOCATION }}
              templateLocation: "Linked artifact"
              csmFile: "$(System.DefaultWorkingDirectory)/infra/VirtualNetworkPeering/deploy.vnetPeering.json"
              csmParametersFile: "$(System.DefaultWorkingDirectory)/infra/VirtualNetworkPeering/params.vnetPeering001.json"
              deploymentMode: "Validation"

          # Deploy Vnet Peering 002 - validation
          - task: AzureResourceManagerTemplateDeployment@3
            name: vnet_peering_002_validation
            displayName: Deploy Vnet Peering 002 - validation
            enabled: true
            continueOnError: false
            inputs:
              deploymentScope: "Resource Group"
              azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
              subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
              action: "Create Or Update Resource Group"
              resourceGroupName: ${{ variables.AZURE_RESOURCE_GROUP_NAME_NETWORK }}
              location: ${{ variables.AZURE_LOCATION }}
              templateLocation: "Linked artifact"
              csmFile: "$(System.DefaultWorkingDirectory)/infra/VirtualNetworkPeering/deploy.vnetPeering.json"
              csmParametersFile: "$(System.DefaultWorkingDirectory)/infra/VirtualNetworkPeering/params.vnetPeering002.json"
              deploymentMode: "Validation"

          # Deploy key vault 001 - validation
          - task: AzureResourceManagerTemplateDeployment@3
            name: key_vault_001_validation
            displayName: Deploy key vault 001 - validation
            enabled: true
            continueOnError: false
            inputs:
              deploymentScope: "Resource Group"
              azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
              subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
              action: "Create Or Update Resource Group"
              resourceGroupName: ${{ variables.AZURE_RESOURCE_GROUP_NAME_METADATA }}
              location: ${{ variables.AZURE_LOCATION }}
              templateLocation: "Linked artifact"
              csmFile: "$(System.DefaultWorkingDirectory)/infra/KeyVault/deploy.keyVault.json"
              csmParametersFile: "$(System.DefaultWorkingDirectory)/infra/KeyVault/params.keyVault001.json"
              deploymentMode: "Validation"
              overrideParameters: >
                -tags "${{ variables.AZURE_TAGS }}"

          # Deploy key vault 002 - validation
          - task: AzureResourceManagerTemplateDeployment@3
            name: key_vault_002_validation
            displayName: Deploy key vault 002 - validation
            enabled: true
            continueOnError: false
            inputs:
              deploymentScope: "Resource Group"
              azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
              subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
              action: "Create Or Update Resource Group"
              resourceGroupName: ${{ variables.AZURE_RESOURCE_GROUP_NAME_METADATA }}
              location: ${{ variables.AZURE_LOCATION }}
              templateLocation: "Linked artifact"
              csmFile: "$(System.DefaultWorkingDirectory)/infra/KeyVault/deploy.keyVault.json"
              csmParametersFile: "$(System.DefaultWorkingDirectory)/infra/KeyVault/params.keyVault002.json"
              deploymentMode: "Validation"
              overrideParameters: >
                -tags "${{ variables.AZURE_TAGS }}"

          # Deploy key vault 003 - validation
          - task: AzureResourceManagerTemplateDeployment@3
            name: key_vault_003_validation
            displayName: Deploy key vault 003 - validation
            enabled: true
            continueOnError: false
            inputs:
              deploymentScope: "Resource Group"
              azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
              subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
              action: "Create Or Update Resource Group"
              resourceGroupName: ${{ variables.AZURE_RESOURCE_GROUP_NAME_LOGGING }}
              location: ${{ variables.AZURE_LOCATION }}
              templateLocation: "Linked artifact"
              csmFile: "$(System.DefaultWorkingDirectory)/infra/KeyVault/deploy.keyVault.json"
              csmParametersFile: "$(System.DefaultWorkingDirectory)/infra/KeyVault/params.keyVault003.json"
              deploymentMode: "Validation"
              overrideParameters: >
                -tags "${{ variables.AZURE_TAGS }}"

          # Deploy Log Analytics Workspace 001 - validation
          - task: AzureResourceManagerTemplateDeployment@3
            name: log_analytics_001_validation
            displayName: Deploy Log Analytics Workspace 001 - validation
            enabled: true
            continueOnError: false
            inputs:
              deploymentScope: "Resource Group"
              azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
              subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
              action: "Create Or Update Resource Group"
              resourceGroupName: ${{ variables.AZURE_RESOURCE_GROUP_NAME_LOGGING }}
              location: ${{ variables.AZURE_LOCATION }}
              templateLocation: "Linked artifact"
              csmFile: "$(System.DefaultWorkingDirectory)/infra/LogAnalytics/deploy.logAnalytics.json"
              csmParametersFile: "$(System.DefaultWorkingDirectory)/infra/LogAnalytics/params.logAnalytics001.json"
              deploymentMode: "Validation"
              overrideParameters: >
                -tags "${{ variables.AZURE_TAGS }}"

          # Deploy storage account 001 - raw - validation
          - task: AzureResourceManagerTemplateDeployment@3
            name: storage_account_001_validation
            displayName: Deploy storage account 001 - raw - validation
            enabled: true
            continueOnError: false
            inputs:
              deploymentScope: "Resource Group"
              azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
              subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
              action: "Create Or Update Resource Group"
              resourceGroupName: ${{ variables.AZURE_RESOURCE_GROUP_NAME_STORAGE }}
              location: ${{ variables.AZURE_LOCATION }}
              templateLocation: "Linked artifact"
              csmFile: "$(System.DefaultWorkingDirectory)/infra/Storage/deploy.storage.json"
              csmParametersFile: "$(System.DefaultWorkingDirectory)/infra/Storage/params.storage001.json"
              deploymentMode: "Validation"
              overrideParameters: >
                -tags "${{ variables.AZURE_TAGS }}"

          # Deploy storage account 002 - enriched & curated - validation
          - task: AzureResourceManagerTemplateDeployment@3
            name: storage_account_002_validation
            displayName: Deploy storage account 002 - enriched & curated - validation
            enabled: true
            continueOnError: false
            inputs:
              deploymentScope: "Resource Group"
              azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
              subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
              action: "Create Or Update Resource Group"
              resourceGroupName: ${{ variables.AZURE_RESOURCE_GROUP_NAME_STORAGE }}
              location: ${{ variables.AZURE_LOCATION }}
              templateLocation: "Linked artifact"
              csmFile: "$(System.DefaultWorkingDirectory)/infra/Storage/deploy.storage.json"
              csmParametersFile: "$(System.DefaultWorkingDirectory)/infra/Storage/params.storage002.json"
              deploymentMode: "Validation"
              overrideParameters: >
                -tags "${{ variables.AZURE_TAGS }}"

          # Deploy storage account 003 - workspace - validation
          - task: AzureResourceManagerTemplateDeployment@3
            name: storage_account_003_validation
            displayName: Deploy storage account 003 - workspace - validation
            enabled: true
            continueOnError: false
            inputs:
              deploymentScope: "Resource Group"
              azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
              subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
              action: "Create Or Update Resource Group"
              resourceGroupName: ${{ variables.AZURE_RESOURCE_GROUP_NAME_STORAGE }}
              location: ${{ variables.AZURE_LOCATION }}
              templateLocation: "Linked artifact"
              csmFile: "$(System.DefaultWorkingDirectory)/infra/Storage/deploy.storage.json"
              csmParametersFile: "$(System.DefaultWorkingDirectory)/infra/Storage/params.storage003.json"
              deploymentMode: "Validation"
              overrideParameters: >
                -tags "${{ variables.AZURE_TAGS }}"

          # Deploy secret storage account 001 - raw - validation
          - task: AzureResourceManagerTemplateDeployment@3
            name: secret_storage_001_validation
            displayName: Deploy secret storage account 001 - raw - validation
            enabled: true
            continueOnError: false
            inputs:
              deploymentScope: "Resource Group"
              azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
              subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
              action: "Create Or Update Resource Group"
              resourceGroupName: ${{ variables.AZURE_RESOURCE_GROUP_NAME_SECRETSTORAGE }}
              location: ${{ variables.AZURE_LOCATION }}
              templateLocation: "Linked artifact"
              csmFile: "$(System.DefaultWorkingDirectory)/infra/Storage/deploy.storage.json"
              csmParametersFile: "$(System.DefaultWorkingDirectory)/infra/Storage/params.secret_storage001.json"
              deploymentMode: "Validation"
              overrideParameters: >
                -tags "${{ variables.AZURE_TAGS }}"

          # Deploy secret storage account 002 - enriched & curated - validation
          - task: AzureResourceManagerTemplateDeployment@3
            name: secret_storage_002_validation
            displayName: Deploy secret storage account 002 - enriched & curated - validation
            enabled: true
            continueOnError: false
            inputs:
              deploymentScope: "Resource Group"
              azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
              subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
              action: "Create Or Update Resource Group"
              resourceGroupName: ${{ variables.AZURE_RESOURCE_GROUP_NAME_SECRETSTORAGE }}
              location: ${{ variables.AZURE_LOCATION }}
              templateLocation: "Linked artifact"
              csmFile: "$(System.DefaultWorkingDirectory)/infra/Storage/deploy.storage.json"
              csmParametersFile: "$(System.DefaultWorkingDirectory)/infra/Storage/params.secret_storage002.json"
              deploymentMode: "Validation"
              overrideParameters: >
                -tags "${{ variables.AZURE_TAGS }}"

          # Deploy secret storage account 003 - workspace - validation
          - task: AzureResourceManagerTemplateDeployment@3
            name: secret_storage_003_validation
            displayName: Deploy secret storage account 003 - workspace - validation
            enabled: true
            continueOnError: false
            inputs:
              deploymentScope: "Resource Group"
              azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
              subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
              action: "Create Or Update Resource Group"
              resourceGroupName: ${{ variables.AZURE_RESOURCE_GROUP_NAME_SECRETSTORAGE }}
              location: ${{ variables.AZURE_LOCATION }}
              templateLocation: "Linked artifact"
              csmFile: "$(System.DefaultWorkingDirectory)/infra/Storage/deploy.storage.json"
              csmParametersFile: "$(System.DefaultWorkingDirectory)/infra/Storage/params.secret_storage003.json"
              deploymentMode: "Validation"
              overrideParameters: >
                -tags "${{ variables.AZURE_TAGS }}"

          # Deploy external storage account 001 - validation
          - task: AzureResourceManagerTemplateDeployment@3
            name: external_storage_001_validation
            displayName: Deploy external storage account 001 - validation
            enabled: true
            continueOnError: false
            inputs:
              deploymentScope: "Resource Group"
              azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
              subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
              action: "Create Or Update Resource Group"
              resourceGroupName: ${{ variables.AZURE_RESOURCE_GROUP_NAME_EXTERNALSTORAGE }}
              location: ${{ variables.AZURE_LOCATION }}
              templateLocation: "Linked artifact"
              csmFile: "$(System.DefaultWorkingDirectory)/infra/Storage/deploy.storage.json"
              csmParametersFile: "$(System.DefaultWorkingDirectory)/infra/Storage/params.external_storage001.json"
              deploymentMode: "Validation"
              overrideParameters: >
                -tags "${{ variables.AZURE_TAGS }}"

          # Generate Password
          - task: PowerShell@2
            name: generate_password_001
            displayName: Generate Password
            enabled: true
            continueOnError: false
            inputs:
              targetType: "filePath"
              filePath: "$(System.DefaultWorkingDirectory)/code/GeneratePassword.ps1"
              errorActionPreference: "stop"
              failOnStderr: false
              ignoreLASTEXITCODE: false
              pwsh: true

          # Deploy sql server 001 - validation
          - task: AzureResourceManagerTemplateDeployment@3
            name: sql_server_001_validation
            displayName: Deploy sql server 001 - validation
            enabled: true
            continueOnError: false
            inputs:
              deploymentScope: "Resource Group"
              azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
              subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
              action: "Create Or Update Resource Group"
              resourceGroupName: ${{ variables.AZURE_RESOURCE_GROUP_NAME_METADATA }}
              location: ${{ variables.AZURE_LOCATION }}
              templateLocation: "Linked artifact"
              csmFile: "$(System.DefaultWorkingDirectory)/infra/SqlServer/deploy.sqlServer.json"
              csmParametersFile: "$(System.DefaultWorkingDirectory)/infra/SqlServer/params.sqlServer001.json"
              deploymentMode: "Validation"
              overrideParameters: >
                -administratorLoginPassword "$(password)"
                -tags "${{ variables.AZURE_TAGS }}"

          # Deploy sql database 001 - validation
          - task: AzureResourceManagerTemplateDeployment@3
            name: sql_database_001_validation
            displayName: Deploy sql database 001 - validation
            enabled: true
            continueOnError: false
            inputs:
              deploymentScope: "Resource Group"
              azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
              subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
              action: "Create Or Update Resource Group"
              resourceGroupName: ${{ variables.AZURE_RESOURCE_GROUP_NAME_METADATA }}
              location: ${{ variables.AZURE_LOCATION }}
              templateLocation: "Linked artifact"
              csmFile: "$(System.DefaultWorkingDirectory)/infra/SqlDatabase/deploy.sqlDatabase.json"
              csmParametersFile: "$(System.DefaultWorkingDirectory)/infra/SqlDatabase/params.sqlDatabase001.json"
              deploymentMode: "Validation"
              overrideParameters: >
                -sqlServerAdministratorLoginPassword "$(password)"
                -tags "${{ variables.AZURE_TAGS }}"

          # Generate Password
          - task: PowerShell@2
            name: generate_password_002
            displayName: Generate Password
            enabled: true
            continueOnError: false
            inputs:
              targetType: "filePath"
              filePath: "$(System.DefaultWorkingDirectory)/code/GeneratePassword.ps1"
              errorActionPreference: "stop"
              failOnStderr: false
              ignoreLASTEXITCODE: false
              pwsh: true

          # # Deploy sql server 002 - validation
          # - task: AzureResourceManagerTemplateDeployment@3
          #   name: sql_server_002_validation
          #   displayName: Deploy sql server 002 - validation
          #   enabled: true
          #   continueOnError: false
          #   inputs:
          #     deploymentScope: 'Resource Group'
          #     azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
          #     subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
          #     action: 'Create Or Update Resource Group'
          #     resourceGroupName: ${{ variables.AZURE_RESOURCE_GROUP_NAME_METADATA }}
          #     location: ${{ variables.AZURE_LOCATION }}
          #     templateLocation: 'Linked artifact'
          #     csmFile: '$(System.DefaultWorkingDirectory)/infra/SqlServer/deploy.sqlServer.json'
          #     csmParametersFile: '$(System.DefaultWorkingDirectory)/infra/SqlServer/params.sqlServer002.json'
          #     deploymentMode: 'Validation'
          #     overrideParameters: >
          #       -administratorLoginPassword "$(password)"
          #       -tags "${{ variables.AZURE_TAGS }}"

          # # Deploy sql database 002 - validation
          # - task: AzureResourceManagerTemplateDeployment@3
          #   name: sql_database_002_validation
          #   displayName: Deploy sql database 002 - validation
          #   enabled: true
          #   continueOnError: false
          #   inputs:
          #     deploymentScope: 'Resource Group'
          #     azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
          #     subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
          #     action: 'Create Or Update Resource Group'
          #     resourceGroupName: ${{ variables.AZURE_RESOURCE_GROUP_NAME_METADATA }}
          #     location: ${{ variables.AZURE_LOCATION }}
          #     templateLocation: 'Linked artifact'
          #     csmFile: '$(System.DefaultWorkingDirectory)/infra/SqlDatabase/deploy.sqlDatabase.json'
          #     csmParametersFile: '$(System.DefaultWorkingDirectory)/infra/SqlDatabase/params.sqlDatabase002.json'
          #     deploymentMode: 'Validation'
          #     overrideParameters: >
          #       -sqlServerAdministratorLoginPassword "$(password)"
          #       -tags "${{ variables.AZURE_TAGS }}"

          # Deploy My SQL 001 - validation
          - task: AzureResourceManagerTemplateDeployment@3
            name: mysql_001_validation
            displayName: Deploy My SQL 001 - validation
            enabled: true
            continueOnError: false
            inputs:
              deploymentScope: "Resource Group"
              azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
              subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
              action: "Create Or Update Resource Group"
              resourceGroupName: ${{ variables.AZURE_RESOURCE_GROUP_NAME_METADATA }}
              location: ${{ variables.AZURE_LOCATION }}
              templateLocation: "Linked artifact"
              csmFile: "$(System.DefaultWorkingDirectory)/infra/MySql/deploy.mySql.json"
              csmParametersFile: "$(System.DefaultWorkingDirectory)/infra/MySql/params.mySql001.json"
              deploymentMode: "Validation"
              overrideParameters: >
                -mySqlServerAdministratorLoginPassword "$(password)"
                -tags "${{ variables.AZURE_TAGS }}"

          # Deploy databricks 001 - validation
          - task: AzureResourceManagerTemplateDeployment@3
            name: databricks_001_validation
            displayName: Deploy databricks 001 - validation
            enabled: true
            continueOnError: false
            inputs:
              deploymentScope: "Resource Group"
              azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
              subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
              action: "Create Or Update Resource Group"
              resourceGroupName: ${{ variables.AZURE_RESOURCE_GROUP_NAME_PROCESSINGDOMAIN }}
              location: ${{ variables.AZURE_LOCATION }}
              templateLocation: "Linked artifact"
              csmFile: "$(System.DefaultWorkingDirectory)/infra/Databricks/deploy.databricks.json"
              csmParametersFile: "$(System.DefaultWorkingDirectory)/infra/Databricks/params.databricks001.json"
              deploymentMode: "Validation"
              overrideParameters: >
                -tags "${{ variables.AZURE_TAGS }}"

          # Deploy databricks 002 - validation
          - task: AzureResourceManagerTemplateDeployment@3
            name: databricks_002_validation
            displayName: Deploy databricks 002 - validation
            enabled: true
            continueOnError: false
            inputs:
              deploymentScope: "Resource Group"
              azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
              subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
              action: "Create Or Update Resource Group"
              resourceGroupName: ${{ variables.AZURE_RESOURCE_GROUP_NAME_PROCESSINGPRODUCT }}
              location: ${{ variables.AZURE_LOCATION }}
              templateLocation: "Linked artifact"
              csmFile: "$(System.DefaultWorkingDirectory)/infra/Databricks/deploy.databricks.json"
              csmParametersFile: "$(System.DefaultWorkingDirectory)/infra/Databricks/params.databricks002.json"
              deploymentMode: "Validation"
              overrideParameters: >
                -tags "${{ variables.AZURE_TAGS }}"

          # Deploy event hub 001 - validation
          - task: AzureResourceManagerTemplateDeployment@3
            name: event_hub_001_validation
            displayName: Deploy event hub 001 - validation
            enabled: true
            continueOnError: false
            inputs:
              deploymentScope: "Resource Group"
              azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
              subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
              action: "Create Or Update Resource Group"
              resourceGroupName: ${{ variables.AZURE_RESOURCE_GROUP_NAME_PROCESSINGDOMAIN }}
              location: ${{ variables.AZURE_LOCATION }}
              templateLocation: "Linked artifact"
              csmFile: "$(System.DefaultWorkingDirectory)/infra/EventHub/deploy.eventHub.json"
              csmParametersFile: "$(System.DefaultWorkingDirectory)/infra/EventHub/params.eventHub001.json"
              deploymentMode: "Validation"
              overrideParameters: >
                -tags "${{ variables.AZURE_TAGS }}"

          # Deploy Data Factory 001 - validation
          - task: AzureResourceManagerTemplateDeployment@3
            name: data_factory_001_validation
            displayName: Deploy Data Factory 001 - validation
            enabled: true
            continueOnError: false
            inputs:
              deploymentScope: "Resource Group"
              azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
              subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
              action: "Create Or Update Resource Group"
              resourceGroupName: ${{ variables.AZURE_RESOURCE_GROUP_NAME_PROCESSINGDOMAIN }}
              location: ${{ variables.AZURE_LOCATION }}
              templateLocation: "Linked artifact"
              csmFile: "$(System.DefaultWorkingDirectory)/infra/DataFactory/deploy.dataFactory.json"
              csmParametersFile: "$(System.DefaultWorkingDirectory)/infra/DataFactory/params.dataFactory001.json"
              deploymentMode: "Validation"
              overrideParameters: >
                -tags "${{ variables.AZURE_TAGS }}"

          # Deploy Data Factory 002 - validation
          - task: AzureResourceManagerTemplateDeployment@3
            name: data_factory_002_validation
            displayName: Deploy Data Factory 002 - validation
            enabled: true
            continueOnError: false
            inputs:
              deploymentScope: "Resource Group"
              azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
              subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
              action: "Create Or Update Resource Group"
              resourceGroupName: ${{ variables.AZURE_RESOURCE_GROUP_NAME_INTEGRATION }}
              location: ${{ variables.AZURE_LOCATION }}
              templateLocation: "Linked artifact"
              csmFile: "$(System.DefaultWorkingDirectory)/infra/DataFactory/deploy.dataFactory.json"
              csmParametersFile: "$(System.DefaultWorkingDirectory)/infra/DataFactory/params.dataFactory002.json"
              deploymentMode: "Validation"
              overrideParameters: >
                -tags "${{ variables.AZURE_TAGS }}"

          # Deploy Artifact Storage Account 001 - validation
          - task: AzureResourceManagerTemplateDeployment@3
            name: artifact_storage_001_validation
            displayName: Deploy Artifact Storage Account 001 - validation
            enabled: true
            continueOnError: false
            inputs:
              deploymentScope: "Resource Group"
              azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
              subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
              action: "Create Or Update Resource Group"
              resourceGroupName: ${{ variables.AZURE_RESOURCE_GROUP_NAME_INTEGRATION }}
              location: ${{ variables.AZURE_LOCATION }}
              templateLocation: "Linked artifact"
              csmFile: "$(System.DefaultWorkingDirectory)/infra/ArtifactStorage/deploy.storage.json"
              csmParametersFile: "$(System.DefaultWorkingDirectory)/infra/ArtifactStorage/params.storage001.json"
              deploymentMode: "Validation"
              overrideParameters: >
                -tags "${{ variables.AZURE_TAGS }}"

          # Generate Password
          - task: PowerShell@2
            name: generate_password_003
            displayName: Generate Password
            enabled: true
            continueOnError: false
            inputs:
              targetType: "filePath"
              filePath: "$(System.DefaultWorkingDirectory)/code/GeneratePassword.ps1"
              errorActionPreference: "stop"
              failOnStderr: false
              ignoreLASTEXITCODE: false
              pwsh: true

          # Deploy SHIR 001 - validation
          - task: AzureResourceManagerTemplateDeployment@3
            name: shir_001_validation
            displayName: Deploy SHIR 001 - validation
            enabled: true
            continueOnError: false
            inputs:
              deploymentScope: "Resource Group"
              azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
              subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
              action: "Create Or Update Resource Group"
              resourceGroupName: ${{ variables.AZURE_RESOURCE_GROUP_NAME_INTEGRATION }}
              location: ${{ variables.AZURE_LOCATION }}
              templateLocation: "Linked artifact"
              csmFile: "$(System.DefaultWorkingDirectory)/infra/SelfHostedIntegrationRuntimeDataFactory/deploy.shir.json"
              csmParametersFile: "$(System.DefaultWorkingDirectory)/infra/SelfHostedIntegrationRuntimeDataFactory/params.shir001.json"
              deploymentMode: "Validation"
              overrideParameters: >
                -vmssAdminPassword "$(password)"
                -tags "${{ variables.AZURE_TAGS }}"

          # # Generate Password
          # - task: PowerShell@2
          #   name: generate_password_004
          #   displayName: Generate Password
          #   enabled: true
          #   continueOnError: false
          #   inputs:
          #     targetType: 'filePath'
          #     filePath: '$(System.DefaultWorkingDirectory)/code/GeneratePassword.ps1'
          #     errorActionPreference: 'stop'
          #     failOnStderr: false
          #     ignoreLASTEXITCODE: false
          #     pwsh: true

          # # Deploy SHIR 002 - validation
          # - task: AzureResourceManagerTemplateDeployment@3
          #   name: shir_002_validation
          #   displayName: Deploy SHIR 002 - validation
          #   enabled: true
          #   continueOnError: false
          #   inputs:
          #     deploymentScope: 'Resource Group'
          #     azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
          #     subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
          #     action: 'Create Or Update Resource Group'
          #     resourceGroupName: ${{ variables.AZURE_RESOURCE_GROUP_NAME_INTEGRATION }}
          #     location: ${{ variables.AZURE_LOCATION }}
          #     templateLocation: 'Linked artifact'
          #     csmFile: '$(System.DefaultWorkingDirectory)/infra/SelfHostedIntegrationRuntimePurview/deploy.shir.json'
          #     csmParametersFile: '$(System.DefaultWorkingDirectory)/infra/SelfHostedIntegrationRuntimePurview/params.shir001.json'
          #     deploymentMode: 'Validation'
          #     overrideParameters: >
          #       -vmssAdminPassword "$(password)"
          #       -tags "${{ variables.AZURE_TAGS }}"
          #       -shirAuthKey "$(shirAuthKey)"

          # Generate Password
          - task: PowerShell@2
            name: generate_password_005
            displayName: Generate Password
            enabled: true
            continueOnError: false
            inputs:
              targetType: "filePath"
              filePath: "$(System.DefaultWorkingDirectory)/code/GeneratePassword.ps1"
              errorActionPreference: "stop"
              failOnStderr: false
              ignoreLASTEXITCODE: false
              pwsh: true

          # Deploy synapse 001 - validation
          - task: AzureResourceManagerTemplateDeployment@3
            name: synapse_001_validation
            displayName: Deploy synapse 001 - validation
            enabled: true
            continueOnError: false
            inputs:
              deploymentScope: "Resource Group"
              azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
              subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
              action: "Create Or Update Resource Group"
              resourceGroupName: ${{ variables.AZURE_RESOURCE_GROUP_NAME_PROCESSINGPRODUCT }}
              location: ${{ variables.AZURE_LOCATION }}
              templateLocation: "Linked artifact"
              csmFile: "$(System.DefaultWorkingDirectory)/infra/Synapse/deploy.synapse.json"
              csmParametersFile: "$(System.DefaultWorkingDirectory)/infra/Synapse/params.synapse001.json"
              deploymentMode: "Validation"
              overrideParameters: >
                -synapseSqlAdministratorPassword "$(password)"
                -tags "${{ variables.AZURE_TAGS }}"

          # Share Self Hosted Integration Runtime 001 - validation
          - task: AzureResourceManagerTemplateDeployment@3
            name: share_self_hosted_integration_runtime_001_validation
            displayName: Share Self Hosted Integration Runtime 001 - validation
            enabled: true
            continueOnError: true
            inputs:
              deploymentScope: "Resource Group"
              azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
              subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
              action: "Create Or Update Resource Group"
              resourceGroupName: ${{ variables.AZURE_RESOURCE_GROUP_NAME_PROCESSINGDOMAIN }}
              location: ${{ variables.AZURE_LOCATION }}
              templateLocation: "Linked artifact"
              csmFile: "$(System.DefaultWorkingDirectory)/infra/ShareSelfHostedIntegrationRuntime/deploy.shareSelfHostedIntegrationRuntime.json"
              csmParametersFile: "$(System.DefaultWorkingDirectory)/infra/ShareSelfHostedIntegrationRuntime/params.shareSelfHostedIntegrationRuntime001.json"
              deploymentMode: "Validation"

  - stage: Deployment
    displayName: "Deployment of ARM templates"
    dependsOn: Validation
    # condition: and(succeeded(), in(variables['Build.Reason'], 'IndividualCI', 'BatchedCI'))
    jobs:
      - job: Deployment
        displayName: "Deployment of ARM templates"
        continueOnError: false
        pool:
          vmImage: "ubuntu-latest"

        steps:
          # Checkout repository
          - checkout: self
            name: checkout_repository
            displayName: "Checkout repository"
            submodules: true
            lfs: false
            clean: true
            continueOnError: false
            enabled: true

          # Deploy vnet
          - task: AzureResourceManagerTemplateDeployment@3
            name: vnet_deployment
            displayName: Deploy vnet
            enabled: true
            continueOnError: false
            inputs:
              deploymentScope: "Resource Group"
              azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
              subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
              action: "Create Or Update Resource Group"
              resourceGroupName: ${{ variables.AZURE_RESOURCE_GROUP_NAME_NETWORK }}
              location: ${{ variables.AZURE_LOCATION }}
              templateLocation: "Linked artifact"
              csmFile: "$(System.DefaultWorkingDirectory)/infra/VirtualNetwork/deploy.vnet.json"
              csmParametersFile: "$(System.DefaultWorkingDirectory)/infra/VirtualNetwork/params.vnet.json"
              deploymentMode: "Incremental"
              overrideParameters: >
                -tags "${{ variables.AZURE_TAGS }}"

          # Deploy Vnet Peering 001
          - task: AzureResourceManagerTemplateDeployment@3
            name: vnet_peering_001_deployment
            displayName: Deploy Vnet Peering 001
            enabled: true
            continueOnError: false
            inputs:
              deploymentScope: "Resource Group"
              azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
              subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
              action: "Create Or Update Resource Group"
              resourceGroupName: ${{ variables.AZURE_RESOURCE_GROUP_NAME_NETWORK }}
              location: ${{ variables.AZURE_LOCATION }}
              templateLocation: "Linked artifact"
              csmFile: "$(System.DefaultWorkingDirectory)/infra/VirtualNetworkPeering/deploy.vnetPeering.json"
              csmParametersFile: "$(System.DefaultWorkingDirectory)/infra/VirtualNetworkPeering/params.vnetPeering001.json"
              deploymentMode: "Incremental"

          # Deploy Vnet Peering 002
          - task: AzureResourceManagerTemplateDeployment@3
            name: vnet_peering_002_deployment
            displayName: Deploy Vnet Peering 002
            enabled: true
            continueOnError: false
            inputs:
              deploymentScope: "Resource Group"
              azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
              subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
              action: "Create Or Update Resource Group"
              resourceGroupName: ${{ variables.AZURE_RESOURCE_GROUP_NAME_NETWORK }}
              location: ${{ variables.AZURE_LOCATION }}
              templateLocation: "Linked artifact"
              csmFile: "$(System.DefaultWorkingDirectory)/infra/VirtualNetworkPeering/deploy.vnetPeering.json"
              csmParametersFile: "$(System.DefaultWorkingDirectory)/infra/VirtualNetworkPeering/params.vnetPeering002.json"
              deploymentMode: "Incremental"

          # Deploy key vault 001
          - task: AzureResourceManagerTemplateDeployment@3
            name: key_vault_001_deployment
            displayName: Deploy key vault 001
            enabled: true
            continueOnError: false
            inputs:
              deploymentScope: "Resource Group"
              azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
              subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
              action: "Create Or Update Resource Group"
              resourceGroupName: ${{ variables.AZURE_RESOURCE_GROUP_NAME_METADATA }}
              location: ${{ variables.AZURE_LOCATION }}
              templateLocation: "Linked artifact"
              csmFile: "$(System.DefaultWorkingDirectory)/infra/KeyVault/deploy.keyVault.json"
              csmParametersFile: "$(System.DefaultWorkingDirectory)/infra/KeyVault/params.keyVault001.json"
              deploymentMode: "Incremental"
              overrideParameters: >
                -tags "${{ variables.AZURE_TAGS }}"

          # Deploy Key Vault 002
          - task: AzureResourceManagerTemplateDeployment@3
            name: key_vault_002_deployment
            displayName: Deploy Key Vault 002
            enabled: true
            continueOnError: false
            inputs:
              deploymentScope: "Resource Group"
              azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
              subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
              action: "Create Or Update Resource Group"
              resourceGroupName: ${{ variables.AZURE_RESOURCE_GROUP_NAME_METADATA }}
              location: ${{ variables.AZURE_LOCATION }}
              templateLocation: "Linked artifact"
              csmFile: "$(System.DefaultWorkingDirectory)/infra/KeyVault/deploy.keyVault.json"
              csmParametersFile: "$(System.DefaultWorkingDirectory)/infra/KeyVault/params.keyVault002.json"
              deploymentMode: "Incremental"
              overrideParameters: >
                -tags "${{ variables.AZURE_TAGS }}"

          # Deploy Key Vault 003
          - task: AzureResourceManagerTemplateDeployment@3
            name: key_vault_003_deployment
            displayName: Deploy Key Vault 003
            enabled: true
            continueOnError: false
            inputs:
              deploymentScope: "Resource Group"
              azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
              subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
              action: "Create Or Update Resource Group"
              resourceGroupName: ${{ variables.AZURE_RESOURCE_GROUP_NAME_LOGGING }}
              location: ${{ variables.AZURE_LOCATION }}
              templateLocation: "Linked artifact"
              csmFile: "$(System.DefaultWorkingDirectory)/infra/KeyVault/deploy.keyVault.json"
              csmParametersFile: "$(System.DefaultWorkingDirectory)/infra/KeyVault/params.keyVault003.json"
              deploymentMode: "Incremental"
              overrideParameters: >
                -tags "${{ variables.AZURE_TAGS }}"

          # Deploy Log Analytics Workspace 001
          - task: AzureResourceManagerTemplateDeployment@3
            name: log_analytics_001_deployment
            displayName: Deploy Log Analytics Workspace 001
            enabled: true
            continueOnError: false
            inputs:
              deploymentScope: "Resource Group"
              azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
              subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
              action: "Create Or Update Resource Group"
              resourceGroupName: ${{ variables.AZURE_RESOURCE_GROUP_NAME_LOGGING }}
              location: ${{ variables.AZURE_LOCATION }}
              templateLocation: "Linked artifact"
              csmFile: "$(System.DefaultWorkingDirectory)/infra/LogAnalytics/deploy.logAnalytics.json"
              csmParametersFile: "$(System.DefaultWorkingDirectory)/infra/LogAnalytics/params.logAnalytics001.json"
              deploymentMode: "Incremental"
              deploymentOutputs: "logAnalytics001Details"
              overrideParameters: >
                -tags "${{ variables.AZURE_TAGS }}"

          # Deploy storage account 001 - raw
          - task: AzureResourceManagerTemplateDeployment@3
            name: storage_account_001_deployment
            displayName: Deploy storage account 001 - raw
            enabled: true
            continueOnError: false
            inputs:
              deploymentScope: "Resource Group"
              azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
              subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
              action: "Create Or Update Resource Group"
              resourceGroupName: ${{ variables.AZURE_RESOURCE_GROUP_NAME_STORAGE }}
              location: ${{ variables.AZURE_LOCATION }}
              templateLocation: "Linked artifact"
              csmFile: "$(System.DefaultWorkingDirectory)/infra/Storage/deploy.storage.json"
              csmParametersFile: "$(System.DefaultWorkingDirectory)/infra/Storage/params.storage001.json"
              deploymentMode: "Incremental"
              overrideParameters: >
                -tags "${{ variables.AZURE_TAGS }}"

          # Deploy storage account 002 - enriched & curated
          - task: AzureResourceManagerTemplateDeployment@3
            name: storage_account_002_deployment
            displayName: Deploy storage account 002 - enriched & curated
            enabled: true
            continueOnError: false
            inputs:
              deploymentScope: "Resource Group"
              azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
              subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
              action: "Create Or Update Resource Group"
              resourceGroupName: ${{ variables.AZURE_RESOURCE_GROUP_NAME_STORAGE }}
              location: ${{ variables.AZURE_LOCATION }}
              templateLocation: "Linked artifact"
              csmFile: "$(System.DefaultWorkingDirectory)/infra/Storage/deploy.storage.json"
              csmParametersFile: "$(System.DefaultWorkingDirectory)/infra/Storage/params.storage002.json"
              deploymentMode: "Incremental"
              overrideParameters: >
                -tags "${{ variables.AZURE_TAGS }}"

          # Deploy storage account 003 - workspace
          - task: AzureResourceManagerTemplateDeployment@3
            name: storage_account_003_deployment
            displayName: Deploy storage account 003 - workspace
            enabled: true
            continueOnError: false
            inputs:
              deploymentScope: "Resource Group"
              azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
              subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
              action: "Create Or Update Resource Group"
              resourceGroupName: ${{ variables.AZURE_RESOURCE_GROUP_NAME_STORAGE }}
              location: ${{ variables.AZURE_LOCATION }}
              templateLocation: "Linked artifact"
              csmFile: "$(System.DefaultWorkingDirectory)/infra/Storage/deploy.storage.json"
              csmParametersFile: "$(System.DefaultWorkingDirectory)/infra/Storage/params.storage003.json"
              deploymentMode: "Incremental"
              overrideParameters: >
                -tags "${{ variables.AZURE_TAGS }}"

          # Deploy secret storage account 001 - raw
          - task: AzureResourceManagerTemplateDeployment@3
            name: secret_storage_001_deployment
            displayName: Deploy secret storage account 001 - raw
            enabled: true
            continueOnError: false
            inputs:
              deploymentScope: "Resource Group"
              azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
              subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
              action: "Create Or Update Resource Group"
              resourceGroupName: ${{ variables.AZURE_RESOURCE_GROUP_NAME_SECRETSTORAGE }}
              location: ${{ variables.AZURE_LOCATION }}
              templateLocation: "Linked artifact"
              csmFile: "$(System.DefaultWorkingDirectory)/infra/Storage/deploy.storage.json"
              csmParametersFile: "$(System.DefaultWorkingDirectory)/infra/Storage/params.secret_storage001.json"
              deploymentMode: "Incremental"
              overrideParameters: >
                -tags "${{ variables.AZURE_TAGS }}"

          # Deploy secret storage account 002 - enriched & curated
          - task: AzureResourceManagerTemplateDeployment@3
            name: secret_storage_002_deployment
            displayName: Deploy secret storage account 002 - enriched & curated
            enabled: true
            continueOnError: false
            inputs:
              deploymentScope: "Resource Group"
              azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
              subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
              action: "Create Or Update Resource Group"
              resourceGroupName: ${{ variables.AZURE_RESOURCE_GROUP_NAME_SECRETSTORAGE }}
              location: ${{ variables.AZURE_LOCATION }}
              templateLocation: "Linked artifact"
              csmFile: "$(System.DefaultWorkingDirectory)/infra/Storage/deploy.storage.json"
              csmParametersFile: "$(System.DefaultWorkingDirectory)/infra/Storage/params.secret_storage002.json"
              deploymentMode: "Incremental"
              overrideParameters: >
                -tags "${{ variables.AZURE_TAGS }}"

          # Deploy secret storage account 003 - workspace
          - task: AzureResourceManagerTemplateDeployment@3
            name: secret_storage_003_deployment
            displayName: Deploy secret storage account 003 - workspace
            enabled: true
            continueOnError: false
            inputs:
              deploymentScope: "Resource Group"
              azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
              subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
              action: "Create Or Update Resource Group"
              resourceGroupName: ${{ variables.AZURE_RESOURCE_GROUP_NAME_SECRETSTORAGE }}
              location: ${{ variables.AZURE_LOCATION }}
              templateLocation: "Linked artifact"
              csmFile: "$(System.DefaultWorkingDirectory)/infra/Storage/deploy.storage.json"
              csmParametersFile: "$(System.DefaultWorkingDirectory)/infra/Storage/params.secret_storage003.json"
              deploymentMode: "Incremental"
              overrideParameters: >
                -tags "${{ variables.AZURE_TAGS }}"

          # Deploy external storage account 001
          - task: AzureResourceManagerTemplateDeployment@3
            name: external_storage_001_deployment
            displayName: Deploy external storage account 001
            enabled: true
            continueOnError: false
            inputs:
              deploymentScope: "Resource Group"
              azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
              subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
              action: "Create Or Update Resource Group"
              resourceGroupName: ${{ variables.AZURE_RESOURCE_GROUP_NAME_EXTERNALSTORAGE }}
              location: ${{ variables.AZURE_LOCATION }}
              templateLocation: "Linked artifact"
              csmFile: "$(System.DefaultWorkingDirectory)/infra/Storage/deploy.storage.json"
              csmParametersFile: "$(System.DefaultWorkingDirectory)/infra/Storage/params.external_storage001.json"
              deploymentMode: "Incremental"
              overrideParameters: >
                -tags "${{ variables.AZURE_TAGS }}"

          # Generate Password
          - task: PowerShell@2
            name: generate_password_001
            displayName: Generate Password
            enabled: true
            continueOnError: false
            inputs:
              targetType: "filePath"
              filePath: "$(System.DefaultWorkingDirectory)/code/GeneratePassword.ps1"
              errorActionPreference: "stop"
              failOnStderr: false
              ignoreLASTEXITCODE: false
              pwsh: true

          # Deploy sql server 001
          - task: AzureResourceManagerTemplateDeployment@3
            name: sql_server_001_deployment
            displayName: Deploy sql server 001
            enabled: true
            continueOnError: false
            inputs:
              deploymentScope: "Resource Group"
              azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
              subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
              action: "Create Or Update Resource Group"
              resourceGroupName: ${{ variables.AZURE_RESOURCE_GROUP_NAME_METADATA }}
              location: ${{ variables.AZURE_LOCATION }}
              templateLocation: "Linked artifact"
              csmFile: "$(System.DefaultWorkingDirectory)/infra/SqlServer/deploy.sqlServer.json"
              csmParametersFile: "$(System.DefaultWorkingDirectory)/infra/SqlServer/params.sqlServer001.json"
              deploymentMode: "Incremental"
              overrideParameters: >
                -administratorLoginPassword "$(password)"
                -tags "${{ variables.AZURE_TAGS }}"

          # Deploy sql database 001
          - task: AzureResourceManagerTemplateDeployment@3
            name: sql_database_001_deployment
            displayName: Deploy sql database 001
            enabled: true
            continueOnError: false
            inputs:
              deploymentScope: "Resource Group"
              azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
              subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
              action: "Create Or Update Resource Group"
              resourceGroupName: ${{ variables.AZURE_RESOURCE_GROUP_NAME_METADATA }}
              location: ${{ variables.AZURE_LOCATION }}
              templateLocation: "Linked artifact"
              csmFile: "$(System.DefaultWorkingDirectory)/infra/SqlDatabase/deploy.sqlDatabase.json"
              csmParametersFile: "$(System.DefaultWorkingDirectory)/infra/SqlDatabase/params.sqlDatabase001.json"
              deploymentMode: "Incremental"
              overrideParameters: >
                -sqlServerAdministratorLoginPassword "$(password)"
                -tags "${{ variables.AZURE_TAGS }}"

          # Generate Password
          - task: PowerShell@2
            name: generate_password_002
            displayName: Generate Password
            enabled: true
            continueOnError: false
            inputs:
              targetType: "filePath"
              filePath: "$(System.DefaultWorkingDirectory)/code/GeneratePassword.ps1"
              errorActionPreference: "stop"
              failOnStderr: false
              ignoreLASTEXITCODE: false
              pwsh: true

          # # Deploy sql server 002
          # - task: AzureResourceManagerTemplateDeployment@3
          #   name: sql_server_002_deployment
          #   displayName: Deploy sql server 002
          #   enabled: true
          #   continueOnError: false
          #   inputs:
          #     deploymentScope: 'Resource Group'
          #     azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
          #     subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
          #     action: 'Create Or Update Resource Group'
          #     resourceGroupName: ${{ variables.AZURE_RESOURCE_GROUP_NAME_METADATA }}
          #     location: ${{ variables.AZURE_LOCATION }}
          #     templateLocation: 'Linked artifact'
          #     csmFile: '$(System.DefaultWorkingDirectory)/infra/SqlServer/deploy.sqlServer.json'
          #     csmParametersFile: '$(System.DefaultWorkingDirectory)/infra/SqlServer/params.sqlServer002.json'
          #     deploymentMode: 'Incremental'
          #     overrideParameters: >
          #       -administratorLoginPassword "$(password)"
          #       -tags "${{ variables.AZURE_TAGS }}"

          # # Deploy sql database 002
          # - task: AzureResourceManagerTemplateDeployment@3
          #   name: sql_database_002_deployment
          #   displayName: Deploy sql database 002
          #   enabled: true
          #   continueOnError: false
          #   inputs:
          #     deploymentScope: 'Resource Group'
          #     azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
          #     subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
          #     action: 'Create Or Update Resource Group'
          #     resourceGroupName: ${{ variables.AZURE_RESOURCE_GROUP_NAME_METADATA }}
          #     location: ${{ variables.AZURE_LOCATION }}
          #     templateLocation: 'Linked artifact'
          #     csmFile: '$(System.DefaultWorkingDirectory)/infra/SqlDatabase/deploy.sqlDatabase.json'
          #     csmParametersFile: '$(System.DefaultWorkingDirectory)/infra/SqlDatabase/params.sqlDatabase002.json'
          #     deploymentMode: 'Incremental'
          #     deploymentOutputs: 'hivemetastoreDetails'
          #     overrideParameters: >
          #       -sqlServerAdministratorLoginPassword "$(password)"
          #       -tags "${{ variables.AZURE_TAGS }}"

          # Deploy My SQL 001
          - task: AzureResourceManagerTemplateDeployment@3
            name: mysql_001_deployment
            displayName: Deploy My SQL 001
            enabled: true
            continueOnError: false
            inputs:
              deploymentScope: "Resource Group"
              azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
              subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
              action: "Create Or Update Resource Group"
              resourceGroupName: ${{ variables.AZURE_RESOURCE_GROUP_NAME_METADATA }}
              location: ${{ variables.AZURE_LOCATION }}
              templateLocation: "Linked artifact"
              csmFile: "$(System.DefaultWorkingDirectory)/infra/MySql/deploy.mySql.json"
              csmParametersFile: "$(System.DefaultWorkingDirectory)/infra/MySql/params.mySql001.json"
              deploymentMode: "Incremental"
              deploymentOutputs: "hivemetastoreDetails001"
              overrideParameters: >
                -mySqlServerAdministratorLoginPassword "$(password)"
                -tags "${{ variables.AZURE_TAGS }}"

          # Restart MySQL 001
          - task: AzureCLI@2
            name: mysql_001_restart
            displayName: Restart MySQL 001
            enabled: true
            continueOnError: false
            inputs:
              azureSubscription: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
              scriptType: bash
              scriptLocation: "scriptPath"
              scriptPath: "$(System.DefaultWorkingDirectory)/code/restart-mysqlserver.sh"
              addSpnToEnvironment: false
              failOnStandardError: false
              arguments: >
                --mysqlserverid $(hivemetastoreDetails001.mySqlDatabaseId.value)

          # Deploy Databricks 001
          - task: AzureResourceManagerTemplateDeployment@3
            name: databricks_001_deployment
            displayName: Deploy Databricks 001
            enabled: true
            continueOnError: false
            inputs:
              deploymentScope: "Resource Group"
              azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
              subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
              action: "Create Or Update Resource Group"
              resourceGroupName: ${{ variables.AZURE_RESOURCE_GROUP_NAME_PROCESSINGDOMAIN }}
              location: ${{ variables.AZURE_LOCATION }}
              templateLocation: "Linked artifact"
              csmFile: "$(System.DefaultWorkingDirectory)/infra/Databricks/deploy.databricks.json"
              csmParametersFile: "$(System.DefaultWorkingDirectory)/infra/Databricks/params.databricks001.json"
              deploymentMode: "Incremental"
              deploymentOutputs: "databricksDetails001"
              overrideParameters: >
                -tags "${{ variables.AZURE_TAGS }}"

          # # Setup Databricks 001 - Disabled, because automation is currently blocked. We are tracking this actively and add this very soon
          # - task: AzureCLI@2
          #   name: setup_databricks_001
          #   displayName: Setup Databricks 001
          #   enabled: true
          #   continueOnError: false
          #   inputs:
          #     azureSubscription: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
          #     scriptType: pscore
          #     scriptLocation: 'scriptPath'
          #     scriptPath: '$(System.DefaultWorkingDirectory)/code/SetupDatabricks.ps1'
          #     powerShellErrorActionPreference: 'stop'
          #     addSpnToEnvironment: true
          #     failOnStandardError: false
          #     powerShellIgnoreLASTEXITCODE: false
          #     arguments: >
          #       -DatabricksWorkspaceName $(databricksDetails001.databricksWorkspaceName.value)
          #       -DatabricksWorkspaceId $(databricksDetails001.databricksWorkspaceId.value)
          #       -DatabricksApiUrl $(databricksDetails001.databricksApiUrl.value)
          #       -DatabricksSubscriptionId $(databricksDetails001.databricksSubscriptionId.value)
          #       -DatabricksResourceGroupName $(databricksDetails001.databricksResourceGroupName.value)
          #       -HiveKeyVaultId $(hivemetastoreDetails001.mySqlDatabaseKeyVaultId.value)
          #       -HiveConnectionStringSecretName $(hivemetastoreDetails001.mySqlConnectionStringSecretName.value)
          #       -HiveUsernameSecretName $(hivemetastoreDetails001.mySqlUsernameSecretName.value)
          #       -HivePasswordSecretName $(hivemetastoreDetails001.mySqlPasswordSecretName.value)
          #       -LogAnalyticsKeyVaultId $(logAnalytics001Details.logAnalyticsKeyVaultId.value)
          #       -LogAnalyticsWorkspaceIdSecretName $(logAnalytics001Details.logAnalyticsWorkspaceIdSecretName.value)
          #       -LogAnalyticsWorkspaceKeySecretName $(logAnalytics001Details.logAnalyticsWorkspaceKeySecretName.value)
          #       -HiveVersion '2.3.7'
          #       -HadoopVersion '2.7.4'

          # Setup Databricks 001 - Manual Step - Guidance
          - bash: |
              echo "Please run the following Powershell command to setup Databricks Workspace 001:
              ./code/SetupDatabricksManually.ps1 \`
                -UserEmail '{userEmail}' \`
                -UserPassword '{password}' \`
                -ClientId '{clientId}' \`
                -TenantId '{tenantId}' \`
                -DatabricksWorkspaceName $(databricksDetails001.databricksWorkspaceName.value) \`
                -DatabricksWorkspaceId $(databricksDetails001.databricksWorkspaceId.value) \`
                -DatabricksApiUrl $(databricksDetails001.databricksApiUrl.value) \`
                -DatabricksSubscriptionId $(databricksDetails001.databricksSubscriptionId.value) \`
                -DatabricksResourceGroupName $(databricksDetails001.databricksResourceGroupName.value) \`
                -HiveKeyVaultId $(hivemetastoreDetails001.mySqlDatabaseKeyVaultId.value) \`
                -HiveConnectionStringSecretName $(hivemetastoreDetails001.mySqlConnectionStringSecretName.value) \`
                -HiveUsernameSecretName $(hivemetastoreDetails001.mySqlUsernameSecretName.value) \`
                -HivePasswordSecretName $(hivemetastoreDetails001.mySqlPasswordSecretName.value) \`
                -LogAnalyticsKeyVaultId $(logAnalytics001Details.logAnalyticsKeyVaultId.value) \`
                -LogAnalyticsWorkspaceIdSecretName $(logAnalytics001Details.logAnalyticsWorkspaceIdSecretName.value) \`
                -LogAnalyticsWorkspaceKeySecretName $(logAnalytics001Details.logAnalyticsWorkspaceKeySecretName.value) \`
                -HiveVersion '2.3.7' \`
                -HadoopVersion '2.7.4'
              "
            name: setup_databricks_001_manual
            displayName: Setup Databricks 001 - Manual Step - Guidance

          # Deploy Databricks 002
          - task: AzureResourceManagerTemplateDeployment@3
            name: databricks_002_deployment
            displayName: Deploy Databricks 002
            enabled: true
            continueOnError: false
            inputs:
              deploymentScope: "Resource Group"
              azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
              subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
              action: "Create Or Update Resource Group"
              resourceGroupName: ${{ variables.AZURE_RESOURCE_GROUP_NAME_PROCESSINGPRODUCT }}
              location: ${{ variables.AZURE_LOCATION }}
              templateLocation: "Linked artifact"
              csmFile: "$(System.DefaultWorkingDirectory)/infra/Databricks/deploy.databricks.json"
              csmParametersFile: "$(System.DefaultWorkingDirectory)/infra/Databricks/params.databricks002.json"
              deploymentMode: "Incremental"
              deploymentOutputs: "databricksDetails002"
              overrideParameters: >
                -tags "${{ variables.AZURE_TAGS }}"

          # # Setup databricks 002 - Disabled, because automation is currently blocked. We are tracking this actively and add this very soon
          # - task: AzureCLI@2
          #   name: setup_databricks_002
          #   displayName: Setup databricks 002
          #   enabled: true
          #   continueOnError: false
          #   inputs:
          #     azureSubscription: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
          #     scriptType: pscore
          #     scriptLocation: 'scriptPath'
          #     scriptPath: '$(System.DefaultWorkingDirectory)/code/SetupDatabricks.ps1'
          #     powerShellErrorActionPreference: 'stop'
          #     addSpnToEnvironment: true
          #     failOnStandardError: false
          #     powerShellIgnoreLASTEXITCODE: false
          #     arguments: >
          #       -DatabricksWorkspaceName $(databricksDetails002.databricksWorkspaceName.value)
          #       -DatabricksWorkspaceId $(databricksDetails002.databricksWorkspaceId.value)
          #       -DatabricksApiUrl $(databricksDetails002.databricksApiUrl.value)
          #       -DatabricksSubscriptionId $(databricksDetails002.databricksSubscriptionId.value)
          #       -DatabricksResourceGroupName $(databricksDetails002.databricksResourceGroupName.value)
          #       -HiveKeyVaultId $(hivemetastoreDetails001.mySqlDatabaseKeyVaultId.value)
          #       -HiveConnectionStringSecretName $(hivemetastoreDetails001.mySqlConnectionStringSecretName.value)
          #       -HiveUsernameSecretName $(hivemetastoreDetails001.mySqlUsernameSecretName.value)
          #       -HivePasswordSecretName $(hivemetastoreDetails001.mySqlPasswordSecretName.value)
          #       -LogAnalyticsKeyVaultId $(logAnalytics001Details.logAnalyticsKeyVaultId.value)
          #       -LogAnalyticsWorkspaceIdSecretName $(logAnalytics001Details.logAnalyticsWorkspaceIdSecretName.value)
          #       -LogAnalyticsWorkspaceKeySecretName $(logAnalytics001Details.logAnalyticsWorkspaceKeySecretName.value)
          #       -HiveVersion '2.3.7'
          #       -HadoopVersion '2.7.4'

          # Setup Databricks 002 - Manual Step - Guidance
          - bash: |
              echo "Please run the following Powershell command to setup Databricks Workspace 002:
              ./code/SetupDatabricksManually.ps1 \`
                -UserEmail '{userEmail}' \`
                -UserPassword '{password}' \`
                -ClientId '{clientId}' \`
                -TenantId '{tenantId}' \`
                -DatabricksWorkspaceName $(databricksDetails002.databricksWorkspaceName.value) \`
                -DatabricksWorkspaceId $(databricksDetails002.databricksWorkspaceId.value) \`
                -DatabricksApiUrl $(databricksDetails002.databricksApiUrl.value) \`
                -DatabricksSubscriptionId $(databricksDetails002.databricksSubscriptionId.value) \`
                -DatabricksResourceGroupName $(databricksDetails002.databricksResourceGroupName.value) \`
                -HiveKeyVaultId $(hivemetastoreDetails001.mySqlDatabaseKeyVaultId.value) \`
                -HiveConnectionStringSecretName $(hivemetastoreDetails001.mySqlConnectionStringSecretName.value) \`
                -HiveUsernameSecretName $(hivemetastoreDetails001.mySqlUsernameSecretName.value) \`
                -HivePasswordSecretName $(hivemetastoreDetails001.mySqlPasswordSecretName.value) \`
                -LogAnalyticsKeyVaultId $(logAnalytics001Details.logAnalyticsKeyVaultId.value) \`
                -LogAnalyticsWorkspaceIdSecretName $(logAnalytics001Details.logAnalyticsWorkspaceIdSecretName.value) \`
                -LogAnalyticsWorkspaceKeySecretName $(logAnalytics001Details.logAnalyticsWorkspaceKeySecretName.value) \`
                -HiveVersion '2.3.7' \`
                -HadoopVersion '2.7.4'
              "
            name: setup_databricks_002_manual
            displayName: Setup Databricks 002 - Manual Step - Guidance

          # Deploy Event Hub 001
          - task: AzureResourceManagerTemplateDeployment@3
            name: event_hub_001_deployment
            displayName: Deploy Event Hub 001
            enabled: true
            continueOnError: false
            inputs:
              deploymentScope: "Resource Group"
              azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
              subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
              action: "Create Or Update Resource Group"
              resourceGroupName: ${{ variables.AZURE_RESOURCE_GROUP_NAME_PROCESSINGDOMAIN }}
              location: ${{ variables.AZURE_LOCATION }}
              templateLocation: "Linked artifact"
              csmFile: "$(System.DefaultWorkingDirectory)/infra/EventHub/deploy.eventHub.json"
              csmParametersFile: "$(System.DefaultWorkingDirectory)/infra/EventHub/params.eventHub001.json"
              deploymentMode: "Incremental"
              overrideParameters: >
                -tags "${{ variables.AZURE_TAGS }}"

          # Deploy data factory 001
          - task: AzureResourceManagerTemplateDeployment@3
            name: data_factory_001_deployment
            displayName: Deploy data factory 001
            enabled: true
            continueOnError: false
            inputs:
              deploymentScope: "Resource Group"
              azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
              subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
              action: "Create Or Update Resource Group"
              resourceGroupName: ${{ variables.AZURE_RESOURCE_GROUP_NAME_PROCESSINGDOMAIN }}
              location: ${{ variables.AZURE_LOCATION }}
              templateLocation: "Linked artifact"
              csmFile: "$(System.DefaultWorkingDirectory)/infra/DataFactory/deploy.dataFactory.json"
              csmParametersFile: "$(System.DefaultWorkingDirectory)/infra/DataFactory/params.dataFactory001.json"
              deploymentMode: "Incremental"
              overrideParameters: >
                -tags "${{ variables.AZURE_TAGS }}"

          # Deploy Data Factory 002
          - task: AzureResourceManagerTemplateDeployment@3
            name: data_factory_002_deployment
            displayName: Deploy Data Factory 002
            enabled: true
            continueOnError: false
            inputs:
              deploymentScope: "Resource Group"
              azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
              subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
              action: "Create Or Update Resource Group"
              resourceGroupName: ${{ variables.AZURE_RESOURCE_GROUP_NAME_INTEGRATION }}
              location: ${{ variables.AZURE_LOCATION }}
              templateLocation: "Linked artifact"
              csmFile: "$(System.DefaultWorkingDirectory)/infra/DataFactory/deploy.dataFactory.json"
              csmParametersFile: "$(System.DefaultWorkingDirectory)/infra/DataFactory/params.dataFactory002.json"
              deploymentMode: "Incremental"
              overrideParameters: >
                -tags "${{ variables.AZURE_TAGS }}"

          # Deploy Artifact Storage Account 001
          - task: AzureResourceManagerTemplateDeployment@3
            name: artifact_storage_001_deployment
            displayName: Deploy Artifact Storage Account 001
            enabled: true
            continueOnError: false
            inputs:
              deploymentScope: "Resource Group"
              azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
              subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
              action: "Create Or Update Resource Group"
              resourceGroupName: ${{ variables.AZURE_RESOURCE_GROUP_NAME_INTEGRATION }}
              location: ${{ variables.AZURE_LOCATION }}
              templateLocation: "Linked artifact"
              csmFile: "$(System.DefaultWorkingDirectory)/infra/ArtifactStorage/deploy.storage.json"
              csmParametersFile: "$(System.DefaultWorkingDirectory)/infra/ArtifactStorage/params.storage001.json"
              deploymentMode: "Incremental"
              deploymentOutputs: "storageDetails"
              overrideParameters: >
                -tags "${{ variables.AZURE_TAGS }}"

          # Upload File to Storage Account 001
          - task: AzurePowerShell@4
            name: upload_file_001
            displayName: Upload File to Storage Account 001
            enabled: true
            continueOnError: false
            inputs:
              azureSubscription: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
              scriptType: "filePath"
              scriptPath: "$(System.DefaultWorkingDirectory)/code/UploadBlob.ps1"
              scriptArguments:
                -ResourceGroupName ${{ variables.AZURE_RESOURCE_GROUP_NAME_INTEGRATION }}
                -StorageAccountName $(storageDetails.storageAccountName.value)
                -StorageAccountContainerName $(storageDetails.storageAccountContainerName.value)
                -File "$(System.DefaultWorkingDirectory)/infra/SelfHostedIntegrationRuntimeDataFactory/installSHIRGateway.ps1"
                -Blob "installSHIRGateway.ps1"
              errorActionPreference: "stop"
              failOnStandardError: false
              azurePowerShellVersion: "latestVersion"

          # Generate Password
          - task: PowerShell@2
            name: generate_password_003
            displayName: Generate Password
            enabled: true
            continueOnError: false
            inputs:
              targetType: "filePath"
              filePath: "$(System.DefaultWorkingDirectory)/code/GeneratePassword.ps1"
              errorActionPreference: "stop"
              failOnStderr: false
              ignoreLASTEXITCODE: false
              pwsh: true

          # Deploy SHIR 001
          - task: AzureResourceManagerTemplateDeployment@3
            name: shir_001_deployment
            displayName: Deploy SHIR 001
            enabled: true
            continueOnError: false
            inputs:
              deploymentScope: "Resource Group"
              azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
              subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
              action: "Create Or Update Resource Group"
              resourceGroupName: ${{ variables.AZURE_RESOURCE_GROUP_NAME_INTEGRATION }}
              location: ${{ variables.AZURE_LOCATION }}
              templateLocation: "Linked artifact"
              csmFile: "$(System.DefaultWorkingDirectory)/infra/SelfHostedIntegrationRuntimeDataFactory/deploy.shir.json"
              csmParametersFile: "$(System.DefaultWorkingDirectory)/infra/SelfHostedIntegrationRuntimeDataFactory/params.shir001.json"
              deploymentMode: "Incremental"
              overrideParameters: >
                -vmssAdminPassword "$(password)"
                -tags "${{ variables.AZURE_TAGS }}"

          # # Generate Password
          # - task: PowerShell@2
          #   name: generate_password_004
          #   displayName: Generate Password
          #   enabled: true
          #   continueOnError: false
          #   inputs:
          #     targetType: 'filePath'
          #     filePath: '$(System.DefaultWorkingDirectory)/code/GeneratePassword.ps1'
          #     errorActionPreference: 'stop'
          #     failOnStderr: false
          #     ignoreLASTEXITCODE: false
          #     pwsh: true

          # # Deploy SHIR 002
          # - task: AzureResourceManagerTemplateDeployment@3
          #   name: shir_002_deployment
          #   displayName: Deploy SHIR 002
          #   enabled: true
          #   continueOnError: false
          #   inputs:
          #     deploymentScope: 'Resource Group'
          #     azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
          #     subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
          #     action: 'Create Or Update Resource Group'
          #     resourceGroupName: ${{ variables.AZURE_RESOURCE_GROUP_NAME_INTEGRATION }}
          #     location: ${{ variables.AZURE_LOCATION }}
          #     templateLocation: 'Linked artifact'
          #     csmFile: '$(System.DefaultWorkingDirectory)/infra/SelfHostedIntegrationRuntimePurview/deploy.shir.json'
          #     csmParametersFile: '$(System.DefaultWorkingDirectory)/infra/SelfHostedIntegrationRuntimePurview/params.shir001.json'
          #     deploymentMode: 'Incremental'
          #     overrideParameters: >
          #       -vmssAdminPassword "$(password)"
          #       -tags "${{ variables.AZURE_TAGS }}"
          #       -shirAuthKey "$(shirAuthKey)"

          # Generate Password
          - task: PowerShell@2
            name: generate_password_005
            displayName: Generate Password
            enabled: true
            continueOnError: false
            inputs:
              targetType: "filePath"
              filePath: "$(System.DefaultWorkingDirectory)/code/GeneratePassword.ps1"
              errorActionPreference: "stop"
              failOnStderr: false
              ignoreLASTEXITCODE: false
              pwsh: true

          # Deploy synapse 001
          - task: AzureResourceManagerTemplateDeployment@3
            name: synapse_001_deployment
            displayName: Deploy synapse 001
            enabled: true
            continueOnError: false
            inputs:
              deploymentScope: "Resource Group"
              azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
              subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
              action: "Create Or Update Resource Group"
              resourceGroupName: ${{ variables.AZURE_RESOURCE_GROUP_NAME_PROCESSINGPRODUCT }}
              location: ${{ variables.AZURE_LOCATION }}
              templateLocation: "Linked artifact"
              csmFile: "$(System.DefaultWorkingDirectory)/infra/Synapse/deploy.synapse.json"
              csmParametersFile: "$(System.DefaultWorkingDirectory)/infra/Synapse/params.synapse001.json"
              deploymentMode: "Incremental"
              overrideParameters: >
                -synapseSqlAdministratorPassword "$(password)"
                -tags "${{ variables.AZURE_TAGS }}"

          # Share Self Hosted Integration Runtime 001
          - task: AzureResourceManagerTemplateDeployment@3
            name: share_self_hosted_integration_runtime_001_deployment
            displayName: Share Self Hosted Integration Runtime 001
            enabled: true
            continueOnError: true
            inputs:
              deploymentScope: "Resource Group"
              azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
              subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
              action: "Create Or Update Resource Group"
              resourceGroupName: ${{ variables.AZURE_RESOURCE_GROUP_NAME_PROCESSINGDOMAIN }}
              location: ${{ variables.AZURE_LOCATION }}
              templateLocation: "Linked artifact"
              csmFile: "$(System.DefaultWorkingDirectory)/infra/ShareSelfHostedIntegrationRuntime/deploy.shareSelfHostedIntegrationRuntime.json"
              csmParametersFile: "$(System.DefaultWorkingDirectory)/infra/ShareSelfHostedIntegrationRuntime/params.shareSelfHostedIntegrationRuntime001.json"
              deploymentMode: "Incremental"
