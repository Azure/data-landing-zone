name: Data Node Deployment

trigger:
  branches:
    include:
      - main
  paths:
    include:
      - infra/Storage/*
      - infra/KeyVault/*
      - infra/Databricks/*
      - infra/DataFactory/*
      - infra/EventHub/*
      - infra/SqlDatabase/*
      - infra/SqlServer/*
      - infra/Synapse/*
      - infra/PrivateEndpoint/*
      - .ado/workflows/dataNodeDeployment.yml
      - code/*

variables:
  - name: AZURE_RESOURCE_MANAGER_CONNECTION_NAME
    value: 'datanode001-service-connection'
  - name: AZURE_SUBSCRIPTION_ID
    value: '2f68ca09-59d9-4ab5-ad11-c54872bfa28d'
  - name: AZURE_RESOURCE_GROUP_NAME_MANAGEMENT
    value: 'dn001-mgmt'
  - name: AZURE_RESOURCE_GROUP_NAME_STORAGE
    value: 'dn001-storage'
  - name: AZURE_RESOURCE_GROUP_NAME_SECRETSTORAGE
    value: 'dn001-secretstorage'
  - name: AZURE_RESOURCE_GROUP_NAME_EXTERNALSTORAGE
    value: 'dn001-externalstorage'
  - name: AZURE_RESOURCE_GROUP_NAME_METADATA
    value: 'dn001-metadata'
  - name: AZURE_RESOURCE_GROUP_NAME_PROCESSINGDOMAIN
    value: 'dn001-processing-domain'
  - name: AZURE_RESOURCE_GROUP_NAME_PROCESSINGPRODUCT
    value: 'dn001-processing-product'
  - name: AZURE_LOCATION
    value: 'North Europe'
  - name: LOG_ANALYTICS_KEY_VAULT_ID
    value: '/subscriptions/4060c03e-0d2e-44b7-82a3-da9376fe50b2/resourceGroups/dh-logging/providers/Microsoft.KeyVault/vaults/dh-keyvault002'
  - name: LOG_ANALYTICS_WORKSPACE_ID_SECRET_NAME
    value: 'logAnalyticsWorkspaceId'
  - name: LOG_ANALYTICS_WORKSPACE_KEY_SECRET_NAME
    value: 'logAnalyticsWorkspaceKey'

stages:
  - stage: Validation
    displayName: 'Validation of ARM templates'
    jobs:
      - job: Validation
        displayName: 'Validation of ARM templates'
        continueOnError: false
        pool:
          vmImage: 'ubuntu-latest'
        
        steps:
        # Checkout code
        - checkout: self
          name: checkout_repository
          displayName: 'Checkout repository'
          submodules: true
          lfs: false
          clean: true
          continueOnError: false
          enabled: true
        
        # Deploy key vault 001 - validation
        - task: AzureResourceManagerTemplateDeployment@3
          name: key_vault_001_validation
          displayName: Deploy key vault 001 - validation
          enabled: true
          continueOnError: false
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME_METADATA)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: 'infra/KeyVault/deploy.keyVault.json'
            csmParametersFile: 'infra/KeyVault/params.keyVault001.json'
            deploymentMode: 'Validation'
        
        # Deploy key vault 002 - validation
        - task: AzureResourceManagerTemplateDeployment@3
          name: key_vault_002_validation
          displayName: Deploy key vault 002 - validation
          enabled: true
          continueOnError: false
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME_METADATA)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: 'infra/KeyVault/deploy.keyVault.json'
            csmParametersFile: 'infra/KeyVault/params.keyVault002.json'
            deploymentMode: 'Validation'
        
        # Deploy storage account 001 - raw - validation
        - task: AzureResourceManagerTemplateDeployment@3
          name: storage_account_001_validation
          displayName: Deploy storage account 001 - raw - validation
          enabled: true
          continueOnError: false
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME_STORAGE)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: 'infra/Storage/deploy.storage.json'
            csmParametersFile: 'infra/Storage/params.storage001.json'
            deploymentMode: 'Validation'
        
        # Deploy storage account 002 - enriched & curated - validation
        - task: AzureResourceManagerTemplateDeployment@3
          name: storage_account_002_validation
          displayName: Deploy storage account 002 - enriched & curated - validation
          enabled: true
          continueOnError: false
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME_STORAGE)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: 'infra/Storage/deploy.storage.json'
            csmParametersFile: 'infra/Storage/params.storage002.json'
            deploymentMode: 'Validation'
        
        # Deploy storage account 003 - workspace - validation
        - task: AzureResourceManagerTemplateDeployment@3
          name: storage_account_003_validation
          displayName: Deploy storage account 003 - workspace - validation
          enabled: true
          continueOnError: false
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME_STORAGE)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: 'infra/Storage/deploy.storage.json'
            csmParametersFile: 'infra/Storage/params.storage003.json'
            deploymentMode: 'Validation'
        
        # Deploy secret storage account 001 - raw - validation
        - task: AzureResourceManagerTemplateDeployment@3
          name: secret_storage_001_validation
          displayName: Deploy secret storage account 001 - raw - validation
          enabled: true
          continueOnError: false
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME_SECRETSTORAGE)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: 'infra/Storage/deploy.storage.json'
            csmParametersFile: 'infra/Storage/params.secret_storage001.json'
            deploymentMode: 'Validation'
        
        # Deploy secret storage account 002 - enriched & curated - validation
        - task: AzureResourceManagerTemplateDeployment@3
          name: secret_storage_002_validation
          displayName: Deploy secret storage account 002 - enriched & curated - validation
          enabled: true
          continueOnError: false
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME_SECRETSTORAGE)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: 'infra/Storage/deploy.storage.json'
            csmParametersFile: 'infra/Storage/params.secret_storage002.json'
            deploymentMode: 'Validation'
        
        # Deploy secret storage account 003 - workspace - validation
        - task: AzureResourceManagerTemplateDeployment@3
          name: secret_storage_003_validation
          displayName: Deploy secret storage account 003 - workspace - validation
          enabled: true
          continueOnError: false
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME_SECRETSTORAGE)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: 'infra/Storage/deploy.storage.json'
            csmParametersFile: 'infra/Storage/params.secret_storage003.json'
            deploymentMode: 'Validation'
        
        # Deploy external storage account 001 - validation
        - task: AzureResourceManagerTemplateDeployment@3
          name: external_storage_001_validation
          displayName: Deploy external storage account 001 - validation
          enabled: true
          continueOnError: false
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME_EXTERNALSTORAGE)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: 'infra/Storage/deploy.storage.json'
            csmParametersFile: 'infra/Storage/params.external_storage001.json'
            deploymentMode: 'Validation'
        
        # Generate Password
        - task: PowerShell@2
          name: generate_password_001
          displayName: Generate Password
          enabled: true
          continueOnError: false
          inputs:
            targetType: 'filePath'
            filePath: '$(System.DefaultWorkingDirectory)/code/GeneratePassword.ps1'
            errorActionPreference: 'stop'
            failOnStderr: false
            ignoreLASTEXITCODE: false
            pwsh: true
        
        # Deploy sql server 001 - validation
        - task: AzureResourceManagerTemplateDeployment@3
          name: sql_server_001_validation
          displayName: Deploy sql server 001 - validation
          enabled: true
          continueOnError: true
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME_METADATA)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: 'infra/SqlServer/deploy.sqlServer.json'
            csmParametersFile: 'infra/SqlServer/params.sqlServer001.json'
            deploymentMode: 'Validation'
            overrideParameters: >
              -administratorLoginPassword "$(password)"
        
        # Deploy sql database 001 - validation
        - task: AzureResourceManagerTemplateDeployment@3
          name: sql_database_001_validation
          displayName: Deploy sql database 001 - validation
          enabled: true
          continueOnError: true
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME_METADATA)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: 'infra/SqlDatabase/deploy.sqlDatabase.json'
            csmParametersFile: 'infra/SqlDatabase/params.sqlDatabase001.json'
            deploymentMode: 'Validation'
            overrideParameters: >
              -sqlServerAdministratorLoginPassword "$(password)"
        
        # Generate Password
        - task: PowerShell@2
          name: generate_password_002
          displayName: Generate Password
          enabled: true
          continueOnError: false
          inputs:
            targetType: 'filePath'
            filePath: '$(System.DefaultWorkingDirectory)/code/GeneratePassword.ps1'
            errorActionPreference: 'stop'
            failOnStderr: false
            ignoreLASTEXITCODE: false
            pwsh: true
        
        # Deploy sql server 002 - validation
        - task: AzureResourceManagerTemplateDeployment@3
          name: sql_server_002_validation
          displayName: Deploy sql server 002 - validation
          enabled: true
          continueOnError: true
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME_METADATA)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: 'infra/SqlServer/deploy.sqlServer.json'
            csmParametersFile: 'infra/SqlServer/params.sqlServer002.json'
            deploymentMode: 'Validation'
            overrideParameters: >
              -administratorLoginPassword "$(password)"
        
        # Deploy sql database 002 - validation
        - task: AzureResourceManagerTemplateDeployment@3
          name: sql_database_002_validation
          displayName: Deploy sql database 002 - validation
          enabled: true
          continueOnError: true
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME_METADATA)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: 'infra/SqlDatabase/deploy.sqlDatabase.json'
            csmParametersFile: 'infra/SqlDatabase/params.sqlDatabase002.json'
            deploymentMode: 'Validation'
            overrideParameters: >
              -sqlServerAdministratorLoginPassword "$(password)"
        
        # Deploy databricks 001 - validation
        - task: AzureResourceManagerTemplateDeployment@3
          name: databricks_001_validation
          displayName: Deploy databricks 001 - validation
          enabled: true
          continueOnError: false
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME_PROCESSINGDOMAIN)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: 'infra/Databricks/deploy.databricks.json'
            csmParametersFile: 'infra/Databricks/params.databricks001.json'
            deploymentMode: 'Validation'
        
        # Deploy databricks 002 - validation
        - task: AzureResourceManagerTemplateDeployment@3
          name: databricks_002_validation
          displayName: Deploy databricks 002 - validation
          enabled: true
          continueOnError: false
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME_PROCESSINGPRODUCT)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: 'infra/Databricks/deploy.databricks.json'
            csmParametersFile: 'infra/Databricks/params.databricks002.json'
            deploymentMode: 'Validation'
        
        # Deploy event hub 001 - validation
        - task: AzureResourceManagerTemplateDeployment@3
          name: event_hub_001_validation
          displayName: Deploy event hub 001 - validation
          enabled: true
          continueOnError: false
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME_PROCESSINGDOMAIN)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: 'infra/EventHub/deploy.eventHub.json'
            csmParametersFile: 'infra/EventHub/params.eventHub001.json'
            deploymentMode: 'Validation'
        
        # Deploy data factory 001 - validation
        - task: AzureResourceManagerTemplateDeployment@3
          name: data_factory_001_validation
          displayName: Deploy data factory 001 - validation
          enabled: true
          continueOnError: false
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME_PROCESSINGDOMAIN)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: 'infra/DataFactory/deploy.dataFactory.json'
            csmParametersFile: 'infra/DataFactory/params.dataFactory001.json'
            deploymentMode: 'Validation'
        
        # Generate Password
        - task: PowerShell@2
          name: generate_password_003
          displayName: Generate Password
          enabled: true
          continueOnError: false
          inputs:
            targetType: 'filePath'
            filePath: '$(System.DefaultWorkingDirectory)/code/GeneratePassword.ps1'
            errorActionPreference: 'stop'
            failOnStderr: false
            ignoreLASTEXITCODE: false
            pwsh: true
        
        # Deploy synapse 001 - validation
        - task: AzureResourceManagerTemplateDeployment@3
          name: synapse_001_validation
          displayName: Deploy synapse 001 - validation
          enabled: true
          continueOnError: true
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME_PROCESSINGPRODUCT)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: 'infra/Synapse/deploy.synapse.json'
            csmParametersFile: 'infra/Synapse/params.synapse001.json'
            deploymentMode: 'Validation'
            overrideParameters: >
              -synapseSqlAdministratorPassword "$(password)"

  - stage: Deployment
    displayName: 'Deployment of ARM templates'
    dependsOn: Validation
    # condition: and(succeeded(), in(variables['Build.Reason'], 'IndividualCI', 'BatchedCI'))
    jobs:
      - job: Deployment
        displayName: 'Deployment of ARM templates'
        continueOnError: false
        pool:
          vmImage: 'ubuntu-latest'
        
        steps:
        # Checkout repository
        - checkout: self
          name: checkout_repository
          displayName: 'Checkout repository'
          submodules: true
          lfs: false
          clean: true
          continueOnError: false
          enabled: true

        # Deploy key vault 001
        - task: AzureResourceManagerTemplateDeployment@3
          name: key_vault_001_deployment
          displayName: Deploy key vault 001
          enabled: true
          continueOnError: false
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME_METADATA)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: 'infra/KeyVault/deploy.keyVault.json'
            csmParametersFile: 'infra/KeyVault/params.keyVault001.json'
            deploymentMode: 'Incremental'
        
        # Deploy key vault 002
        - task: AzureResourceManagerTemplateDeployment@3
          name: key_vault_002_deployment
          displayName: Deploy key vault 002
          enabled: true
          continueOnError: false
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME_METADATA)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: 'infra/KeyVault/deploy.keyVault.json'
            csmParametersFile: 'infra/KeyVault/params.keyVault002.json'
            deploymentMode: 'Incremental'
            deploymentOutputs: 'keyVault002Details'
        
        # Generate Pipeline Variables 001
        - task: AzureCLI@2
          name: generate_pipeline_variables_001
          displayName: Generate Pipeline Variables 001
          enabled: true
          continueOnError: false
          inputs:
            azureSubscription: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            scriptType: pscore
            scriptLocation: 'scriptPath'
            scriptPath: '$(System.DefaultWorkingDirectory)/code/GeneratePipelineVariables.ps1'
            powerShellErrorActionPreference: 'stop'
            addSpnToEnvironment: false
            failOnStandardError: false
            powerShellIgnoreLASTEXITCODE: false
            arguments: >
              -ArmOutputString '$(keyVault002Details)'
              -MakeOutput
        
        # Deploy storage account 001 - raw
        - task: AzureResourceManagerTemplateDeployment@3
          name: storage_account_001_deployment
          displayName: Deploy storage account 001 - raw
          enabled: true
          continueOnError: false
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME_STORAGE)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: 'infra/Storage/deploy.storage.json'
            csmParametersFile: 'infra/Storage/params.storage001.json'
            deploymentMode: 'Incremental'
        
        # Deploy storage account 002 - enriched & curated
        - task: AzureResourceManagerTemplateDeployment@3
          name: storage_account_002_deployment
          displayName: Deploy storage account 002 - enriched & curated
          enabled: true
          continueOnError: false
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME_STORAGE)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: 'infra/Storage/deploy.storage.json'
            csmParametersFile: 'infra/Storage/params.storage002.json'
            deploymentMode: 'Incremental'
        
        # Deploy storage account 003 - workspace
        - task: AzureResourceManagerTemplateDeployment@3
          name: storage_account_003_deployment
          displayName: Deploy storage account 003 - workspace
          enabled: true
          continueOnError: false
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME_STORAGE)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: 'infra/Storage/deploy.storage.json'
            csmParametersFile: 'infra/Storage/params.storage003.json'
            deploymentMode: 'Incremental'
        
        # Deploy secret storage account 001 - raw
        - task: AzureResourceManagerTemplateDeployment@3
          name: secret_storage_001_deployment
          displayName: Deploy secret storage account 001 - raw
          enabled: true
          continueOnError: false
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME_SECRETSTORAGE)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: 'infra/Storage/deploy.storage.json'
            csmParametersFile: 'infra/Storage/params.secret_storage001.json'
            deploymentMode: 'Incremental'
        
        # Deploy secret storage account 002 - enriched & curated
        - task: AzureResourceManagerTemplateDeployment@3
          name: secret_storage_002_deployment
          displayName: Deploy secret storage account 002 - enriched & curated
          enabled: true
          continueOnError: false
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME_SECRETSTORAGE)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: 'infra/Storage/deploy.storage.json'
            csmParametersFile: 'infra/Storage/params.secret_storage002.json'
            deploymentMode: 'Incremental'
        
        # Deploy secret storage account 003 - workspace
        - task: AzureResourceManagerTemplateDeployment@3
          name: secret_storage_003_deployment
          displayName: Deploy secret storage account 003 - workspace
          enabled: true
          continueOnError: false
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME_SECRETSTORAGE)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: 'infra/Storage/deploy.storage.json'
            csmParametersFile: 'infra/Storage/params.secret_storage003.json'
            deploymentMode: 'Incremental'
        
        # Deploy external storage account 001
        - task: AzureResourceManagerTemplateDeployment@3
          name: external_storage_001_deployment
          displayName: Deploy external storage account 001
          enabled: true
          continueOnError: false
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME_EXTERNALSTORAGE)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: 'infra/Storage/deploy.storage.json'
            csmParametersFile: 'infra/Storage/params.external_storage001.json'
            deploymentMode: 'Incremental'
        
        # Generate Password
        - task: PowerShell@2
          name: generate_password_001
          displayName: Generate Password
          enabled: true
          continueOnError: false
          inputs:
            targetType: 'filePath'
            filePath: '$(System.DefaultWorkingDirectory)/code/GeneratePassword.ps1'
            errorActionPreference: 'stop'
            failOnStderr: false
            ignoreLASTEXITCODE: false
            pwsh: true
        
        # Deploy sql server 001
        - task: AzureResourceManagerTemplateDeployment@3
          name: sql_server_001_deployment
          displayName: Deploy sql server 001
          enabled: true
          continueOnError: true
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME_METADATA)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: 'infra/SqlServer/deploy.sqlServer.json'
            csmParametersFile: 'infra/SqlServer/params.sqlServer001.json'
            deploymentMode: 'Incremental'
            overrideParameters: >
              -administratorLoginPassword '$(password)'
        
        # Deploy sql database 001
        - task: AzureResourceManagerTemplateDeployment@3
          name: sql_database_001_deployment
          displayName: Deploy sql database 001
          enabled: true
          continueOnError: true
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME_METADATA)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: 'infra/SqlDatabase/deploy.sqlDatabase.json'
            csmParametersFile: 'infra/SqlDatabase/params.sqlDatabase001.json'
            deploymentMode: 'Incremental'
            overrideParameters: >
              -sqlServerAdministratorLoginPassword "$(password)"
        
        # Generate Password
        - task: PowerShell@2
          name: generate_password_002
          displayName: Generate Password
          enabled: true
          continueOnError: false
          inputs:
            targetType: 'filePath'
            filePath: '$(System.DefaultWorkingDirectory)/code/GeneratePassword.ps1'
            errorActionPreference: 'stop'
            failOnStderr: false
            ignoreLASTEXITCODE: false
            pwsh: true
        
        # Deploy sql server 002
        - task: AzureResourceManagerTemplateDeployment@3
          name: sql_server_002_deployment
          displayName: Deploy sql server 002
          enabled: true
          continueOnError: true
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME_METADATA)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: 'infra/SqlServer/deploy.sqlServer.json'
            csmParametersFile: 'infra/SqlServer/params.sqlServer002.json'
            deploymentMode: 'Incremental'
            overrideParameters: >
              -administratorLoginPassword "$(password)"
        
        # Deploy sql database 002
        - task: AzureResourceManagerTemplateDeployment@3
          name: sql_database_002_deployment
          displayName: Deploy sql database 002
          enabled: true
          continueOnError: true
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME_METADATA)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: 'infra/SqlDatabase/deploy.sqlDatabase.json'
            csmParametersFile: 'infra/SqlDatabase/params.sqlDatabase002.json'
            deploymentMode: 'Incremental'
            deploymentOutputs: 'hivemetastoreDetails'
            overrideParameters: >
              -sqlServerAdministratorLoginPassword "$(password)"
        
        # Generate Pipeline Variables 002
        - task: AzureCLI@2
          name: generate_pipeline_variables_002
          displayName: Generate Pipeline Variables 002
          enabled: true
          continueOnError: false
          inputs:
            azureSubscription: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            scriptType: pscore
            scriptLocation: 'scriptPath'
            scriptPath: '$(System.DefaultWorkingDirectory)/code/GeneratePipelineVariables.ps1'
            powerShellErrorActionPreference: 'stop'
            addSpnToEnvironment: false
            failOnStandardError: false
            powerShellIgnoreLASTEXITCODE: false
            arguments: >
              -ArmOutputString '$(hivemetastoreDetails)'
              -MakeOutput
        
        # Deploy databricks 001
        - task: AzureResourceManagerTemplateDeployment@3
          name: databricks_001_deployment
          displayName: Deploy databricks 001
          enabled: true
          continueOnError: false
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME_PROCESSINGDOMAIN)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: 'infra/Databricks/deploy.databricks.json'
            csmParametersFile: 'infra/Databricks/params.databricks001.json'
            deploymentMode: 'Incremental'
            deploymentOutputs: 'databricksDetails001'
        
        # Generate Pipeline Variables 003
        - task: AzureCLI@2
          name: generate_pipeline_variables_003
          displayName: Generate Pipeline Variables 003
          enabled: true
          continueOnError: false
          inputs:
            azureSubscription: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            scriptType: pscore
            scriptLocation: 'scriptPath'
            scriptPath: '$(System.DefaultWorkingDirectory)/code/GeneratePipelineVariables.ps1'
            powerShellErrorActionPreference: 'stop'
            addSpnToEnvironment: false
            failOnStandardError: false
            powerShellIgnoreLASTEXITCODE: false
            arguments: >
              -ArmOutputString '$(databricksDetails001)'
              -MakeOutput
        
        # Setup databricks 001
        - task: AzureCLI@2
          name: setup_databricks_001
          displayName: Setup databricks 001
          enabled: true
          continueOnError: false
          inputs:
            azureSubscription: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            scriptType: pscore
            scriptLocation: 'scriptPath'
            scriptPath: '$(System.DefaultWorkingDirectory)/code/SetupDatabricks.ps1'
            powerShellErrorActionPreference: 'stop'
            addSpnToEnvironment: true
            failOnStandardError: false
            powerShellIgnoreLASTEXITCODE: false
            arguments: >
              -DatabricksWorkspaceName '$(databricksWorkspaceName)'
              -DatabricksWorkspaceId '$(databricksWorkspaceId)'
              -DatabricksApiUrl '$(databricksApiUrl)'
              -DatabricksSubscriptionId '$(databricksSubscriptionId)'
              -DatabricksResourceGroupName '$(databricksResourceGroupName)'
              -HiveKeyVaultId '$(keyVaultId)'
              -HiveConnectionStringSecretName '$(connectionStringSecretName)'
              -HiveUsernameSecretName '$(usernameSecretName)'
              -HivePasswordSecretName '$(passwordSecretName)'
              -LogAnalyticsKeyVaultId '$(LOG_ANALYTICS_KEY_VAULT_ID)'
              -LogAnalyticsWorkspaceIdSecretName '$(LOG_ANALYTICS_WORKSPACE_ID_SECRET_NAME)'
              -LogAnalyticsWorkspaceKeySecretName '$(LOG_ANALYTICS_WORKSPACE_KEY_SECRET_NAME)'
        
        # Deploy databricks 002
        - task: AzureResourceManagerTemplateDeployment@3
          name: databricks_002_deployment
          displayName: Deploy databricks 002
          enabled: true
          continueOnError: false
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME_PROCESSINGPRODUCT)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: 'infra/Databricks/deploy.databricks.json'
            csmParametersFile: 'infra/Databricks/params.databricks002.json'
            deploymentMode: 'Incremental'
            deploymentOutputs: 'databricksDetails002'
        
        # Generate Pipeline Variables 004
        - task: AzureCLI@2
          name: generate_pipeline_variables_004
          displayName: Generate Pipeline Variables 004
          enabled: true
          continueOnError: false
          inputs:
            azureSubscription: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            scriptType: pscore
            scriptLocation: 'scriptPath'
            scriptPath: '$(System.DefaultWorkingDirectory)/code/GeneratePipelineVariables.ps1'
            powerShellErrorActionPreference: 'stop'
            addSpnToEnvironment: false
            failOnStandardError: false
            powerShellIgnoreLASTEXITCODE: false
            arguments: >
              -ArmOutputString '$(databricksDetails002)'
              -MakeOutput
        
        # Setup databricks 002
        - task: AzureCLI@2
          name: setup_databricks_002
          displayName: Setup databricks 002
          enabled: true
          continueOnError: false
          inputs:
            azureSubscription: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            scriptType: pscore
            scriptLocation: 'scriptPath'
            scriptPath: '$(System.DefaultWorkingDirectory)/code/SetupDatabricks.ps1'
            powerShellErrorActionPreference: 'stop'
            addSpnToEnvironment: true
            failOnStandardError: false
            powerShellIgnoreLASTEXITCODE: false
            arguments: >
              -DatabricksWorkspaceName '$(databricksWorkspaceName)'
              -DatabricksWorkspaceId '$(databricksWorkspaceId)'
              -DatabricksApiUrl '$(databricksApiUrl)'
              -DatabricksSubscriptionId '$(databricksSubscriptionId)'
              -DatabricksResourceGroupName '$(databricksResourceGroupName)'
              -HiveKeyVaultId '$(keyVaultId)'
              -HiveConnectionStringSecretName '$(connectionStringSecretName)'
              -HiveUsernameSecretName '$(usernameSecretName)'
              -HivePasswordSecretName '$(passwordSecretName)'
              -LogAnalyticsKeyVaultId '$(LOG_ANALYTICS_KEY_VAULT_ID)'
              -LogAnalyticsWorkspaceIdSecretName '$(LOG_ANALYTICS_WORKSPACE_ID_SECRET_NAME)'
              -LogAnalyticsWorkspaceKeySecretName '$(LOG_ANALYTICS_WORKSPACE_KEY_SECRET_NAME)'
        
        # Deploy event hub 001
        - task: AzureResourceManagerTemplateDeployment@3
          name: event_hub_001_deployment
          displayName: Deploy event hub 001
          enabled: true
          continueOnError: false
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME_PROCESSINGDOMAIN)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: 'infra/EventHub/deploy.eventHub.json'
            csmParametersFile: 'infra/EventHub/params.eventHub001.json'
            deploymentMode: 'Incremental'
        
        # Deploy data factory 001
        - task: AzureResourceManagerTemplateDeployment@3
          name: data_factory_001_deployment
          displayName: Deploy data factory 001
          enabled: true
          continueOnError: false
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME_PROCESSINGDOMAIN)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: 'infra/DataFactory/deploy.dataFactory.json'
            csmParametersFile: 'infra/DataFactory/params.dataFactory001.json'
            deploymentMode: 'Incremental'
        
        # Generate Password
        - task: PowerShell@2
          name: generate_password_003
          displayName: Generate Password
          enabled: true
          continueOnError: false
          inputs:
            targetType: 'filePath'
            filePath: '$(System.DefaultWorkingDirectory)/code/GeneratePassword.ps1'
            errorActionPreference: 'stop'
            failOnStderr: false
            ignoreLASTEXITCODE: false
            pwsh: true
        
        # Deploy synapse 001
        - task: AzureResourceManagerTemplateDeployment@3
          name: synapse_001_deployment
          displayName: Deploy synapse 001
          enabled: true
          continueOnError: true
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME_PROCESSINGPRODUCT)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: 'infra/Synapse/deploy.synapse.json'
            csmParametersFile: 'infra/Synapse/params.synapse001.json'
            deploymentMode: 'Incremental'
            overrideParameters: >
              -synapseSqlAdministratorPassword "$(password)"
