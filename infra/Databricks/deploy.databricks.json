{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Specifies the location for all resources."
            }
        },
        "databricksName": {
            "type": "string",
            "metadata": {
                "description": "Specifies the name of the databricks workspace."
            }
        },
        "databricksVnetId": {
            "type": "string",
            "metadata": {
                "description": "Specifies the ID of the vnet that should be used for vnet injection."
            }
        },
        "databricksManagedResourceGroupId": {
            "type": "string",
            "metadata": {
                "description": "Specifies the name of the resource group that is managed by databricks."
            }
        },
        "databricksPrivateSubnetName": {
            "type": "string",
            "metadata": {
                "description": "Specifies the ID of the private subnet that should be used for vnet injection."
            }
        },
        "databricksPublicSubnetName": {
            "type": "string",
            "metadata": {
                "description": "Specifies the ID of the public subnet that should be used for vnet injection."
            }
        }
    },
    "variables": {
        "location": "[parameters('location')]",
        "databricksName": "[parameters('databricksName')]",
        "databricksManagedResourceGroupId": "[parameters('databricksManagedResourceGroupId')]",
        "databricksVnetId": "[parameters('databricksVnetId')]",
        "databricksPrivateSubnetName": "[parameters('databricksPrivateSubnetName')]",
        "databricksPublicSubnetName": "[parameters('databricksPublicSubnetName')]"
    },
    "resources": [
        {
            "type": "Microsoft.Databricks/workspaces",
            "apiVersion": "2018-04-01",
            "name": "[variables('databricksName')]",
            "location": "[variables('location')]",
            "sku": {
                "name": "premium"
            },
            "properties": {
                "managedResourceGroupId": "[variables('databricksManagedResourceGroupId')]",
                "parameters": {
                    "customVirtualNetworkId": {
                        "value": "[variables('databricksVnetId')]"
                    },
                    "customPublicSubnetName": {
                        "value": "[variables('databricksPublicSubnetName')]"
                    },
                    "customPrivateSubnetName": {
                        "value": "[variables('databricksPrivateSubnetName')]"
                    },
                    "enableNoPublicIp": {
                        "value": true
                    }
                    // "encryption": {
                    //     "value": {
                    //         "keySource": "Default"
                    //     }
                    // },
                    // "prepareEncryption": {
                    //     "value": true
                    // },
                    // "requireInfrastructureEncryption": {
                    //     "value": true
                    // }
                },
                "authorizations": [
                ]
            }
        }
    ],
    "outputs": {
        "databricksWorkspaceName": {
            "type": "string",
            "value": "[variables('databricksName')]"
        },
        "databricksWorkspaceId": {
            "type": "string",
            "value": "[resourceId('Microsoft.Databricks/workspaces', variables('databricksName'))]"
        },
        "databricksApiUrl": {
            "type": "string",
            "value": "[concat('https://', variables('location'), '.azuredatabricks.net')]"
        },
        "subscriptionId": {
            "type": "string",
            "value": "[subscription().subscriptionId]"
        },
        "resourceGroupName": {
            "type": "string",
            "value": "[resourceGroup().name]"
        }
    }
}