{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Specifies the location for all resources."
            }
        },
        "dataFactoryName": {
            "type": "string",
            "metadata": {
                "description": "Specifies the name of the data factory."
            }
        },
        "dataFactoryGitAccount": {
            "type": "string",
            "metadata": {
                "description": "Specifies the account name for the repository connection."
            }
        },
        "dataFactoryGitRepo": {
            "type": "string",
            "metadata": {
                "description": "Specifies the repo name for the repository connection."
            }
        },
        "dataFactoryGitCollaborationBranch": {
            "type": "string",
            "metadata": {
                "description": "Specifies the collaboration branch name for the repository connection."
            }
        },
        "dataFactoryGitRootFolder": {
            "type": "string",
            "metadata": {
                "description": "Specifies the root folder in the branch for the repository connection."
            }
        },
        "dataFactoryGitType": {
            "type": "string",
            "allowedValues": [
                "FactoryGitHubConfiguration",
                "FactoryVSTSConfiguration"
            ],
            "metadata": {
                "description": "Specifies the type of git connection."
            }
        },
        "purviewId": {
            "type": "string",
            "metadata": {
                "description": "Specifies the resource id of the purview data catalog that should be linked to the data factory."
            }
        },
        "keyVaultId": {
            "type": "string",
            "metadata": {
                "description": "Specifies the resource id of the keyvault that should be linked to the data factory."
            }
        },
        "sqlServerId": {
            "type": "string",
            "metadata": {
                "description": "Specifies the resource id of the sql server that should be linked to the data factory."
            }
        },
        "sqlDatabaseId": {
            "type": "string",
            "metadata": {
                "description": "Specifies the resource id of the sql database that should be linked to the data factory."
            }
        },
        "databricksWorkspaceId": {
            "type": "string",
            "metadata": {
                "description": "Specifies the resource id of the databricks workspace."
            }
        },
        "subnetId": {
            "type": "string",
            "metadata": {
                "description": "Specifies the id of the subnet which the private endpoint uses."
            }
        },
        "privateDnsZoneIdDataFactory": {
            "type": "string",
            "metadata": {
                "description": "Specifies the ID of the private dns zone for data factory."
            }
        },
        "privateDnsZoneIdPortal": {
            "type": "string",
            "metadata": {
                "description": "Specifies the ID of the private dns zone for data factory portal."
            }
        }
    },
    "functions": [],
    "variables": {
        "location": "[parameters('location')]",
        "dataFactoryName": "[parameters('dataFactoryName')]",
        "defaultManagedVnetIntegrationRuntimeName": "AutoResolveIntegrationRuntime",
        "dataFactoryGitAccount": "[parameters('dataFactoryGitAccount')]",
        "dataFactoryGitRepo": "[parameters('dataFactoryGitRepo')]",
        "dataFactoryGitCollaborationBranch": "[parameters('dataFactoryGitCollaborationBranch')]",
        "dataFactoryGitRootFolder": "[parameters('dataFactoryGitRootFolder')]",
        "dataFactoryGitType": "[parameters('dataFactoryGitType')]",
        "purviewId": "[parameters('purviewId')]",
        "keyVaultId": "[parameters('keyVaultId')]",
        "keyVaultName": "[if(empty(variables('keyVaultId')), 'keyVaultNotSet', last(split(variables('keyVaultId'), '/')))]",
        "keyVaultSubscriptionId": "[if(empty(variables('keyVaultId')), subscription().subscriptionId, split(variables('keyVaultId'), '/')[2])]",
        "keyVaultResourceGroupName": "[if(empty(variables('keyVaultId')), resourceGroup().name, split(variables('keyVaultId'), '/')[4])]",
        "sqlServerId": "[parameters('sqlServerId')]",
        "sqlDatabaseId": "[parameters('sqlDatabaseId')]",
        "sqlDatabaseName": "[if(empty(variables('sqlDatabaseId')), 'sqlDatabaseNotSet', last(split(variables('sqlDatabaseId'), '/')))]",
        "databricksWorkspaceId": "[parameters('databricksWorkspaceId')]",
        "databricksWorkspaceName": "[last(split(variables('databricksWorkspaceId'), '/'))]",
        "subnetId": "[parameters('subnetId')]",
        "privateDnsZoneIdDataFactory": "[parameters('privateDnsZoneIdDataFactory')]",
        "privateDnsZoneIdPortal": "[parameters('privateDnsZoneIdPortal')]",
        "privateEndpointNameDataFactory": "[concat(variables('dataFactoryName'), '-datafactory-private-endpoint')]",
        "privateEndpointNamePortal": "[concat(variables('dataFactoryName'), '-portal-private-endpoint')]"
    },
    "resources": [
        {
            "type": "Microsoft.DataFactory/factories",
            "apiVersion": "2018-06-01",
            "name": "[variables('dataFactoryName')]",
            "location": "[variables('location')]",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                // "repoConfiguration": {
                //     "accountName": "[variables('dataFactoryGitAccount')]",
                //     "repositoryName": "[variables('dataFactoryGitRepo')]",
                //     "collaborationBranch": "[variables('dataFactoryGitCollaborationBranch')]",
                //     "rootFolder": "[variables('dataFactoryGitRootFolder')]",
                //     "type": "[variables('dataFactoryGitType')]"
                // },
                "globalParameters": {
                },
                "publicNetworkAccess": "Disabled",
                "purviewConfiguration": {
                    "purviewResourceId": "[variables('purviewId')]"
                }
            },
            "resources": [
                {
                    "type": "managedVirtualNetworks",
                    "apiVersion": "2018-06-01",
                    "name": "default",
                    "dependsOn": [
                        "[resourceId('Microsoft.DataFactory/factories', variables('dataFactoryName'))]"
                    ],
                    "properties": {}
                },
                {
                    "type": "integrationRuntimes",
                    "apiVersion": "2018-06-01",
                    "name": "[variables('defaultManagedVnetIntegrationRuntimeName')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.DataFactory/factories', variables('dataFactoryName'))]",
                        "[resourceId('Microsoft.DataFactory/factories/managedVirtualNetworks', variables('dataFactoryName'), 'default')]"
                    ],
                    "properties": {
                        "type": "Managed",
                        "managedVirtualNetwork": {
                            "type": "ManagedVirtualNetworkReference",
                            "referenceName": "default"
                        },
                        "typeProperties": {
                            "computeProperties": {
                                "location": "AutoResolve"
                            }
                        }
                    }
                },
                {
                    "condition": "[not(empty(variables('keyVaultId')))]",
                    "type": "managedVirtualNetworks/managedPrivateEndpoints",
                    "apiVersion": "2018-06-01",
                    "name": "[concat('default/', replace(variables('keyVaultName'), '-', ''))]",
                    "dependsOn": [
                        "[resourceId('Microsoft.DataFactory/factories', variables('dataFactoryName'))]",
                        "[resourceId('Microsoft.DataFactory/factories/managedVirtualNetworks', variables('dataFactoryName'), 'default')]",
                        "[resourceId('Microsoft.DataFactory/factories/integrationRuntimes', variables('dataFactoryName'), variables('defaultManagedVnetIntegrationRuntimeName'))]"
                    ],
                    "properties": {
                        "privateLinkResourceId": "[variables('keyVaultId')]",
                        "groupId": "vault"
                    }
                },
                {
                    "condition": "[not(empty(variables('keyVaultId')))]",
                    "type": "linkedservices",
                    "apiVersion": "2018-06-01",
                    "name": "[replace(variables('keyVaultName'), '-', '')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.DataFactory/factories', variables('dataFactoryName'))]",
                        "[resourceId('Microsoft.DataFactory/factories/managedVirtualNetworks', variables('dataFactoryName'), 'default')]",
                        "[resourceId('Microsoft.DataFactory/factories/integrationRuntimes', variables('dataFactoryName'), variables('defaultManagedVnetIntegrationRuntimeName'))]",
                        "[resourceId('Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints',  variables('dataFactoryName'), 'default', replace(variables('keyVaultName'), '-', ''))]"
                    ],
                    "properties": {
                        "type": "AzureKeyVault",
                        "annotations": [],
                        "additionalProperties": {},
                        "connectVia": {
                            "type": "IntegrationRuntimeReference",
                            "referenceName": "[variables('defaultManagedVnetIntegrationRuntimeName')]"
                        },
                        "description": "Key Vault for data product",
                        "parameters": {},
                        "typeProperties": {
                            "baseUrl": "[concat('https://', variables('keyVaultName'), '.vault.azure.net/')]"
                        }
                    }
                },
                {
                    "condition": "[not(empty(variables('sqlDatabaseId')))]",
                    "type": "managedVirtualNetworks/managedPrivateEndpoints",
                    "apiVersion": "2018-06-01",
                    "name": "[concat('default/', replace(variables('sqlDatabaseName'), '-', ''))]",
                    "dependsOn": [
                        "[resourceId('Microsoft.DataFactory/factories', variables('dataFactoryName'))]",
                        "[resourceId('Microsoft.DataFactory/factories/managedVirtualNetworks', variables('dataFactoryName'), 'default')]",
                        "[resourceId('Microsoft.DataFactory/factories/integrationRuntimes', variables('dataFactoryName'), variables('defaultManagedVnetIntegrationRuntimeName'))]"
                    ],
                    "properties": {
                        "privateLinkResourceId": "[variables('sqlServerId')]",
                        "groupId": "sqlServer"
                    }
                },
                {
                    "condition": "[not(empty(variables('sqlDatabaseId')))]",
                    "type": "linkedservices",
                    "apiVersion": "2018-06-01",
                    "name": "[replace(variables('sqlDatabaseName'), '-', '')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.DataFactory/factories', variables('dataFactoryName'))]",
                        "[resourceId('Microsoft.DataFactory/factories/managedVirtualNetworks', variables('dataFactoryName'), 'default')]",
                        "[resourceId('Microsoft.DataFactory/factories/integrationRuntimes', variables('dataFactoryName'), variables('defaultManagedVnetIntegrationRuntimeName'))]",
                        "[resourceId('Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints',  variables('dataFactoryName'), 'default', replace(variables('sqlDatabaseName'), '-', ''))]",
                        "[resourceId('Microsoft.DataFactory/factories/linkedservices', variables('dataFactoryName'), replace(variables('keyVaultName'), '-', ''))]"
                    ],
                    "properties": {
                        "type": "AzureSqlDatabase",
                        "annotations": [],
                        "additionalProperties": {},
                        "connectVia": {
                            "type": "IntegrationRuntimeReference",
                            "referenceName": "[variables('defaultManagedVnetIntegrationRuntimeName')]"
                        },
                        "description": "Key Vault for data product",
                        "parameters": {},
                        "typeProperties": {
                            "connectionString": {
                                "type": "AzureKeyVaultSecret",
                                "store": {
                                    "referenceName": "[replace(variables('keyVaultName'), '-', '')]",
                                    "type": "LinkedServiceReference"
                                },
                                "secretName": "AdfMetastoreDBConnectionString"
                            }
                        }
                    }
                },
                {
                    "condition": "[not(empty(variables('databricksWorkspaceId')))]",
                    "type": "linkedservices",
                    "apiVersion": "2018-06-01",
                    "name": "[replace(variables('databricksWorkspaceName'), '-', '')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.DataFactory/factories', variables('dataFactoryName'))]",
                        "[resourceId('Microsoft.DataFactory/factories/managedVirtualNetworks', variables('dataFactoryName'), 'default')]",
                        "[resourceId('Microsoft.DataFactory/factories/integrationRuntimes', variables('dataFactoryName'), variables('defaultManagedVnetIntegrationRuntimeName'))]",
                        "[resourceId('Microsoft.Resources/deployments', concat(variables('dataFactoryName'), '-Databricks-RoleAssignment'))]"
                    ],
                    "properties": {
                        "type": "AzureDatabricks",
                        "annotations": [],
                        "additionalProperties": {},
                        "connectVia": {
                            "type": "IntegrationRuntimeReference",
                            "referenceName": "[variables('defaultManagedVnetIntegrationRuntimeName')]"
                        },
                        "description": "Azure Databricks - ingestion",
                        "parameters": {
                            "DatabricksClusterType": {
                                "type": "String",
                                "defaultValue": "Standard_DS3_v2"
                            },
                            "DatabricksAutoscale": {
                                "type": "String",
                                "defaultValue": "1:15"
                            },
                            "DatabrickClusterVersion": {
                                "type": "String",
                                "defaultValue": "7.3.x-scala2.12"
                            }
                        },
                        "typeProperties": {
                            "domain": "[concat('https://', reference(variables('databricksWorkspaceId'), '2018-04-01').workspaceUrl)]",
                            "authentication": "MSI",
                            "workspaceResourceId": "[variables('databricksWorkspaceId')]",
                            "newClusterNodeType": "@linkedService().DatabricksClusterType",
                            "newClusterNumOfWorker": "@linkedService().DatabricksAutoscale",
                            "newClusterSparkEnvVars": {
                                "PYSPARK_PYTHON": "/databricks/python3/bin/python3"
                            },
                            "newClusterCustomTags": {
                                "costCenter": "AAAAA-12345"
                            },
                            "newClusterVersion": "@linkedService().DatabrickClusterVersion",
                            "newClusterDriverNodeType": "@linkedService().DatabricksClusterType"
                        }
                    }
                }
            ]
        },
        {
            "condition": "[not(empty(variables('databricksWorkspaceId')))]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "name": "[concat(variables('dataFactoryName'), '-Databricks-RoleAssignment')]",
            "dependsOn": [
                "[resourceId('Microsoft.DataFactory/factories', variables('dataFactoryName'))]"
            ],
            "properties": {
                "expressionEvaluationOptions": {
                    "scope": "outer"
                },
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.Databricks/workspaces/providers/roleAssignments",
                            "apiVersion": "2018-09-01-preview",
                            "name": "[concat(variables('databricksWorkspaceName'), '/Microsoft.Authorization/', guid(uniqueString(variables('dataFactoryName'))))]",
                            "properties": {
                                "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
                                "principalId": "[reference(resourceId('Microsoft.DataFactory/factories', variables('dataFactoryName')), '2018-06-01', 'Full').identity.principalId]"
                            }
                        }
                    ],
                    "outputs": {}
                }
            },
            "subscriptionId": "[split(variables('databricksWorkspaceId'), '/')[2]]",
            "resourceGroup": "[split(variables('databricksWorkspaceId'), '/')[4]]"
        },
        {
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2020-05-01",
            "name": "[variables('privateEndpointNameDataFactory')]",
            "dependsOn": [
                "[resourceId('Microsoft.DataFactory/factories', variables('dataFactoryName'))]"
            ],
            "location": "[variables('location')]",
            "properties": {
                "privateLinkServiceConnections": [
                    {
                        "name": "[variables('privateEndpointNameDataFactory')]",
                        "properties": {
                            "privateLinkServiceId": "[resourceId('Microsoft.DataFactory/factories', variables('dataFactoryName'))]",
                            "groupIds": [
                                "dataFactory"
                            ]
                        }
                    }
                ],
                "manualPrivateLinkServiceConnections": [
                ],
                "subnet": {
                    "id": "[variables('subnetId')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
            "apiVersion": "2020-05-01",
            "name": "[concat(variables('privateEndpointNameDataFactory'), '/aRecord')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', variables('privateEndpointNameDataFactory'))]"
            ],
            "location": "[variables('location')]",
            "properties": {
                "privateDnsZoneConfigs": [
                    {
                        "name": "[concat(variables('privateEndpointNameDataFactory'), '-aRecord')]",
                        "properties": {
                            "privateDnsZoneId": "[variables('privateDnsZoneIdDataFactory')]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2020-05-01",
            "name": "[variables('privateEndpointNamePortal')]",
            "dependsOn": [
                "[resourceId('Microsoft.DataFactory/factories', variables('dataFactoryName'))]"
            ],
            "location": "[variables('location')]",
            "properties": {
                "privateLinkServiceConnections": [
                    {
                        "name": "[variables('privateEndpointNamePortal')]",
                        "properties": {
                            "privateLinkServiceId": "[resourceId('Microsoft.DataFactory/factories', variables('dataFactoryName'))]",
                            "groupIds": [
                                "portal"
                            ]
                        }
                    }
                ],
                "manualPrivateLinkServiceConnections": [
                ],
                "subnet": {
                    "id": "[variables('subnetId')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
            "apiVersion": "2020-05-01",
            "name": "[concat(variables('privateEndpointNamePortal'), '/aRecord')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', variables('privateEndpointNamePortal'))]"
            ],
            "location": "[variables('location')]",
            "properties": {
                "privateDnsZoneConfigs": [
                    {
                        "name": "[concat(variables('privateEndpointNamePortal'), '-aRecord')]",
                        "properties": {
                            "privateDnsZoneId": "[variables('privateDnsZoneIdPortal')]"
                        }
                    }
                ]
            }
        },
        {
            "condition": "[not(empty(variables('keyVaultId')))]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "name": "AccessPolicyDeployment",
            "dependsOn": [
                "[resourceId('Microsoft.DataFactory/factories', variables('dataFactoryName'))]"
            ],
            "properties": {
                "expressionEvaluationOptions": {
                    "scope": "outer"
                },
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.KeyVault/vaults/accessPolicies",
                            "apiVersion": "2019-09-01",
                            "name": "[concat(variables('keyVaultName'), '/add')]",
                            "properties": {
                                "accessPolicies": [
                                    {
                                        "tenantId": "[reference(resourceId('Microsoft.DataFactory/factories', variables('dataFactoryName')), '2018-06-01', 'Full').identity.tenantId]",
                                        "objectId": "[reference(resourceId('Microsoft.DataFactory/factories', variables('dataFactoryName')), '2018-06-01', 'Full').identity.principalId]",
                                        "permissions": {
                                            "secrets": [
                                                "list",
                                                "get"
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ],
                    "outputs": {}
                }
            },
            "subscriptionId": "[variables('keyVaultSubscriptionId')]",
            "resourceGroup": "[variables('keyVaultResourceGroupName')]"
        }
    ],
    "outputs": {
        "dataFactoryId": {
            "type": "string",
            "value": "[resourceId('Microsoft.DataFactory/factories', variables('dataFactoryName'))]"
        }
    }
}