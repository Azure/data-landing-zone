{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Specifies the location for all resources."
            }
        },
        "dataFactoryName": {
            "type": "string",
            "metadata": {
                "description": "Specifies the name of the data factory."
            }
        },
        "dataFactoryGitAccount": {
            "type": "string",
            "metadata": {
                "description": "Specifies the account name for the repository connection."
            }
        },
        "dataFactoryGitRepo": {
            "type": "string",
            "metadata": {
                "description": "Specifies the repo name for the repository connection."
            }
        },
        "dataFactoryGitCollaborationBranch": {
            "type": "string",
            "metadata": {
                "description": "Specifies the collaboration branch name for the repository connection."
            }
        },
        "dataFactoryGitRootFolder": {
            "type": "string",
            "metadata": {
                "description": "Specifies the root folder in the branch for the repository connection."
            }
        },
        "dataFactoryGitType": {
            "type": "string",
            "allowedValues": [
                "FactoryGitHubConfiguration",
                "FactoryVSTSConfiguration"
            ],
            "metadata": {
                "description": "Specifies the type of git connection."
            }
        },
        "keyVaultId": {
            "type": "string",
            "metadata": {
                "description": "Specifies the resource id of the keyvault that should be linked to the data factory."
            }
        },
        "sqlServerId": {
            "type": "string",
            "metadata": {
                "description": "Specifies the resource id of the sql server that should be linked to the data factory."
            }
        },
        "sqlDatabaseId": {
            "type": "string",
            "metadata": {
                "description": "Specifies the resource id of the sql database that should be linked to the data factory."
            }
        },
        "subnetId": {
            "type": "string",
            "metadata": {
                "description": "Specifies the id of the subnet which the private endpoint uses."
            }
        },
        "privateDnsZoneResourceGroupId": {
            "type": "string",
            "metadata": {
                "description": "Specifies the ID of the resource group of the private dns zones."
            }
        }
    },
    "functions": [],
    "variables": {
        "location": "[parameters('location')]",
        "dataFactoryName": "[parameters('dataFactoryName')]",
        "azureManagedVnetIntegrationRuntimeName": "azureManagedVnetIntegrationRuntime",
        "dataFactoryGitAccount": "[parameters('dataFactoryGitAccount')]",
        "dataFactoryGitRepo": "[parameters('dataFactoryGitRepo')]",
        "dataFactoryGitCollaborationBranch": "[parameters('dataFactoryGitCollaborationBranch')]",
        "dataFactoryGitRootFolder": "[parameters('dataFactoryGitRootFolder')]",
        "dataFactoryGitType": "[parameters('dataFactoryGitType')]",
        "keyVaultId": "[parameters('keyVaultId')]",
        "keyVaultName": "[last(split(variables('keyVaultId'), '/'))]",
        "sqlServerId": "[parameters('sqlServerId')]",
        "sqlDatabaseId": "[parameters('sqlDatabaseId')]",
        "sqlDatabaseName": "[last(split(variables('sqlDatabaseId'), '/'))]",
        "subnetId": "[parameters('subnetId')]",
        "privateDnsZoneResourceGroupId": "[parameters('privateDnsZoneResourceGroupId')]",
        "privateDnsZoneResourceGroupName": "[last(split(variables('privateDnsZoneResourceGroupId'), '/'))]",
        "templateUri": "https://raw.githubusercontent.com/Azure/data-node/main/infra/PrivateEndpoint/deploy.privateEndpoint.json?token=AIHRGTUPBHOMXOH6QQG6E7C7UF6KO"
    },
    "resources": [
        {
            "name": "[variables('dataFactoryName')]",
            "type": "Microsoft.DataFactory/factories",
            "apiVersion": "2018-06-01",
            "location": "[variables('location')]",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                // "repoConfiguration": {
                //     "accountName": "[variables('dataFactoryGitAccount')]",
                //     "repositoryName": "[variables('dataFactoryGitRepo')]",
                //     "collaborationBranch": "[variables('dataFactoryGitCollaborationBranch')]",
                //     "rootFolder": "[variables('dataFactoryGitRootFolder')]",
                //     "type": "[variables('dataFactoryGitType')]"
                // },
                "globalParameters": {
                }
            },
            "resources": [
                {
                    "name": "default",
                    "type": "managedVirtualNetworks",
                    "apiVersion": "2018-06-01",
                    "dependsOn": [
                        "[resourceId('Microsoft.DataFactory/factories', variables('dataFactoryName'))]"
                    ],
                    "properties": {}
                },
                {
                    "name": "[variables('azureManagedVnetIntegrationRuntimeName')]",
                    "type": "integrationRuntimes",
                    "apiVersion": "2018-06-01",
                    "dependsOn": [
                        "[resourceId('Microsoft.DataFactory/factories', variables('dataFactoryName'))]",
                        "[resourceId('Microsoft.DataFactory/factories/managedVirtualNetworks', variables('dataFactoryName'), 'default')]"
                    ],
                    "properties": {
                        "type": "Managed",
                        "typeProperties": {
                            "computeProperties": {
                                "location": "[variables('location')]",
                                "dataFlowProperties": {
                                    "computeType": "General",
                                    "coreCount": 8,
                                    "timeToLive": 0
                                }
                            }
                        },
                        "managedVirtualNetwork": {
                            "type": "ManagedVirtualNetworkReference",
                            "referenceName": "default"
                        }
                    }
                },
                {
                    "condition": "[not(empty(variables('keyVaultId')))]",
                    "name": "[concat('default/', replace(variables('keyVaultName'), '-', ''))]",
                    "type": "managedVirtualNetworks/managedPrivateEndpoints",
                    "apiVersion": "2018-06-01",
                    "dependsOn": [
                        "[resourceId('Microsoft.DataFactory/factories', variables('dataFactoryName'))]",
                        "[resourceId('Microsoft.DataFactory/factories/managedVirtualNetworks', variables('dataFactoryName'), 'default')]",
                        "[resourceId('Microsoft.DataFactory/factories/integrationRuntimes', variables('dataFactoryName'), variables('azureManagedVnetIntegrationRuntimeName'))]"
                    ],
                    "properties": {
                        "privateLinkResourceId": "[variables('keyVaultId')]",
                        "groupId": "vault"
                    }
                },
                {
                    "condition": "[not(empty(variables('keyVaultId')))]",
                    "name": "[replace(variables('keyVaultName'), '-', '')]",
                    "type": "linkedservices",
                    "apiVersion": "2018-06-01",
                    "dependsOn": [
                        "[resourceId('Microsoft.DataFactory/factories', variables('dataFactoryName'))]",
                        "[resourceId('Microsoft.DataFactory/factories/managedVirtualNetworks', variables('dataFactoryName'), 'default')]",
                        "[resourceId('Microsoft.DataFactory/factories/integrationRuntimes', variables('dataFactoryName'), variables('azureManagedVnetIntegrationRuntimeName'))]",
                        "[resourceId('Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints',  variables('dataFactoryName'), 'default', replace(variables('keyVaultName'), '-', ''))]"
                    ],
                    "properties": {
                        "type": "AzureKeyVault",
                        "annotations": [],
                        "additionalProperties": {},
                        "connectVia": {
                            "type": "IntegrationRuntimeReference",
                            "referenceName": "[variables('azureManagedVnetIntegrationRuntimeName')]"
                        },
                        "description": "Key Vault for data product",
                        "parameters": {},
                        "typeProperties": {
                            "baseUrl": "[concat('https://', variables('keyVaultName'), '.vault.azure.net/')]"
                        }
                    }
                },
                {
                    "condition": "[not(empty(variables('sqlDatabaseId')))]",
                    "name": "[concat('default/', replace(variables('sqlDatabaseName'), '-', ''))]",
                    "type": "managedVirtualNetworks/managedPrivateEndpoints",
                    "apiVersion": "2018-06-01",
                    "dependsOn": [
                        "[resourceId('Microsoft.DataFactory/factories', variables('dataFactoryName'))]",
                        "[resourceId('Microsoft.DataFactory/factories/managedVirtualNetworks', variables('dataFactoryName'), 'default')]",
                        "[resourceId('Microsoft.DataFactory/factories/integrationRuntimes', variables('dataFactoryName'), variables('azureManagedVnetIntegrationRuntimeName'))]"
                    ],
                    "properties": {
                        "privateLinkResourceId": "[variables('sqlServerId')]",
                        "groupId": "sqlServer"
                    }
                },
                {
                    "condition": "[not(empty(variables('sqlDatabaseId')))]",
                    "name": "[replace(variables('sqlDatabaseName'), '-', '')]",
                    "type": "linkedservices",
                    "apiVersion": "2018-06-01",
                    "dependsOn": [
                        "[resourceId('Microsoft.DataFactory/factories', variables('dataFactoryName'))]",
                        "[resourceId('Microsoft.DataFactory/factories/managedVirtualNetworks', variables('dataFactoryName'), 'default')]",
                        "[resourceId('Microsoft.DataFactory/factories/integrationRuntimes', variables('dataFactoryName'), variables('azureManagedVnetIntegrationRuntimeName'))]",
                        "[resourceId('Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints',  variables('dataFactoryName'), 'default', replace(variables('sqlDatabaseName'), '-', ''))]"
                    ],
                    "properties": {
                        "type": "AzureSqlDatabase",
                        "annotations": [],
                        "additionalProperties": {},
                        "connectVia": {
                            "type": "IntegrationRuntimeReference",
                            "referenceName": "[variables('azureManagedVnetIntegrationRuntimeName')]"
                        },
                        "description": "Key Vault for data product",
                        "parameters": {},
                        "typeProperties": {
                            "connectionString": {
                                "type": "AzureKeyVaultSecret",
                                "store": {
                                    "referenceName": "[replace(variables('keyVaultName'), '-', '')]",
                                    "type": "LinkedServiceReference"
                                },
                                "secretName": "AdfMetastoreDBConnectionString"
                            }
                        }
                    }
                }
            ]
        },
        {
            "name": "PrivateEndpointDeployment",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "dependsOn": [
                "[resourceId('Microsoft.DataFactory/factories', variables('dataFactoryName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('templateUri')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "privateEndpointName": {
                        "value": "[concat(variables('dataFactoryName'), '-private-endpoint')]"
                    },
                    "privateEndpointLocation": {
                        "value": "[variables('location')]"
                    },
                    "privateLinkServiceResourceId": {
                        "value": "[resourceId('Microsoft.DataFactory/factories', variables('dataFactoryName'))]"
                    },
                    "privateLinkServiceGroupId": {
                        "value": "dataFactory"
                    },
                    "subnetResourceId": {
                        "value": "[variables('subnetId')]"
                    },
                    "privateDnsZoneId": {
                        "value": "[resourceId(reference(variables('privateDnsZoneResourceGroupId'), '2020-06-01', 'Full').subscriptionId, variables('privateDnsZoneResourceGroupName'), 'Microsoft.Network/privateDnsZones', 'privatelink.datafactory.azure.net')]"
                    }
                }
            }
        },
        {
            "name": "AccessPolicyDeployment",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "dependsOn": [
                "[resourceId('Microsoft.DataFactory/factories', variables('dataFactoryName'))]"
            ],
            "properties": {
                "expressionEvaluationOptions": {
                    "scope": "outer"
                },
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "name": "[concat(variables('keyVaultName'), '/dataFactoryAccessPolicy')]",
                            "type": "Microsoft.KeyVault/vaults/accessPolicies",
                            "apiVersion": "2019-09-01",
                            "properties": {
                                "accessPolicies": [
                                    {
                                        "tenantId": "[reference(resourceId('Microsoft.DataFactory/factories', variables('dataFactoryName')), '2018-06-01', 'Full').identity.tenantId]",
                                        "objectId": "[reference(resourceId('Microsoft.DataFactory/factories', variables('dataFactoryName')), '2018-06-01', 'Full').identity.principalId]",
                                        "permissions": {
                                            "secrets": [
                                                "list",
                                                "get"
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ],
                    "outputs": {}
                }
            },
            "subscriptionId": "[split(variables('keyVaultId'), '/')[2]]",
            "resourceGroup": "[split(variables('keyVaultId'), '/')[4]]"
        }
    ],
    "outputs": {}
}