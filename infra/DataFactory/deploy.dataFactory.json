{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "tenantId": {
            "type": "string",
            "metadata": {
                "description": "Specifies the tenant ID."
            }
        },
        "purviewClientId": {
            "type": "string",
            "metadata": {
                "description": "Specifies the client ID of the service principal with access to Purview."
            }
        },
        "purviewAccountName": {
            "type": "string",
            "metadata": {
                "description": "Specifies the name of the Purview account in the hub."
            }
        },
        "dataLandingZoneName": {
            "type": "string",
            "metadata": {
                "description": "Specifies the name of the data landing zone."
            }
        },
        "databricksAccessToken": {
            "type": "secureString",
            "metadata": {
                "description": "Secure string for accessToken of databricksLinkedService"
            }
        },
        "databricksWorkspaceUrl": {
            "type": "string",
            "metadata": {
                "description": "Specifies databricks workspace url."
            }
        },
        "purviewSecretPath": {
            "type": "string",
            "metadata": {
                "description": "Specifies purview sp secret."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Specifies the location for all resources."
            }
        },
        "dataFactoryName": {
            "type": "string",
            "metadata": {
                "description": "Specifies the name of the data factory."
            }
        },
        "dataFactoryGitAccount": {
            "type": "string",
            "metadata": {
                "description": "Specifies the account name for the repository connection."
            }
        },
        "dataFactoryGitRepo": {
            "type": "string",
            "metadata": {
                "description": "Specifies the repo name for the repository connection."
            }
        },
        "dataFactoryGitCollaborationBranch": {
            "type": "string",
            "metadata": {
                "description": "Specifies the collaboration branch name for the repository connection."
            }
        },
        "dataFactoryGitRootFolder": {
            "type": "string",
            "metadata": {
                "description": "Specifies the root folder in the branch for the repository connection."
            }
        },
        "dataFactoryGitType": {
            "type": "string",
            "allowedValues": [
                "FactoryGitHubConfiguration",
                "FactoryVSTSConfiguration"
            ],
            "metadata": {
                "description": "Specifies the type of git connection."
            }
        },
        "purviewId": {
            "type": "string",
            "metadata": {
                "description": "Specifies the resource id of the purview data catalog that should be linked to the data factory."
            }
        },
        "keyVaultId": {
            "type": "string",
            "metadata": {
                "description": "Specifies the resource id of the keyvault that should be linked to the data factory."
            }
        },
        "sqlServerId": {
            "type": "string",
            "metadata": {
                "description": "Specifies the resource id of the sql server that should be linked to the data factory."
            }
        },
        "sqlDatabaseId": {
            "type": "string",
            "metadata": {
                "description": "Specifies the resource id of the sql database that should be linked to the data factory."
            }
        },
        "subnetId": {
            "type": "string",
            "metadata": {
                "description": "Specifies the id of the subnet which the private endpoint uses."
            }
        },
        "privateDnsZoneIdDataFactory": {
            "type": "string",
            "metadata": {
                "description": "Specifies the ID of the private dns zone for data factory."
            }
        },
        "privateDnsZoneIdPortal": {
            "type": "string",
            "metadata": {
                "description": "Specifies the ID of the private dns zone for data factory portal."
            }
        }
    },
    "functions": [],
    "variables": {
        "tenantId": "[parameters('tenantId')]",
        "purviewClientId": "[parameters('purviewClientId')]",
        "purviewAccountName": "[parameters('purviewAccountName')]",
        "databricksAccessToken": "[parameters('databricksAccessToken')]",
        "dataLandingZoneName": "[parameters('dataLandingZoneName')]",
        "databricksWorkspaceUrl": "[parameters('databricksWorkspaceUrl')]",
        "purviewSecretPath": "[parameters('purviewSecretPath')]",
        "factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('dataFactoryName'))]",
        "location": "[parameters('location')]",
        "dataFactoryName": "[parameters('dataFactoryName')]",
        "defaultManagedVnetIntegrationRuntimeName": "AutoResolveIntegrationRuntime",
        "dataFactoryGitAccount": "[parameters('dataFactoryGitAccount')]",
        "dataFactoryGitRepo": "[parameters('dataFactoryGitRepo')]",
        "dataFactoryGitCollaborationBranch": "[parameters('dataFactoryGitCollaborationBranch')]",
        "dataFactoryGitRootFolder": "[parameters('dataFactoryGitRootFolder')]",
        "dataFactoryGitType": "[parameters('dataFactoryGitType')]",
        "purviewId": "[parameters('purviewId')]",
        "keyVaultId": "[parameters('keyVaultId')]",
        "keyVaultName": "[if(empty(variables('keyVaultId')), 'keyVaultNotSet', last(split(variables('keyVaultId'), '/')))]",
        "keyVaultSubscriptionId": "[if(empty(variables('keyVaultId')), subscription().subscriptionId, split(variables('keyVaultId'), '/')[2])]",
        "keyVaultResourceGroupName": "[if(empty(variables('keyVaultId')), resourceGroup().name, split(variables('keyVaultId'), '/')[4])]",
        "sqlServerId": "[parameters('sqlServerId')]",
        "sqlDatabaseId": "[parameters('sqlDatabaseId')]",
        "sqlDatabaseName": "[if(empty(variables('sqlDatabaseId')), 'sqlDatabaseNotSet', last(split(variables('sqlDatabaseId'), '/')))]",
        "subnetId": "[parameters('subnetId')]",
        "privateDnsZoneIdDataFactory": "[parameters('privateDnsZoneIdDataFactory')]",
        "privateDnsZoneIdPortal": "[parameters('privateDnsZoneIdPortal')]",
        "privateEndpointNameDataFactory": "[concat(variables('dataFactoryName'), '-datafactory-private-endpoint')]",
        "privateEndpointNamePortal": "[concat(variables('dataFactoryName'), '-portal-private-endpoint')]"
    },
    "resources": [
        {
        "type": "Microsoft.DataFactory/factories",
        "apiVersion": "2018-06-01",
        "name": "[variables('dataFactoryName')]",
        "location": "[variables('location')]",
        "identity": {
            "type": "SystemAssigned"
        },
        "properties": {
            // "repoConfiguration": {
            //     "accountName": "[variables('dataFactoryGitAccount')]",
            //     "repositoryName": "[variables('dataFactoryGitRepo')]",
            //     "collaborationBranch": "[variables('dataFactoryGitCollaborationBranch')]",
            //     "rootFolder": "[variables('dataFactoryGitRootFolder')]",
            //     "type": "[variables('dataFactoryGitType')]"
            // },
            "globalParameters": {
            },
            "publicNetworkAccess": "Disabled",
                "purviewConfiguration": {
                    "purviewResourceId": "[variables('purviewId')]"
                }
        },
        "resources": [
            {
                "name": "[concat(variables('dataFactoryName'), '/runEveryTenMinutes')]",
                "type": "Microsoft.DataFactory/factories/triggers",
                "apiVersion": "2018-06-01",
                "properties": {
                    "description": "Runs every ten minutes, not activated by default",
                    "annotations": [],
                    "runtimeState": "Stopped",
                    "pipelines": [
                        {
                            "pipelineReference": {
                                "referenceName": "databricksTableScanPipeline",
                                "type": "PipelineReference"
                            },
                            "parameters": {
                                "tenantID": "[variables('tenantId')]",
                                "clientID": "[variables('purviewClientId')]",
                                "purviewAccountName": "[variables('purviewAccountName')]",
                                "dataLandingZoneName": "[variables('dataLandingZoneName')]"
                            }
                        }
                    ],
                    "type": "ScheduleTrigger",
                    "typeProperties": {
                        "recurrence": {
                            "frequency": "Minute",
                            "interval": 10,
                            "startTime": "2021-02-10T19:37:00Z",
                            "timeZone": "UTC"
                        }
                    }
                },
                    "dependsOn": [
                        "[concat(variables('factoryId'), '/pipelines/databricksTableScanPipeline')]",
                        "[resourceId('Microsoft.DataFactory/factories', variables('dataFactoryName'))]"
                    ]
                },
                {
                    "name": "[concat(variables('dataFactoryName'), '/databricksLinkedService')]",
                    "type": "Microsoft.DataFactory/factories/linkedServices",
                    "apiVersion": "2018-06-01",
                    "properties": {
                        "annotations": [],
                        "type": "AzureDatabricks",
                        "typeProperties": {
                            "domain": "[variables('databricksWorkspaceUrl')]",
                            "accessToken": {
                                "type": "SecureString",
                                "value": "[variables('databricksAccessToken')]"
                            },
                            "newClusterNodeType": "Standard_DS3_v2",
                            "newClusterNumOfWorker": "2",
                            "newClusterSparkConf": {
                                "spark.clientsecret": "[variables('purviewSecretPath')]"
                            },
                            "newClusterSparkEnvVars": {
                                "PYSPARK_PYTHON": "/databricks/python3/bin/python3"
                            },
                            "newClusterVersion": "7.3.x-scala2.12"
                        }
                    },
                    "dependsOn": [
                        "[resourceId('Microsoft.DataFactory/factories', variables('dataFactoryName'))]"
                    ]
            },
            {
                    "name": "[concat(variables('dataFactoryName'), '/databricksTableScanPipeline')]",
                    "type": "Microsoft.DataFactory/factories/pipelines",
                    "apiVersion": "2018-06-01",
                    "properties": {
                    "activities": [
                        {
                            "name": "notebookPurviewScan",
                            "type": "DatabricksNotebook",
                            "dependsOn": [],
                            "policy": {
                                "timeout": "7.00:00:00",
                                "retry": 2,
                                "retryIntervalInSeconds": 30,
                                "secureOutput": false,
                                "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                                "notebookPath": "/databricksPurviewScan",
                                "baseParameters": {
                                    "tenantID": {
                                        "value": "@pipeline().parameters.tenantID",
                                        "type": "Expression"
                                    },
                                    "clientID": {
                                        "value": "@pipeline().parameters.clientID",
                                        "type": "Expression"
                                    },
                                    "purviewAccountName": {
                                        "value": "@pipeline().parameters.purviewAccountName",
                                        "type": "Expression"
                                    },
                                    "dataLandingZoneName": "@pipeline().parameters.dataLandingZoneName"
                                },
                                "libraries": [
                                    {
                                        "pypi": {
                                            "package": "pyapacheatlas"
                                        }
                                    }
                                ]
                            },
                            "linkedServiceName": {
                                "referenceName": "databricksLinkedService",
                                "type": "LinkedServiceReference"
                            }
                        }
                    ],
                    "parameters": {
                        "tenantID": {
                            "type": "string"
                        },
                        "clientID": {
                            "type": "string"
                        },
                        "purviewAccountName": {
                            "type": "string"
                        },
                        "dataLandingZoneName": {
                            "type": "string"
                        }
                    },
                    "annotations": [],
                    "lastPublishTime": "2021-02-10T22:35:54Z"
                    },
                    "dependsOn": [
                        "[concat(variables('factoryId'), '/linkedServices/databricksLinkedService')]",
                        "[resourceId('Microsoft.DataFactory/factories', variables('dataFactoryName'))]"
                    ]
                },
                {
                    "type": "managedVirtualNetworks",
                    "apiVersion": "2018-06-01",
                    "name": "default",
                    "dependsOn": [
                        "[resourceId('Microsoft.DataFactory/factories', variables('dataFactoryName'))]"
                    ],
                    "properties": {}
                },
                {
                    "type": "integrationRuntimes",
                    "apiVersion": "2018-06-01",
                    "name": "[variables('defaultManagedVnetIntegrationRuntimeName')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.DataFactory/factories', variables('dataFactoryName'))]",
                        "[resourceId('Microsoft.DataFactory/factories/managedVirtualNetworks', variables('dataFactoryName'), 'default')]"
                    ],
                    "properties": {
                        "type": "Managed",
                        "managedVirtualNetwork": {
                            "type": "ManagedVirtualNetworkReference",
                            "referenceName": "default"
                        },
                        "typeProperties": {
                            "computeProperties": {
                                "location": "AutoResolve"
                            }
                        }
                    }
                },
                {
                    "condition": "[not(empty(variables('keyVaultId')))]",
                    "type": "managedVirtualNetworks/managedPrivateEndpoints",
                    "apiVersion": "2018-06-01",
                    "name": "[concat('default/', replace(variables('keyVaultName'), '-', ''))]",
                    "dependsOn": [
                        "[resourceId('Microsoft.DataFactory/factories', variables('dataFactoryName'))]",
                        "[resourceId('Microsoft.DataFactory/factories/managedVirtualNetworks', variables('dataFactoryName'), 'default')]",
                        "[resourceId('Microsoft.DataFactory/factories/integrationRuntimes', variables('dataFactoryName'), variables('defaultManagedVnetIntegrationRuntimeName'))]"
                    ],
                    "properties": {
                        "privateLinkResourceId": "[variables('keyVaultId')]",
                        "groupId": "vault"
                    }
                },
                {
                    "condition": "[not(empty(variables('keyVaultId')))]",
                    "type": "linkedservices",
                    "apiVersion": "2018-06-01",
                    "name": "[replace(variables('keyVaultName'), '-', '')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.DataFactory/factories', variables('dataFactoryName'))]",
                        "[resourceId('Microsoft.DataFactory/factories/managedVirtualNetworks', variables('dataFactoryName'), 'default')]",
                        "[resourceId('Microsoft.DataFactory/factories/integrationRuntimes', variables('dataFactoryName'), variables('defaultManagedVnetIntegrationRuntimeName'))]",
                        "[resourceId('Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints',  variables('dataFactoryName'), 'default', replace(variables('keyVaultName'), '-', ''))]"
                    ],
                    "properties": {
                        "type": "AzureKeyVault",
                        "annotations": [],
                        "additionalProperties": {},
                        "connectVia": {
                            "type": "IntegrationRuntimeReference",
                            "referenceName": "[variables('defaultManagedVnetIntegrationRuntimeName')]"
                        },
                        "description": "Key Vault for data product",
                        "parameters": {},
                        "typeProperties": {
                            "baseUrl": "[concat('https://', variables('keyVaultName'), '.vault.azure.net/')]"
                        }
                    }
                },
                {
                    "condition": "[not(empty(variables('sqlDatabaseId')))]",
                    "type": "managedVirtualNetworks/managedPrivateEndpoints",
                    "apiVersion": "2018-06-01",
                    "name": "[concat('default/', replace(variables('sqlDatabaseName'), '-', ''))]",
                    "dependsOn": [
                        "[resourceId('Microsoft.DataFactory/factories', variables('dataFactoryName'))]",
                        "[resourceId('Microsoft.DataFactory/factories/managedVirtualNetworks', variables('dataFactoryName'), 'default')]",
                        "[resourceId('Microsoft.DataFactory/factories/integrationRuntimes', variables('dataFactoryName'), variables('defaultManagedVnetIntegrationRuntimeName'))]"
                    ],
                    "properties": {
                        "privateLinkResourceId": "[variables('sqlServerId')]",
                        "groupId": "sqlServer"
                    }
                },
                {
                    "condition": "[not(empty(variables('sqlDatabaseId')))]",
                    "type": "linkedservices",
                    "apiVersion": "2018-06-01",
                    "name": "[replace(variables('sqlDatabaseName'), '-', '')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.DataFactory/factories', variables('dataFactoryName'))]",
                        "[resourceId('Microsoft.DataFactory/factories/managedVirtualNetworks', variables('dataFactoryName'), 'default')]",
                        "[resourceId('Microsoft.DataFactory/factories/integrationRuntimes', variables('dataFactoryName'), variables('defaultManagedVnetIntegrationRuntimeName'))]",
                        "[resourceId('Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints',  variables('dataFactoryName'), 'default', replace(variables('sqlDatabaseName'), '-', ''))]",
                        "[resourceId('Microsoft.DataFactory/factories/linkedservices', variables('dataFactoryName'), replace(variables('keyVaultName'), '-', ''))]"
                    ],
                    "properties": {
                        "type": "AzureSqlDatabase",
                        "annotations": [],
                        "additionalProperties": {},
                        "connectVia": {
                            "type": "IntegrationRuntimeReference",
                            "referenceName": "[variables('defaultManagedVnetIntegrationRuntimeName')]"
                        },
                        "description": "Key Vault for data product",
                        "parameters": {},
                        "typeProperties": {
                            "connectionString": {
                                "type": "AzureKeyVaultSecret",
                                "store": {
                                    "referenceName": "[replace(variables('keyVaultName'), '-', '')]",
                                    "type": "LinkedServiceReference"
                                },
                                "secretName": "AdfMetastoreDBConnectionString"
                            }
                        }
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2020-05-01",
            "name": "[variables('privateEndpointNameDataFactory')]",
            "dependsOn": [
                "[resourceId('Microsoft.DataFactory/factories', variables('dataFactoryName'))]"
            ],
            "location": "[variables('location')]",
            "properties": {
                "privateLinkServiceConnections": [
                    {
                        "name": "[variables('privateEndpointNameDataFactory')]",
                        "properties": {
                            "privateLinkServiceId": "[resourceId('Microsoft.DataFactory/factories', variables('dataFactoryName'))]",
                            "groupIds": [
                                "dataFactory"
                            ]
                        }
                    }
                ],
                "manualPrivateLinkServiceConnections": [
                ],
                "subnet": {
                    "id": "[variables('subnetId')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
            "apiVersion": "2020-05-01",
            "name": "[concat(variables('privateEndpointNameDataFactory'), '/aRecord')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', variables('privateEndpointNameDataFactory'))]"
            ],
            "location": "[variables('location')]",
            "properties": {
                "privateDnsZoneConfigs": [
                    {
                        "name": "[concat(variables('privateEndpointNameDataFactory'), '-aRecord')]",
                        "properties": {
                            "privateDnsZoneId": "[variables('privateDnsZoneIdDataFactory')]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2020-05-01",
            "name": "[variables('privateEndpointNamePortal')]",
            "dependsOn": [
                "[resourceId('Microsoft.DataFactory/factories', variables('dataFactoryName'))]"
            ],
            "location": "[variables('location')]",
            "properties": {
                "privateLinkServiceConnections": [
                    {
                        "name": "[variables('privateEndpointNamePortal')]",
                        "properties": {
                            "privateLinkServiceId": "[resourceId('Microsoft.DataFactory/factories', variables('dataFactoryName'))]",
                            "groupIds": [
                                "portal"
                            ]
                        }
                    }
                ],
                "manualPrivateLinkServiceConnections": [
                ],
                "subnet": {
                    "id": "[variables('subnetId')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
            "apiVersion": "2020-05-01",
            "name": "[concat(variables('privateEndpointNamePortal'), '/aRecord')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', variables('privateEndpointNamePortal'))]"
            ],
            "location": "[variables('location')]",
            "properties": {
                "privateDnsZoneConfigs": [
                    {
                        "name": "[concat(variables('privateEndpointNamePortal'), '-aRecord')]",
                        "properties": {
                            "privateDnsZoneId": "[variables('privateDnsZoneIdPortal')]"
                        }
                    }
                ]
            }
        },
        {
            "condition": "[not(empty(variables('keyVaultId')))]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "name": "AccessPolicyDeployment",
            "dependsOn": [
                "[resourceId('Microsoft.DataFactory/factories', variables('dataFactoryName'))]"
            ],
            "properties": {
                "expressionEvaluationOptions": {
                    "scope": "outer"
                },
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.KeyVault/vaults/accessPolicies",
                            "apiVersion": "2019-09-01",
                            "name": "[concat(variables('keyVaultName'), '/add')]",
                            "properties": {
                                "accessPolicies": [
                                    {
                                        "tenantId": "[reference(resourceId('Microsoft.DataFactory/factories', variables('dataFactoryName')), '2018-06-01', 'Full').identity.tenantId]",
                                        "objectId": "[reference(resourceId('Microsoft.DataFactory/factories', variables('dataFactoryName')), '2018-06-01', 'Full').identity.principalId]",
                                        "permissions": {
                                            "secrets": [
                                                "list",
                                                "get"
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ],
                    "outputs": {}
                }
            },
            "subscriptionId": "[variables('keyVaultSubscriptionId')]",
            "resourceGroup": "[variables('keyVaultResourceGroupName')]"
        }
    ],
    "outputs": {
        "dataFactoryId": {
            "type": "string",
            "value": "[resourceId('Microsoft.DataFactory/factories', variables('dataFactoryName'))]"
        }
    }
}