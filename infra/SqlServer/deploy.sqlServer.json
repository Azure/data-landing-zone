{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "metadata": {
                "description": "Specifies the location for all resources."
            }
        },
        "sqlServerName": {
            "type": "string",
            "metadata": {
                "description": "Specifies the name of the SQL server."
            }
        },
        "administratorLogin": {
            "type": "string",
            "defaultValue": "sqladminuser",
            "metadata": {
                "description": "Specifies the login account name for the SQL server."
            }
        },
        "administratorLoginPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Specifies the password for the SQL server."
            }
        },
       "sqlAdminGroupName": {
            "type": "string",
            "metadata": {
                "description": "Specifies the name of the Azure Active Directory group of the SQL admin group."
            }
        },
        "sqlAdminGroupObjectID": {
            "type": "string",
            "metadata": {
                "description": "Specifies the Azure Active Directory objectID of the SQL admin group."
            }
        },
        "subnetId": {
            "type": "string",
            "metadata": {
                "description": "Specifies the id of the subnet which the private endpoint uses."
            }
        },
        "privateDnsZoneId": {
            "type": "string",
            "metadata": {
                "description": "Specifies the ID of the private dns zone."
            }
        },
        "tags": {
            "type": "object",
            "defaultValue": {},
            "metadata": {
                "description": "Specifies tags which should be added to all resources."
            }
        }
    },
    "functions": [],
    "variables": {
        "location": "[parameters('location')]",
        "administratorLogin": "[parameters('administratorLogin')]",
        "administratorLoginPassword": "[parameters('administratorLoginPassword')]",
        "sqlServerName": "[parameters('sqlServerName')]",
        "sqlAdminGroupName": "[parameters('sqlAdminGroupName')]",
        "sqlAdminGroupObjectID": "[parameters('sqlAdminGroupObjectID')]",
        "subnetId": "[parameters('subnetId')]",
        "privateDnsZoneId": "[parameters('privateDnsZoneId')]",
        "tags": "[parameters('tags')]",
        "privateEndpointName": "[concat(variables('sqlServerName'), '-private-endpoint')]"
    },
    "resources": [
        {
            "type": "Microsoft.Sql/servers",
            "apiVersion": "2020-08-01-preview",
            "name": "[variables('sqlServerName')]",
            "tags": "[variables('tags')]",
            "location": "[variables('location')]",
            "properties": {
                "administratorLogin": "[variables('administratorLogin')]",
                "administratorLoginPassword": "[variables('administratorLoginPassword')]",
                "version": "12.0",
                "minimalTlsVersion": "1.2",
                "publicNetworkAccess": "Disabled"
            },
            "identity": {
                "type": "SystemAssigned"
            },
            "resources": [
                {
                    "condition": "[and(not(empty(variables('sqlAdminGroupObjectID'))), not(empty(variables('sqlAdminGroupObjectID'))))]",
                    "type": "administrators",
                    "apiVersion": "2020-08-01-preview",
                    "name": "ActiveDirectory",
                    "dependsOn": [
                        "[concat('Microsoft.Sql/servers/', variables('sqlServerName'))]"
                    ],
                    "properties": {
                        "administratorType": "ActiveDirectory",
                        "login": "[variables('sqlAdminGroupName')]",
                        "sid": "[variables('sqlAdminGroupObjectID')]",
                        "tenantId": "[subscription().tenantId]"
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2020-05-01",
            "name": "[variables('privateEndpointName')]",
            "tags": "[variables('tags')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]"
            ],
            "location": "[variables('location')]",
            "properties": {
                "privateLinkServiceConnections": [
                    {
                        "name": "[variables('privateEndpointName')]",
                        "properties": {
                            "privateLinkServiceId": "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]",
                            "groupIds": [
                                "sqlServer"
                            ]
                        }
                    }
                ],
                "manualPrivateLinkServiceConnections": [
                ],
                "subnet": {
                    "id": "[variables('subnetId')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
            "apiVersion": "2020-05-01",
            "name": "[concat(variables('privateEndpointName'), '/aRecord')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', variables('privateEndpointName'))]"
            ],
            "location": "[variables('location')]",
            "properties": {
                "privateDnsZoneConfigs": [
                    {
                        "name": "[concat(variables('privateEndpointName'), '-aRecord')]",
                        "properties": {
                            "privateDnsZoneId": "[variables('privateDnsZoneId')]"
                        }
                    }
                ]
            }
        }
    ],
    "outputs": {
        "sqlServerId": {
            "type": "string",
            "value": "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]"
        }
    }
}