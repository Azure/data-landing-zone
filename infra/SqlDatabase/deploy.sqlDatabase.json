{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "metadata": {
                "description": "Specifies the location for all resources."
            }
        },
        "sqlServerId": {
            "type": "string",
            "metadata": {
                "description": "Specifies the resource id of the SQL server to which the database will be deployed."
            }
        },
        "sqlServerAdministratorLoginPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Specifies the admin passwort of the SQL server to which the database will be deployed."
            }
        },
        "sqlDatabaseName": {
            "type": "string",
            "metadata": {
                "description": "Specifies the name of the SQL database."
            }
        },
        "sqlDatabaseSkuName": {
            "type": "string",
            "defaultValue": "GP_Gen5",
            "metadata": {
                "description": "Specifies the SKU of the SQL database which is typically a letter + number code (e.g. 'GP_S_Gen5_1')."
            }
        },
        "sqlDatabaseTier": {
            "type": "string",
            "defaultValue": "GeneralPurpose",
            "metadata": {
                "description": "Specifies the or edition of the database SKU (e.g. 'GeneralPurpose', etc.)."
            }
        },
        "sqlDatabaseCapacity": {
            "type": "int",
            "metadata": {
                "description": "Specifies the capacity in DTUs or vCores of the SQL database."
            }
        },
        "sqlDatabaseMaxSizeInBytes": {
            "type": "int",
            "defaultValue": 34359738368,
            "metadata": {
                "description": "Specifies the maximum size of the database expressed in bytes."
            }
        },
        "sqlDatabaseZoneRedundant": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Specifies whether the database should be zone redundant which means the replicas of this database will be spread across multiple availability zones."
            }
        },
        "sqlDatabaseLicenseType": {
            "type": "string",
            "defaultValue": "LicenseIncluded",
            "allowedValues": [
                "LicenseIncluded",
                "BasePrice"
            ],
            "metadata": {
                "description": "Specifies the license type to apply for this database (if you bring your own license, then select 'BasePrice')."
            }
        },
        "sqlDatabaseReadReplicaCount": {
            "type": "int",
            "minValue": 0,
            "maxValue": 4,
            "defaultValue": 0,
            "metadata": {
                "description": "Specifies the number of readonly secondary replicas associated with the database."
            }
        },
        "sqlDatabaseMinCapacity": {
            "type": "string",
            "defaultValue": "0.5",
            "metadata": {
                "description": "Specifies the minimal capacity that database will always have allocated, if not paused (only applies to serverless tier)."
            }
        },
        "sqlDatabaseStorageAccountType": {
            "type": "string",
            "defaultValue": "GRS",
            "allowedValues": [
                "GRS",
                "LRS",
                "ZRS"
            ],
            "metadata": {
                "description": "Specifies the storage account type used to store backups for this database."
            }
        },
        "sqlDatabaseAutoPauseDelay": {
            "type": "int",
            "minValue": -1,
            "maxValue": 10080,
            "defaultValue": -1,
            "metadata": {
                "description": "Specifies the time in minutes after which database is automatically paused (only applies to serverless tier)."
            }
        },
        "keyVaultId": {
            "type": "string",
            "metadata": {
                "description": "Specifies the resource id of the key vault to store the storage access key."
            }
        },
        "tags": {
            "type": "object",
            "defaultValue": {},
            "metadata": {
                "description": "Specifies tags which should be added to all resources."
            }
        }
    },
    "functions": [],
    "variables": {
        "location": "[parameters('location')]",
        "sqlServerId": "[parameters('sqlServerId')]",
        "sqlServerName": "[last(split(variables('sqlServerId'), '/'))]",
        "sqlServerAdministratorLoginPassword": "[parameters('sqlServerAdministratorLoginPassword')]",
        "sqlDatabaseSkuName": "[parameters('sqlDatabaseSkuName')]",
        "sqlDatabaseTier": "[parameters('sqlDatabaseTier')]",
        "sqlDatabaseName": "[parameters('sqlDatabaseName')]",
        "sqlDatabaseMaxSizeInBytes": "[parameters('sqlDatabaseMaxSizeInBytes')]",
        "sqlDatabaseZoneRedundant": "[parameters('sqlDatabaseZoneRedundant')]",
        "sqlDatabaseLicenseType": "[parameters('sqlDatabaseLicenseType')]",
        "sqlDatabaseReadReplicaCount": "[parameters('sqlDatabaseReadReplicaCount')]",
        "sqlDatabaseMinCapacity": "[parameters('sqlDatabaseMinCapacity')]",
        "sqlDatabaseCapacity": "[parameters('sqlDatabaseCapacity')]",
        "sqlDatabaseStorageAccountType": "[parameters('sqlDatabaseStorageAccountType')]",
        "sqlDatabaseAutoPauseDelay": "[parameters('sqlDatabaseAutoPauseDelay')]",
        "keyVaultId": "[parameters('keyVaultId')]",
        "keyVaultName": "[last(split(variables('keyVaultId'), '/'))]",
        "tags": "[parameters('tags')]",
        "connectionStringSecretName": "[concat(variables('sqlDatabaseName'), 'ConnectionString')]",
        "usernameSecretName": "[concat(variables('sqlDatabaseName'), 'Username')]",
        "passwordSecretName": "[concat(variables('sqlDatabaseName'), 'Password')]"
    },
    "resources": [
        {
            "type": "Microsoft.Sql/servers/databases",
            "apiVersion": "2020-08-01-preview",
            "name": "[concat(variables('sqlServerName'), '/', variables('sqlDatabaseName'))]",
            "tags": "[variables('tags')]",
            "location": "[variables('location')]",
            "sku": {
                "name": "[variables('sqlDatabaseSkuName')]",
                "tier": "[variables('sqlDatabaseTier')]",
                "capacity": "[variables('sqlDatabaseCapacity')]"
            },
            "properties": {
                "collation": "SQL_Latin1_General_CP1_CI_AS",
                "maxSizeBytes": "[variables('sqlDatabaseMaxSizeInBytes')]",
                "catalogCollation": "DATABASE_DEFAULT",
                "zoneRedundant": "[variables('sqlDatabaseZoneRedundant')]",
                "licenseType": "[variables('sqlDatabaseLicenseType')]",
                "readScale": "[if(greater(variables('sqlDatabaseReadReplicaCount'), 0), 'Enabled', 'Disabled')]",
                "readReplicaCount": "[variables('sqlDatabaseReadReplicaCount')]",
                "autoPauseDelay": "[variables('sqlDatabaseAutoPauseDelay')]",
                "storageAccountType": "[variables('sqlDatabaseStorageAccountType')]",
                "minCapacity": "[variables('sqlDatabaseMinCapacity')]"
            }
        },
        {
            "name": "SqlDbSecretDeployment",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', variables('sqlServerName'), variables('sqlDatabaseName'))]"
            ],
            "properties": {
                "expressionEvaluationOptions": {
                    "scope": "outer"
                },
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.KeyVault/vaults/secrets",
                            "name": "[concat(variables('keyVaultName'), '/', variables('connectionStringSecretName'))]",
                            "apiVersion": "2019-09-01",
                            "properties": {
                                "contentType": "text/plain",
                                "value": "[concat('Server=tcp:', reference(resourceId('Microsoft.Sql/servers', variables('sqlServerName')), '2019-06-01-preview').fullyQualifiedDomainName, ',1433;Initial Catalog=', variables('sqlDatabaseName'), ';Persist Security Info=False;User ID=', reference(resourceId('Microsoft.Sql/servers', variables('sqlServerName')), '2019-06-01-preview').administratorLogin, ';Password=', variables('sqlServerAdministratorLoginPassword'), ';MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;')]",
                                "attributes": {
                                    "enabled": true
                                }
                            }
                        },
                        {
                            "type": "Microsoft.KeyVault/vaults/secrets",
                            "name": "[concat(variables('keyVaultName'), '/', variables('usernameSecretName'))]",
                            "apiVersion": "2019-09-01",
                            "properties": {
                                "contentType": "text/plain",
                                "value": "[reference(resourceId('Microsoft.Sql/servers', variables('sqlServerName')), '2019-06-01-preview').administratorLogin]",
                                "attributes": {
                                    "enabled": true
                                }
                            }
                        },
                        {
                            "type": "Microsoft.KeyVault/vaults/secrets",
                            "name": "[concat(variables('keyVaultName'), '/', variables('passwordSecretName'))]",
                            "apiVersion": "2019-09-01",
                            "properties": {
                                "contentType": "text/plain",
                                "value": "[variables('sqlServerAdministratorLoginPassword')]",
                                "attributes": {
                                    "enabled": true
                                }
                            }
                        }
                    ],
                    "outputs": {}
                }
            },
            "subscriptionId": "[split(variables('keyVaultId'), '/')[2]]",
            "resourceGroup": "[split(variables('keyVaultId'), '/')[4]]"
        }
    ],
    "outputs": {
        "sqlDatabaseId": {
            "type": "string",
            "value": "[resourceId('Microsoft.Sql/servers/databases', variables('sqlServerName'), variables('sqlDatabaseName'))]"
        },
        "sqlDatabaseKeyVaultId": {
            "type": "string",
            "value": "[variables('keyVaultId')]"
        },
        "sqlDatabaseConnectionStringSecretName": {
            "type": "string",
            "value": "[variables('connectionStringSecretName')]"
        },
        "sqlDatabaseUsernameSecretName": {
            "type": "string",
            "value": "[variables('usernameSecretName')]"
        },
        "sqlDatabasePasswordSecretName": {
            "type": "string",
            "value": "[variables('passwordSecretName')]"
        }
    }
}