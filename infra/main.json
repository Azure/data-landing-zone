{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.4.1.14562",
      "templateHash": "14172215793077600975"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "northeurope",
      "metadata": {
        "description": "Specifies the location for all resources."
      }
    },
    "environment": {
      "type": "string",
      "defaultValue": "dev",
      "metadata": {
        "description": "Specifies the environment of the deployment."
      },
      "allowedValues": [
        "dev",
        "test",
        "prod"
      ]
    },
    "prefix": {
      "type": "string",
      "metadata": {
        "description": "Specifies the prefix for all resources created in this deployment."
      },
      "maxLength": 5,
      "minLength": 2
    },
    "vnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.1.0.0/16",
      "metadata": {
        "description": "Specifies the address space of the vnet of the data landing zone."
      }
    },
    "servicesSubnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.1.0.0/24",
      "metadata": {
        "description": "Specifies the address space of the subnet that is used for general services of the data landing zone."
      }
    },
    "databricksDomainPublicSubnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.1.1.0/24",
      "metadata": {
        "description": "Specifies the address space of the public subnet that is used for the shared domain databricks workspace."
      }
    },
    "databricksDomainPrivateSubnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.1.2.0/24",
      "metadata": {
        "description": "Specifies the address space of the private subnet that is used for the shared domain databricks workspace."
      }
    },
    "databricksProductPublicSubnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.1.3.0/24",
      "metadata": {
        "description": "Specifies the address space of the public subnet that is used for the shared product databricks workspace."
      }
    },
    "databricksProductPrivateSubnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.1.4.0/24",
      "metadata": {
        "description": "Specifies the address space of the private subnet that is used for the shared product databricks workspace."
      }
    },
    "powerBiGatewaySubnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.1.5.0/24",
      "metadata": {
        "description": "Specifies the address space of the subnet that is used for the power bi gateway."
      }
    },
    "dataDomain001SubnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.1.6.0/24",
      "metadata": {
        "description": "Specifies the address space of the subnet that is used for data domain 001."
      }
    },
    "dataDomain002SubnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.1.7.0/24",
      "metadata": {
        "description": "Specifies the address space of the subnet that is used for data domain 002."
      }
    },
    "dataProduct001SubnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.1.8.0/24",
      "metadata": {
        "description": "Specifies the address space of the subnet that is used for data product 001."
      }
    },
    "dataProduct002SubnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.1.9.0/24",
      "metadata": {
        "description": "Specifies the address space of the subnet that is used for data product 002."
      }
    },
    "dataManagementZoneVnetId": {
      "type": "string",
      "metadata": {
        "description": "Specifies the resource Id of the vnet in the data management zone."
      }
    },
    "firewallPrivateIp": {
      "type": "string",
      "defaultValue": "10.0.0.4",
      "metadata": {
        "description": "Specifies the private IP address of the central firewall."
      }
    },
    "dnsServerAdresses": {
      "type": "array",
      "defaultValue": [
        "10.0.0.4"
      ],
      "metadata": {
        "description": "Specifies the private IP addresses of the dns servers."
      }
    },
    "administratorPassword": {
      "type": "secureString",
      "metadata": {
        "description": "Specifies the administrator password of the sql servers."
      }
    },
    "purviewId": {
      "type": "string",
      "metadata": {
        "description": "Specifies the resource ID of the central purview instance."
      }
    },
    "purviewSelfHostedIntegrationRuntimeAuthKey": {
      "type": "secureString",
      "defaultValue": "",
      "metadata": {
        "description": "Specifies the Auth Key for the Self-hosted integration runtime of Purview."
      }
    },
    "deploySelfHostedIntegrationRuntimes": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Specifies whether the self-hosted integration runtimes should be installed. This only works, if the pwsh script was uploded and is available."
      }
    },
    "privateDnsZoneIdKeyVault": {
      "type": "string",
      "metadata": {
        "description": "Specifies the resource ID of the private DNS zone for Key Vault."
      }
    },
    "privateDnsZoneIdDataFactory": {
      "type": "string",
      "metadata": {
        "description": "Specifies the resource ID of the private DNS zone for Data Factory."
      }
    },
    "privateDnsZoneIdDataFactoryPortal": {
      "type": "string",
      "metadata": {
        "description": "Specifies the resource ID of the private DNS zone for Data Factory Portal."
      }
    },
    "privateDnsZoneIdBlob": {
      "type": "string",
      "metadata": {
        "description": "Specifies the resource ID of the private DNS zone for Blob Storage."
      }
    },
    "privateDnsZoneIdDfs": {
      "type": "string",
      "metadata": {
        "description": "Specifies the resource ID of the private DNS zone for Datalake Storage."
      }
    },
    "privateDnsZoneIdSqlServer": {
      "type": "string",
      "metadata": {
        "description": "Specifies the resource ID of the private DNS zone for Sql Server."
      }
    },
    "privateDnsZoneIdMySqlServer": {
      "type": "string",
      "metadata": {
        "description": "Specifies the resource ID of the private DNS zone for My SQL Server."
      }
    },
    "privateDnsZoneIdEventhubNamespace": {
      "type": "string",
      "metadata": {
        "description": "Specifies the resource ID of the private DNS zone for EventHub Namespaces."
      }
    },
    "privateDnsZoneIdSynapseDev": {
      "type": "string",
      "metadata": {
        "description": "Specifies the resource ID of the private DNS zone for Synapse Dev."
      }
    },
    "privateDnsZoneIdSynapseSql": {
      "type": "string",
      "metadata": {
        "description": "Specifies the resource ID of the private DNS zone for Synapse Sql."
      }
    }
  },
  "functions": [],
  "variables": {
    "name": "[toLower(format('{0}-{1}', parameters('prefix'), parameters('environment')))]",
    "tags": {
      "Owner": "Enterprise Scale Analytics",
      "Project": "Enterprise Scale Analytics",
      "Environment": "[parameters('environment')]",
      "Toolkit": "bicep",
      "Name": "[variables('name')]"
    },
    "administratorUsername": "SuperMainUser"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2021-01-01",
      "name": "[format('{0}-network', variables('name'))]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "properties": {}
    },
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2021-01-01",
      "name": "[format('{0}-mgmt', variables('name'))]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "properties": {}
    },
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2021-01-01",
      "name": "[format('{0}-logging', variables('name'))]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "properties": {}
    },
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2021-01-01",
      "name": "[format('{0}-integration', variables('name'))]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "properties": {}
    },
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2021-01-01",
      "name": "[format('{0}-storage', variables('name'))]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "properties": {}
    },
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2021-01-01",
      "name": "[format('{0}-externalstorage', variables('name'))]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "properties": {}
    },
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2021-01-01",
      "name": "[format('{0}-metadata', variables('name'))]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "properties": {}
    },
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2021-01-01",
      "name": "[format('{0}-shared-domain', variables('name'))]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "properties": {}
    },
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2021-01-01",
      "name": "[format('{0}-shared-product', variables('name'))]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "properties": {}
    },
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2021-01-01",
      "name": "[format('{0}-dd001', variables('name'))]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "properties": {}
    },
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2021-01-01",
      "name": "[format('{0}-dp001', variables('name'))]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "properties": {}
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "networkServices",
      "resourceGroup": "[format('{0}-network', variables('name'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "prefix": {
            "value": "[variables('name')]"
          },
          "tags": {
            "value": "[variables('tags')]"
          },
          "firewallPrivateIp": {
            "value": "[parameters('firewallPrivateIp')]"
          },
          "dnsServerAdresses": {
            "value": "[parameters('dnsServerAdresses')]"
          },
          "vnetAddressPrefix": {
            "value": "[parameters('vnetAddressPrefix')]"
          },
          "servicesSubnetAddressPrefix": {
            "value": "[parameters('servicesSubnetAddressPrefix')]"
          },
          "databricksDomainPublicSubnetAddressPrefix": {
            "value": "[parameters('databricksDomainPublicSubnetAddressPrefix')]"
          },
          "databricksDomainPrivateSubnetAddressPrefix": {
            "value": "[parameters('databricksDomainPrivateSubnetAddressPrefix')]"
          },
          "databricksProductPublicSubnetAddressPrefix": {
            "value": "[parameters('databricksProductPublicSubnetAddressPrefix')]"
          },
          "databricksProductPrivateSubnetAddressPrefix": {
            "value": "[parameters('databricksProductPrivateSubnetAddressPrefix')]"
          },
          "powerBiGatewaySubnetAddressPrefix": {
            "value": "[parameters('powerBiGatewaySubnetAddressPrefix')]"
          },
          "dataDomain001SubnetAddressPrefix": {
            "value": "[parameters('dataDomain001SubnetAddressPrefix')]"
          },
          "dataDomain002SubnetAddressPrefix": {
            "value": "[parameters('dataDomain002SubnetAddressPrefix')]"
          },
          "dataProduct001SubnetAddressPrefix": {
            "value": "[parameters('dataProduct001SubnetAddressPrefix')]"
          },
          "dataProduct002SubnetAddressPrefix": {
            "value": "[parameters('dataProduct002SubnetAddressPrefix')]"
          },
          "dataManagementZoneVnetId": {
            "value": "[parameters('dataManagementZoneVnetId')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1.14562",
              "templateHash": "902847927963814153"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "prefix": {
              "type": "string"
            },
            "tags": {
              "type": "object"
            },
            "firewallPrivateIp": {
              "type": "string",
              "defaultValue": "10.0.0.4"
            },
            "dnsServerAdresses": {
              "type": "array",
              "defaultValue": [
                "10.0.0.4"
              ]
            },
            "vnetAddressPrefix": {
              "type": "string",
              "defaultValue": "10.1.0.0/16"
            },
            "servicesSubnetAddressPrefix": {
              "type": "string",
              "defaultValue": "10.1.0.0/24"
            },
            "databricksDomainPublicSubnetAddressPrefix": {
              "type": "string",
              "defaultValue": "10.1.1.0/24"
            },
            "databricksDomainPrivateSubnetAddressPrefix": {
              "type": "string",
              "defaultValue": "10.1.2.0/24"
            },
            "databricksProductPublicSubnetAddressPrefix": {
              "type": "string",
              "defaultValue": "10.1.3.0/24"
            },
            "databricksProductPrivateSubnetAddressPrefix": {
              "type": "string",
              "defaultValue": "10.1.4.0/24"
            },
            "powerBiGatewaySubnetAddressPrefix": {
              "type": "string",
              "defaultValue": "10.1.5.0/24"
            },
            "dataDomain001SubnetAddressPrefix": {
              "type": "string",
              "defaultValue": "10.1.6.0/24"
            },
            "dataDomain002SubnetAddressPrefix": {
              "type": "string",
              "defaultValue": "10.1.7.0/24"
            },
            "dataProduct001SubnetAddressPrefix": {
              "type": "string",
              "defaultValue": "10.1.8.0/24"
            },
            "dataProduct002SubnetAddressPrefix": {
              "type": "string",
              "defaultValue": "10.1.9.0/24"
            },
            "dataManagementZoneVnetId": {
              "type": "string"
            }
          },
          "functions": [],
          "variables": {
            "servicesSubnetName": "ServicesSubnet",
            "databricksDomainPrivateSubnetName": "DatabricksDomainSubnetPrivate",
            "databricksDomainPublicSubnetName": "DatabricksDomainSubnetPublic",
            "databricksProductPrivateSubnetName": "DatabricksProductSubnetPrivate",
            "databricksProductPublicSubnetName": "DatabricksProductSubnetPublic",
            "powerBiGatewaySubnetName": "PowerBIGatewaySubnet",
            "dataDomain001SubnetName": "DataDomain001Subnet",
            "dataDomain002SubnetName": "DataDomain002Subnet",
            "dataProduct001SubnetName": "DataProduct001Subnet",
            "dataProduct002SubnetName": "DataProduct002Subnet",
            "dataManagementZoneVnetSubscriptionId": "[split(parameters('dataManagementZoneVnetId'), '/')[2]]",
            "dataManagementZoneVnetResourceGroupName": "[split(parameters('dataManagementZoneVnetId'), '/')[4]]",
            "dataManagementZoneVnetName": "[last(split(parameters('dataManagementZoneVnetId'), '/'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Network/routeTables",
              "apiVersion": "2020-11-01",
              "name": "[format('{0}-routetable', parameters('prefix'))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "disableBgpRoutePropagation": false,
                "routes": [
                  {
                    "name": "to-firewall-default",
                    "properties": {
                      "addressPrefix": "0.0.0.0/0",
                      "nextHopType": "VirtualAppliance",
                      "nextHopIpAddress": "[parameters('firewallPrivateIp')]"
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2020-11-01",
              "name": "[format('{0}-nsg', parameters('prefix'))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "securityRules": []
              }
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2020-11-01",
              "name": "[format('{0}-databricks-nsg', parameters('prefix'))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "securityRules": [
                  {
                    "name": "Microsoft.Databricks-workspaces_UseOnly_databricks-worker-to-worker-inbound",
                    "properties": {
                      "description": "Required for worker nodes communication within a cluster.",
                      "protocol": "*",
                      "sourcePortRange": "*",
                      "destinationPortRange": "*",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "VirtualNetwork",
                      "access": "Allow",
                      "priority": 100,
                      "direction": "Inbound",
                      "sourcePortRanges": [],
                      "destinationPortRanges": [],
                      "sourceAddressPrefixes": [],
                      "destinationAddressPrefixes": []
                    }
                  },
                  {
                    "name": "Microsoft.Databricks-workspaces_UseOnly_databricks-worker-to-worker-outbound",
                    "properties": {
                      "description": "Required for worker nodes communication within a cluster.",
                      "protocol": "*",
                      "sourcePortRange": "*",
                      "destinationPortRange": "*",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "VirtualNetwork",
                      "access": "Allow",
                      "priority": 101,
                      "direction": "Outbound",
                      "sourcePortRanges": [],
                      "destinationPortRanges": [],
                      "sourceAddressPrefixes": [],
                      "destinationAddressPrefixes": []
                    }
                  },
                  {
                    "name": "Microsoft.Databricks-workspaces_UseOnly_databricks-worker-to-sql",
                    "properties": {
                      "description": "Required for workers communication with Azure SQL services.",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "3306",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "Sql",
                      "access": "Allow",
                      "priority": 102,
                      "direction": "Outbound",
                      "sourcePortRanges": [],
                      "destinationPortRanges": [],
                      "sourceAddressPrefixes": [],
                      "destinationAddressPrefixes": []
                    }
                  },
                  {
                    "name": "Microsoft.Databricks-workspaces_UseOnly_databricks-worker-to-storage",
                    "properties": {
                      "description": "Required for workers communication with Azure Storage services.",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "443",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "Storage",
                      "access": "Allow",
                      "priority": 103,
                      "direction": "Outbound",
                      "sourcePortRanges": [],
                      "destinationPortRanges": [],
                      "sourceAddressPrefixes": [],
                      "destinationAddressPrefixes": []
                    }
                  },
                  {
                    "name": "Microsoft.Databricks-workspaces_UseOnly_databricks-worker-to-eventhub",
                    "properties": {
                      "description": "Required for worker communication with Azure Eventhub services.",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "9093",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "EventHub",
                      "access": "Allow",
                      "priority": 104,
                      "direction": "Outbound",
                      "sourcePortRanges": [],
                      "destinationPortRanges": [],
                      "sourceAddressPrefixes": [],
                      "destinationAddressPrefixes": []
                    }
                  },
                  {
                    "name": "Microsoft.Databricks-workspaces_UseOnly_databricks-worker-to-databricks-webapp",
                    "properties": {
                      "description": "Required for workers communication with Databricks Webapp.",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "443",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "AzureDatabricks",
                      "access": "Allow",
                      "priority": 100,
                      "direction": "Outbound",
                      "sourcePortRanges": [],
                      "destinationPortRanges": [],
                      "sourceAddressPrefixes": [],
                      "destinationAddressPrefixes": []
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}-vnet', parameters('prefix'))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "[parameters('vnetAddressPrefix')]"
                  ]
                },
                "dhcpOptions": {
                  "dnsServers": "[parameters('dnsServerAdresses')]"
                },
                "enableDdosProtection": false,
                "subnets": [
                  {
                    "name": "[variables('servicesSubnetName')]",
                    "properties": {
                      "addressPrefix": "[parameters('servicesSubnetAddressPrefix')]",
                      "addressPrefixes": [],
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-nsg', parameters('prefix')))]"
                      },
                      "routeTable": {
                        "id": "[resourceId('Microsoft.Network/routeTables', format('{0}-routetable', parameters('prefix')))]"
                      },
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Disabled",
                      "serviceEndpointPolicies": [],
                      "serviceEndpoints": []
                    }
                  },
                  {
                    "name": "[variables('databricksDomainPublicSubnetName')]",
                    "properties": {
                      "addressPrefix": "[parameters('databricksDomainPublicSubnetAddressPrefix')]",
                      "addressPrefixes": [],
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-databricks-nsg', parameters('prefix')))]"
                      },
                      "routeTable": {
                        "id": "[resourceId('Microsoft.Network/routeTables', format('{0}-routetable', parameters('prefix')))]"
                      },
                      "delegations": [
                        {
                          "name": "DatabricksSubnetDelegation",
                          "properties": {
                            "serviceName": "Microsoft.Databricks/workspaces"
                          }
                        }
                      ],
                      "privateEndpointNetworkPolicies": "Enabled",
                      "privateLinkServiceNetworkPolicies": "Enabled",
                      "serviceEndpointPolicies": [],
                      "serviceEndpoints": []
                    }
                  },
                  {
                    "name": "[variables('databricksDomainPrivateSubnetName')]",
                    "properties": {
                      "addressPrefix": "[parameters('databricksDomainPrivateSubnetAddressPrefix')]",
                      "addressPrefixes": [],
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-databricks-nsg', parameters('prefix')))]"
                      },
                      "routeTable": {
                        "id": "[resourceId('Microsoft.Network/routeTables', format('{0}-routetable', parameters('prefix')))]"
                      },
                      "delegations": [
                        {
                          "name": "DatabricksSubnetDelegation",
                          "properties": {
                            "serviceName": "Microsoft.Databricks/workspaces"
                          }
                        }
                      ],
                      "privateEndpointNetworkPolicies": "Enabled",
                      "privateLinkServiceNetworkPolicies": "Enabled",
                      "serviceEndpointPolicies": [],
                      "serviceEndpoints": []
                    }
                  },
                  {
                    "name": "[variables('databricksProductPublicSubnetName')]",
                    "properties": {
                      "addressPrefix": "[parameters('databricksProductPublicSubnetAddressPrefix')]",
                      "addressPrefixes": [],
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-databricks-nsg', parameters('prefix')))]"
                      },
                      "routeTable": {
                        "id": "[resourceId('Microsoft.Network/routeTables', format('{0}-routetable', parameters('prefix')))]"
                      },
                      "delegations": [
                        {
                          "name": "DatabricksSubnetDelegation",
                          "properties": {
                            "serviceName": "Microsoft.Databricks/workspaces"
                          }
                        }
                      ],
                      "privateEndpointNetworkPolicies": "Enabled",
                      "privateLinkServiceNetworkPolicies": "Enabled",
                      "serviceEndpointPolicies": [],
                      "serviceEndpoints": []
                    }
                  },
                  {
                    "name": "[variables('databricksProductPrivateSubnetName')]",
                    "properties": {
                      "addressPrefix": "[parameters('databricksProductPrivateSubnetAddressPrefix')]",
                      "addressPrefixes": [],
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-databricks-nsg', parameters('prefix')))]"
                      },
                      "routeTable": {
                        "id": "[resourceId('Microsoft.Network/routeTables', format('{0}-routetable', parameters('prefix')))]"
                      },
                      "delegations": [
                        {
                          "name": "DatabricksSubnetDelegation",
                          "properties": {
                            "serviceName": "Microsoft.Databricks/workspaces"
                          }
                        }
                      ],
                      "privateEndpointNetworkPolicies": "Enabled",
                      "privateLinkServiceNetworkPolicies": "Enabled",
                      "serviceEndpointPolicies": [],
                      "serviceEndpoints": []
                    }
                  },
                  {
                    "name": "[variables('powerBiGatewaySubnetName')]",
                    "properties": {
                      "addressPrefix": "[parameters('powerBiGatewaySubnetAddressPrefix')]",
                      "addressPrefixes": [],
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-nsg', parameters('prefix')))]"
                      },
                      "routeTable": {
                        "id": "[resourceId('Microsoft.Network/routeTables', format('{0}-routetable', parameters('prefix')))]"
                      },
                      "delegations": [
                        {
                          "name": "PowerBIGatewaySubnetDelegation",
                          "properties": {
                            "serviceName": "Microsoft.PowerPlatform/vnetaccesslinks"
                          }
                        }
                      ],
                      "privateEndpointNetworkPolicies": "Enabled",
                      "privateLinkServiceNetworkPolicies": "Enabled",
                      "serviceEndpointPolicies": [],
                      "serviceEndpoints": []
                    }
                  },
                  {
                    "name": "[variables('dataDomain001SubnetName')]",
                    "properties": {
                      "addressPrefix": "[parameters('dataDomain001SubnetAddressPrefix')]",
                      "addressPrefixes": [],
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-nsg', parameters('prefix')))]"
                      },
                      "routeTable": {
                        "id": "[resourceId('Microsoft.Network/routeTables', format('{0}-routetable', parameters('prefix')))]"
                      },
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Disabled",
                      "serviceEndpointPolicies": [],
                      "serviceEndpoints": []
                    }
                  },
                  {
                    "name": "[variables('dataDomain002SubnetName')]",
                    "properties": {
                      "addressPrefix": "[parameters('dataDomain002SubnetAddressPrefix')]",
                      "addressPrefixes": [],
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-nsg', parameters('prefix')))]"
                      },
                      "routeTable": {
                        "id": "[resourceId('Microsoft.Network/routeTables', format('{0}-routetable', parameters('prefix')))]"
                      },
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Disabled",
                      "serviceEndpointPolicies": [],
                      "serviceEndpoints": []
                    }
                  },
                  {
                    "name": "[variables('dataProduct001SubnetName')]",
                    "properties": {
                      "addressPrefix": "[parameters('dataProduct001SubnetAddressPrefix')]",
                      "addressPrefixes": [],
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-nsg', parameters('prefix')))]"
                      },
                      "routeTable": {
                        "id": "[resourceId('Microsoft.Network/routeTables', format('{0}-routetable', parameters('prefix')))]"
                      },
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Disabled",
                      "serviceEndpointPolicies": [],
                      "serviceEndpoints": []
                    }
                  },
                  {
                    "name": "[variables('dataProduct002SubnetName')]",
                    "properties": {
                      "addressPrefix": "[parameters('dataProduct002SubnetAddressPrefix')]",
                      "addressPrefixes": [],
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-nsg', parameters('prefix')))]"
                      },
                      "routeTable": {
                        "id": "[resourceId('Microsoft.Network/routeTables', format('{0}-routetable', parameters('prefix')))]"
                      },
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Disabled",
                      "serviceEndpointPolicies": [],
                      "serviceEndpoints": []
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-databricks-nsg', parameters('prefix')))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-nsg', parameters('prefix')))]",
                "[resourceId('Microsoft.Network/routeTables', format('{0}-routetable', parameters('prefix')))]"
              ]
            },
            {
              "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
              "apiVersion": "2020-11-01",
              "name": "[format('{0}/{1}', format('{0}-vnet', parameters('prefix')), variables('dataManagementZoneVnetName'))]",
              "properties": {
                "allowForwardedTraffic": true,
                "allowGatewayTransit": true,
                "allowVirtualNetworkAccess": true,
                "peeringState": "Connected",
                "remoteVirtualNetwork": {
                  "id": "[parameters('dataManagementZoneVnetId')]"
                },
                "useRemoteGateways": false
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', format('{0}-vnet', parameters('prefix')))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2019-10-01",
              "name": "dataManagementZoneDataLandingZoneVnetPeering",
              "subscriptionId": "[variables('dataManagementZoneVnetSubscriptionId')]",
              "resourceGroup": "[variables('dataManagementZoneVnetResourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "dataLandingZoneVnetId": {
                    "value": "[resourceId('Microsoft.Network/virtualNetworks', format('{0}-vnet', parameters('prefix')))]"
                  },
                  "dataManagementZoneVnetId": {
                    "value": "[parameters('dataManagementZoneVnetId')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1.14562",
                      "templateHash": "5230197201569450586"
                    }
                  },
                  "parameters": {
                    "dataManagementZoneVnetId": {
                      "type": "string"
                    },
                    "dataLandingZoneVnetId": {
                      "type": "string"
                    }
                  },
                  "functions": [],
                  "variables": {
                    "dataManagementZoneVnetName": "[last(split(parameters('dataManagementZoneVnetId'), '/'))]",
                    "dataLandingZoneVnetName": "[last(split(parameters('dataLandingZoneVnetId'), '/'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
                      "apiVersion": "2020-11-01",
                      "name": "[format('{0}/{1}', variables('dataManagementZoneVnetName'), variables('dataLandingZoneVnetName'))]",
                      "properties": {
                        "allowForwardedTraffic": true,
                        "allowGatewayTransit": true,
                        "allowVirtualNetworkAccess": true,
                        "peeringState": "Connected",
                        "remoteVirtualNetwork": {
                          "id": "[parameters('dataLandingZoneVnetId')]"
                        },
                        "useRemoteGateways": false
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', format('{0}-vnet', parameters('prefix')))]"
              ]
            }
          ],
          "outputs": {
            "vnetId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks', format('{0}-vnet', parameters('prefix')))]"
            },
            "servicesSubnetId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', format('{0}-vnet', parameters('prefix')))).subnets[0].id]"
            },
            "databricksDomainPublicSubnetName": {
              "type": "string",
              "value": "[variables('databricksDomainPublicSubnetName')]"
            },
            "databricksDomainPrivateSubnetName": {
              "type": "string",
              "value": "[variables('databricksDomainPrivateSubnetName')]"
            },
            "databricksProductPublicSubnetName": {
              "type": "string",
              "value": "[variables('databricksProductPublicSubnetName')]"
            },
            "databricksProductPrivateSubnetName": {
              "type": "string",
              "value": "[variables('databricksProductPrivateSubnetName')]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('{0}-network', variables('name')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "loggingServices",
      "resourceGroup": "[format('{0}-logging', variables('name'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "prefix": {
            "value": "[variables('name')]"
          },
          "tags": {
            "value": "[variables('tags')]"
          },
          "subnetId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-network', variables('name'))), 'Microsoft.Resources/deployments', 'networkServices'), '2019-10-01').outputs.servicesSubnetId.value]"
          },
          "privateDnsZoneIdKeyVault": {
            "value": "[parameters('privateDnsZoneIdKeyVault')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1.14562",
              "templateHash": "116193821964057760"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "prefix": {
              "type": "string"
            },
            "tags": {
              "type": "object"
            },
            "subnetId": {
              "type": "string"
            },
            "privateDnsZoneIdKeyVault": {
              "type": "string"
            }
          },
          "functions": [],
          "variables": {
            "keyVault001Name": "[format('{0}-vault003', parameters('prefix'))]",
            "logAnalytics001Name": "[format('{0}-la001', parameters('prefix'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2019-10-01",
              "name": "keyVault001",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "subnetId": {
                    "value": "[parameters('subnetId')]"
                  },
                  "keyvaultName": {
                    "value": "[variables('keyVault001Name')]"
                  },
                  "privateDnsZoneIdKeyVault": {
                    "value": "[parameters('privateDnsZoneIdKeyVault')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1.14562",
                      "templateHash": "15833037392214690975"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "object"
                    },
                    "subnetId": {
                      "type": "string"
                    },
                    "keyvaultName": {
                      "type": "string"
                    },
                    "privateDnsZoneIdKeyVault": {
                      "type": "string"
                    }
                  },
                  "functions": [],
                  "variables": {
                    "keyVaultPrivateEndpointName": "[format('{0}-private-endpoint', parameters('keyvaultName'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.KeyVault/vaults",
                      "apiVersion": "2021-04-01-preview",
                      "name": "[parameters('keyvaultName')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "accessPolicies": [],
                        "createMode": "default",
                        "enabledForDeployment": false,
                        "enabledForDiskEncryption": false,
                        "enabledForTemplateDeployment": false,
                        "enablePurgeProtection": true,
                        "enableRbacAuthorization": true,
                        "enableSoftDelete": true,
                        "networkAcls": {
                          "bypass": "AzureServices",
                          "defaultAction": "Deny",
                          "ipRules": [],
                          "virtualNetworkRules": []
                        },
                        "sku": {
                          "family": "A",
                          "name": "standard"
                        },
                        "softDeleteRetentionInDays": 7,
                        "tenantId": "[subscription().tenantId]"
                      }
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2020-11-01",
                      "name": "[variables('keyVaultPrivateEndpointName')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "manualPrivateLinkServiceConnections": [],
                        "privateLinkServiceConnections": [
                          {
                            "name": "[variables('keyVaultPrivateEndpointName')]",
                            "properties": {
                              "groupIds": [
                                "vault"
                              ],
                              "privateLinkServiceId": "[resourceId('Microsoft.KeyVault/vaults', parameters('keyvaultName'))]",
                              "requestMessage": ""
                            }
                          }
                        ],
                        "subnet": {
                          "id": "[parameters('subnetId')]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyvaultName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2020-11-01",
                      "name": "[format('{0}/{1}', variables('keyVaultPrivateEndpointName'), 'aRecord')]",
                      "properties": {
                        "privateDnsZoneConfigs": [
                          {
                            "name": "[format('{0}-arecord', variables('keyVaultPrivateEndpointName'))]",
                            "properties": {
                              "privateDnsZoneId": "[parameters('privateDnsZoneIdKeyVault')]"
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', variables('keyVaultPrivateEndpointName'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "keyvaultId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.KeyVault/vaults', parameters('keyvaultName'))]"
                    },
                    "keyVaultName": {
                      "type": "string",
                      "value": "[parameters('keyvaultName')]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2019-10-01",
              "name": "logAnalytics001",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "logAnanalyticsName": {
                    "value": "[variables('logAnalytics001Name')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1.14562",
                      "templateHash": "17013175284266139483"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "object"
                    },
                    "logAnanalyticsName": {
                      "type": "string"
                    }
                  },
                  "functions": [],
                  "resources": [
                    {
                      "type": "Microsoft.OperationalInsights/workspaces",
                      "apiVersion": "2020-10-01",
                      "name": "[parameters('logAnanalyticsName')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "features": {},
                        "publicNetworkAccessForIngestion": "Enabled",
                        "publicNetworkAccessForQuery": "Disabled",
                        "retentionInDays": 120,
                        "sku": {
                          "name": "PerGB2018"
                        }
                      }
                    }
                  ],
                  "outputs": {
                    "logAnalyticsWorkspaceId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnanalyticsName'))]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2019-10-01",
              "name": "logAnalytics001SecretDeployment",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "keyVaultId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'keyVault001'), '2019-10-01').outputs.keyvaultId.value]"
                  },
                  "logAnalyticsId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'logAnalytics001'), '2019-10-01').outputs.logAnalyticsWorkspaceId.value]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1.14562",
                      "templateHash": "5345854801863008694"
                    }
                  },
                  "parameters": {
                    "keyVaultId": {
                      "type": "string"
                    },
                    "logAnalyticsId": {
                      "type": "string"
                    }
                  },
                  "functions": [],
                  "variables": {
                    "keyVaultName": "[last(split(parameters('keyVaultId'), '/'))]",
                    "logAnalyticsSubscriptionId": "[split(parameters('logAnalyticsId'), '/')[2]]",
                    "logAnalyticsResourceGroupName": "[split(parameters('logAnalyticsId'), '/')[4]]",
                    "logAnalyticsName": "[last(split(parameters('logAnalyticsId'), '/'))]",
                    "logAnalyticsWorkspaceIdSecretName": "[format('{0}Id', variables('logAnalyticsName'))]",
                    "logAnalyticsWorkspaceKeySecretName": "[format('{0}Key', variables('logAnalyticsName'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.KeyVault/vaults/secrets",
                      "apiVersion": "2021-04-01-preview",
                      "name": "[format('{0}/{1}', variables('keyVaultName'), variables('logAnalyticsWorkspaceIdSecretName'))]",
                      "properties": {
                        "attributes": {
                          "enabled": true
                        },
                        "contentType": "text/plain",
                        "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', variables('logAnalyticsSubscriptionId'), variables('logAnalyticsResourceGroupName')), 'Microsoft.OperationalInsights/workspaces', variables('logAnalyticsName')), '2020-10-01').customerId]"
                      }
                    },
                    {
                      "type": "Microsoft.KeyVault/vaults/secrets",
                      "apiVersion": "2021-04-01-preview",
                      "name": "[format('{0}/{1}', variables('keyVaultName'), variables('logAnalyticsWorkspaceKeySecretName'))]",
                      "properties": {
                        "attributes": {
                          "enabled": true
                        },
                        "contentType": "text/plain",
                        "value": "[listkeys(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', variables('logAnalyticsSubscriptionId'), variables('logAnalyticsResourceGroupName')), 'Microsoft.OperationalInsights/workspaces', variables('logAnalyticsName')), '2020-10-01').primarySharedKey]"
                      }
                    }
                  ],
                  "outputs": {
                    "logAnalyticsWorkspaceIdSecretName": {
                      "type": "string",
                      "value": "[variables('logAnalyticsWorkspaceIdSecretName')]"
                    },
                    "logAnalyticsWorkspaceKeySecretName": {
                      "type": "string",
                      "value": "[variables('logAnalyticsWorkspaceKeySecretName')]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'keyVault001')]",
                "[resourceId('Microsoft.Resources/deployments', 'logAnalytics001')]"
              ]
            }
          ],
          "outputs": {
            "logAnalytics001WorkspaceKeyVaultId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'keyVault001'), '2019-10-01').outputs.keyvaultId.value]"
            },
            "logAnalytics001WorkspaceIdSecretName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'logAnalytics001SecretDeployment'), '2019-10-01').outputs.logAnalyticsWorkspaceIdSecretName.value]"
            },
            "logAnalytics001WorkspaceKeySecretName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'logAnalytics001SecretDeployment'), '2019-10-01').outputs.logAnalyticsWorkspaceKeySecretName.value]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('{0}-logging', variables('name')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-network', variables('name'))), 'Microsoft.Resources/deployments', 'networkServices')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "integrationServices",
      "resourceGroup": "[format('{0}-integration', variables('name'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "prefix": {
            "value": "[variables('name')]"
          },
          "tags": {
            "value": "[variables('tags')]"
          },
          "subnetId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-network', variables('name'))), 'Microsoft.Resources/deployments', 'networkServices'), '2019-10-01').outputs.servicesSubnetId.value]"
          },
          "administratorUsername": {
            "value": "[variables('administratorUsername')]"
          },
          "administratorPassword": {
            "value": "[parameters('administratorPassword')]"
          },
          "privateDnsZoneIdDataFactory": {
            "value": "[parameters('privateDnsZoneIdDataFactory')]"
          },
          "privateDnsZoneIdDataFactoryPortal": {
            "value": "[parameters('privateDnsZoneIdDataFactoryPortal')]"
          },
          "purviewId": {
            "value": "[parameters('purviewId')]"
          },
          "purviewSelfHostedIntegrationRuntimeAuthKey": {
            "value": "[parameters('purviewSelfHostedIntegrationRuntimeAuthKey')]"
          },
          "deploySelfHostedIntegrationRuntimes": {
            "value": "[parameters('deploySelfHostedIntegrationRuntimes')]"
          },
          "datafactoryIds": {
            "value": [
              "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-shared-domain', variables('name'))), 'Microsoft.Resources/deployments', 'sharedDomainServices'), '2019-10-01').outputs.datafactoryDomain001Id.value]"
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1.14562",
              "templateHash": "14245160320291665748"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "prefix": {
              "type": "string"
            },
            "tags": {
              "type": "object"
            },
            "subnetId": {
              "type": "string"
            },
            "administratorUsername": {
              "type": "string",
              "defaultValue": "VmssMainUser"
            },
            "administratorPassword": {
              "type": "secureString"
            },
            "privateDnsZoneIdDataFactory": {
              "type": "string"
            },
            "privateDnsZoneIdDataFactoryPortal": {
              "type": "string"
            },
            "purviewId": {
              "type": "string"
            },
            "purviewSelfHostedIntegrationRuntimeAuthKey": {
              "type": "string",
              "defaultValue": ""
            },
            "deploySelfHostedIntegrationRuntimes": {
              "type": "bool"
            },
            "datafactoryIds": {
              "type": "array"
            }
          },
          "functions": [],
          "variables": {
            "artifactstorage001Name": "[format('{0}-artifact001', parameters('prefix'))]",
            "datafactoryIntegration001Name": "[format('{0}-integration-datafactory001', parameters('prefix'))]",
            "shir001Name": "[format('{0}-shir001', parameters('prefix'))]"
          },
          "resources": [
            {
              "type": "Microsoft.DataFactory/factories/integrationRuntimes",
              "apiVersion": "2018-06-01",
              "name": "[format('{0}/dataLandingZoneSelfHostedIntegrationRuntime-{1}', variables('datafactoryIntegration001Name'), variables('shir001Name'))]",
              "properties": {
                "type": "SelfHosted",
                "description": "[format('Data Landing Zone - Self Hosted Integration Runtime running on {0}', variables('shir001Name'))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'datafactoryIntegration001')]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2019-10-01",
              "name": "artifactstorage001",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "artifactstorageName": {
                    "value": "[variables('artifactstorage001Name')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1.14562",
                      "templateHash": "15843624572245769268"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "object"
                    },
                    "artifactstorageName": {
                      "type": "string"
                    }
                  },
                  "functions": [],
                  "variables": {
                    "artifactstorageNameCleaned": "[replace(parameters('artifactstorageName'), '-', '')]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Storage/storageAccounts",
                      "apiVersion": "2021-02-01",
                      "name": "[variables('artifactstorageNameCleaned')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "identity": {
                        "type": "SystemAssigned"
                      },
                      "sku": {
                        "name": "Standard_LRS",
                        "tier": "Standard"
                      },
                      "kind": "StorageV2",
                      "properties": {
                        "accessTier": "Hot",
                        "allowBlobPublicAccess": false,
                        "allowSharedKeyAccess": true,
                        "encryption": {
                          "keySource": "Microsoft.Storage",
                          "requireInfrastructureEncryption": false,
                          "services": {
                            "blob": {
                              "enabled": true,
                              "keyType": "Account"
                            },
                            "file": {
                              "enabled": true,
                              "keyType": "Account"
                            },
                            "queue": {
                              "enabled": true,
                              "keyType": "Service"
                            },
                            "table": {
                              "enabled": true,
                              "keyType": "Service"
                            }
                          }
                        },
                        "isHnsEnabled": false,
                        "isNfsV3Enabled": false,
                        "largeFileSharesState": "Disabled",
                        "minimumTlsVersion": "TLS1_2",
                        "networkAcls": {
                          "bypass": "AzureServices",
                          "defaultAction": "Allow",
                          "ipRules": [],
                          "virtualNetworkRules": [],
                          "resourceAccessRules": []
                        },
                        "routingPreference": {
                          "routingChoice": "MicrosoftRouting",
                          "publishInternetEndpoints": false,
                          "publishMicrosoftEndpoints": false
                        },
                        "supportsHttpsTrafficOnly": true
                      }
                    },
                    {
                      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
                      "apiVersion": "2021-02-01",
                      "name": "[format('{0}/{1}/{2}', variables('artifactstorageNameCleaned'), 'default', 'scripts')]",
                      "properties": {
                        "publicAccess": "None",
                        "metadata": {}
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', variables('artifactstorageNameCleaned'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "storageAccountId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Storage/storageAccounts', variables('artifactstorageNameCleaned'))]"
                    },
                    "storageAccountContainerName": {
                      "type": "string",
                      "value": "scripts"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2019-10-01",
              "name": "datafactoryIntegration001",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "subnetId": {
                    "value": "[parameters('subnetId')]"
                  },
                  "datafactoryName": {
                    "value": "[variables('datafactoryIntegration001Name')]"
                  },
                  "privateDnsZoneIdDataFactory": {
                    "value": "[parameters('privateDnsZoneIdDataFactory')]"
                  },
                  "privateDnsZoneIdDataFactoryPortal": {
                    "value": "[parameters('privateDnsZoneIdDataFactoryPortal')]"
                  },
                  "purviewId": {
                    "value": "[parameters('purviewId')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1.14562",
                      "templateHash": "9270265691172426739"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "object"
                    },
                    "subnetId": {
                      "type": "string"
                    },
                    "datafactoryName": {
                      "type": "string"
                    },
                    "privateDnsZoneIdDataFactory": {
                      "type": "string"
                    },
                    "privateDnsZoneIdDataFactoryPortal": {
                      "type": "string"
                    },
                    "purviewId": {
                      "type": "string"
                    }
                  },
                  "functions": [],
                  "variables": {
                    "datafactoryDefaultManagedVnetIntegrationRuntimeName": "AutoResolveIntegrationRuntime",
                    "datafactoryPrivateEndpointNameDatafactory": "[format('{0}-datafactory-private-endpoint', parameters('datafactoryName'))]",
                    "datafactoryPrivateEndpointNamePortal": "[format('{0}-portal-private-endpoint', parameters('datafactoryName'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.DataFactory/factories",
                      "apiVersion": "2018-06-01",
                      "name": "[parameters('datafactoryName')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "identity": {
                        "type": "SystemAssigned"
                      },
                      "properties": {
                        "globalParameters": {},
                        "publicNetworkAccess": "Disabled",
                        "purviewConfiguration": {
                          "purviewResourceId": "[parameters('purviewId')]"
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2020-11-01",
                      "name": "[variables('datafactoryPrivateEndpointNameDatafactory')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "manualPrivateLinkServiceConnections": [],
                        "privateLinkServiceConnections": [
                          {
                            "name": "[variables('datafactoryPrivateEndpointNameDatafactory')]",
                            "properties": {
                              "groupIds": [
                                "dataFactory"
                              ],
                              "privateLinkServiceId": "[resourceId('Microsoft.DataFactory/factories', parameters('datafactoryName'))]",
                              "requestMessage": ""
                            }
                          }
                        ],
                        "subnet": {
                          "id": "[parameters('subnetId')]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.DataFactory/factories', parameters('datafactoryName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2020-11-01",
                      "name": "[format('{0}/{1}', variables('datafactoryPrivateEndpointNameDatafactory'), 'aRecord')]",
                      "properties": {
                        "privateDnsZoneConfigs": [
                          {
                            "name": "[format('{0}-arecord', variables('datafactoryPrivateEndpointNameDatafactory'))]",
                            "properties": {
                              "privateDnsZoneId": "[parameters('privateDnsZoneIdDataFactory')]"
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', variables('datafactoryPrivateEndpointNameDatafactory'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2020-11-01",
                      "name": "[variables('datafactoryPrivateEndpointNamePortal')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "manualPrivateLinkServiceConnections": [],
                        "privateLinkServiceConnections": [
                          {
                            "name": "[variables('datafactoryPrivateEndpointNamePortal')]",
                            "properties": {
                              "groupIds": [
                                "portal"
                              ],
                              "privateLinkServiceId": "[resourceId('Microsoft.DataFactory/factories', parameters('datafactoryName'))]",
                              "requestMessage": ""
                            }
                          }
                        ],
                        "subnet": {
                          "id": "[parameters('subnetId')]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.DataFactory/factories', parameters('datafactoryName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2020-11-01",
                      "name": "[format('{0}/{1}', variables('datafactoryPrivateEndpointNamePortal'), 'aRecord')]",
                      "properties": {
                        "privateDnsZoneConfigs": [
                          {
                            "name": "[format('{0}-arecord', variables('datafactoryPrivateEndpointNamePortal'))]",
                            "properties": {
                              "privateDnsZoneId": "[parameters('privateDnsZoneIdDataFactoryPortal')]"
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', variables('datafactoryPrivateEndpointNamePortal'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.DataFactory/factories/managedVirtualNetworks",
                      "apiVersion": "2018-06-01",
                      "name": "[format('{0}/{1}', parameters('datafactoryName'), 'default')]",
                      "properties": {},
                      "dependsOn": [
                        "[resourceId('Microsoft.DataFactory/factories', parameters('datafactoryName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.DataFactory/factories/integrationRuntimes",
                      "apiVersion": "2018-06-01",
                      "name": "[format('{0}/{1}', parameters('datafactoryName'), variables('datafactoryDefaultManagedVnetIntegrationRuntimeName'))]",
                      "properties": {
                        "type": "Managed",
                        "managedVirtualNetwork": {
                          "type": "ManagedVirtualNetworkReference",
                          "referenceName": "default"
                        },
                        "typeProperties": {
                          "computeProperties": {
                            "location": "AutoResolve"
                          }
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.DataFactory/factories', parameters('datafactoryName'))]",
                        "[resourceId('Microsoft.DataFactory/factories/managedVirtualNetworks', parameters('datafactoryName'), 'default')]"
                      ]
                    }
                  ],
                  "outputs": {
                    "datafactoryId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.DataFactory/factories', parameters('datafactoryName'))]"
                    }
                  }
                }
              }
            },
            {
              "condition": "[parameters('deploySelfHostedIntegrationRuntimes')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2019-10-01",
              "name": "datafactory001SelfHostedIntegrationRuntime001",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "subnetId": {
                    "value": "[parameters('subnetId')]"
                  },
                  "administratorUsername": {
                    "value": "[parameters('administratorUsername')]"
                  },
                  "administratorPassword": {
                    "value": "[parameters('administratorPassword')]"
                  },
                  "datafactoryIntegrationRuntimeAuthKey": {
                    "value": "[listAuthKeys(resourceId('Microsoft.DataFactory/factories/integrationRuntimes', split(format('{0}/dataLandingZoneSelfHostedIntegrationRuntime-{1}', variables('datafactoryIntegration001Name'), variables('shir001Name')), '/')[0], split(format('{0}/dataLandingZoneSelfHostedIntegrationRuntime-{1}', variables('datafactoryIntegration001Name'), variables('shir001Name')), '/')[1]), '2018-06-01').authKey1]"
                  },
                  "storageAccountContainerName": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'artifactstorage001'), '2019-10-01').outputs.storageAccountContainerName.value]"
                  },
                  "storageAccountId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'artifactstorage001'), '2019-10-01').outputs.storageAccountId.value]"
                  },
                  "vmssName": {
                    "value": "[variables('shir001Name')]"
                  },
                  "vmssSkuCapacity": {
                    "value": 1
                  },
                  "vmssSkuName": {
                    "value": "Standard_DS2_v2"
                  },
                  "vmssSkuTier": {
                    "value": "Standard"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1.14562",
                      "templateHash": "4839165092845672216"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "object"
                    },
                    "subnetId": {
                      "type": "string"
                    },
                    "vmssName": {
                      "type": "string"
                    },
                    "vmssSkuName": {
                      "type": "string",
                      "defaultValue": "Standard_DS2_v2"
                    },
                    "vmssSkuTier": {
                      "type": "string",
                      "defaultValue": "Standard"
                    },
                    "vmssSkuCapacity": {
                      "type": "int",
                      "defaultValue": 1
                    },
                    "storageAccountId": {
                      "type": "string"
                    },
                    "storageAccountContainerName": {
                      "type": "string"
                    },
                    "administratorUsername": {
                      "type": "string",
                      "defaultValue": "VmssMainUser"
                    },
                    "administratorPassword": {
                      "type": "secureString"
                    },
                    "datafactoryIntegrationRuntimeAuthKey": {
                      "type": "secureString"
                    }
                  },
                  "functions": [],
                  "variables": {
                    "storageAccountName": "[last(split(parameters('storageAccountId'), '/'))]",
                    "loadbalancerName": "[format('{0}-lb', parameters('vmssName'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/loadBalancers",
                      "apiVersion": "2020-11-01",
                      "name": "[variables('loadbalancerName')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "sku": {
                        "name": "Basic"
                      },
                      "properties": {
                        "backendAddressPools": [
                          {
                            "name": "[format('{0}-backendaddresspool', parameters('vmssName'))]"
                          }
                        ],
                        "frontendIPConfigurations": [
                          {
                            "name": "frontendipconfiguration",
                            "properties": {
                              "subnet": {
                                "id": "[parameters('subnetId')]"
                              }
                            }
                          }
                        ],
                        "inboundNatPools": [
                          {
                            "name": "[format('{0}-natpool', parameters('vmssName'))]",
                            "properties": {
                              "frontendIPConfiguration": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', variables('loadbalancerName'), 'frontendipconfiguration')]"
                              },
                              "protocol": "Tcp",
                              "frontendPortRangeStart": 50000,
                              "frontendPortRangeEnd": 50099,
                              "backendPort": 3389,
                              "idleTimeoutInMinutes": 4
                            }
                          }
                        ],
                        "loadBalancingRules": [
                          {
                            "name": "proberule",
                            "properties": {
                              "loadDistribution": "Default",
                              "backendAddressPool": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('loadbalancerName'), format('{0}-backendaddresspool', parameters('vmssName')))]"
                              },
                              "frontendIPConfiguration": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', variables('loadbalancerName'), 'frontendipconfiguration')]"
                              },
                              "probe": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/probes', variables('loadbalancerName'), format('{0}-probe', parameters('vmssName')))]"
                              },
                              "protocol": "Tcp",
                              "frontendPort": 80,
                              "backendPort": 80,
                              "enableFloatingIP": false,
                              "idleTimeoutInMinutes": 5
                            }
                          }
                        ],
                        "probes": [
                          {
                            "name": "[format('{0}-probe', parameters('vmssName'))]",
                            "properties": {
                              "protocol": "Http",
                              "port": 80,
                              "requestPath": "/",
                              "intervalInSeconds": 5,
                              "numberOfProbes": 2
                            }
                          }
                        ]
                      }
                    },
                    {
                      "type": "Microsoft.Compute/virtualMachineScaleSets",
                      "apiVersion": "2020-12-01",
                      "name": "[parameters('vmssName')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "identity": {
                        "type": "SystemAssigned"
                      },
                      "sku": {
                        "name": "[parameters('vmssSkuName')]",
                        "tier": "[parameters('vmssSkuTier')]",
                        "capacity": "[parameters('vmssSkuCapacity')]"
                      },
                      "properties": {
                        "additionalCapabilities": {},
                        "automaticRepairsPolicy": {},
                        "doNotRunExtensionsOnOverprovisionedVMs": true,
                        "overprovision": true,
                        "platformFaultDomainCount": 1,
                        "scaleInPolicy": {
                          "rules": [
                            "Default"
                          ]
                        },
                        "singlePlacementGroup": true,
                        "upgradePolicy": {
                          "mode": "Automatic"
                        },
                        "virtualMachineProfile": {
                          "priority": "Regular",
                          "osProfile": {
                            "adminUsername": "[parameters('administratorUsername')]",
                            "adminPassword": "[parameters('administratorPassword')]",
                            "computerNamePrefix": "[take(parameters('vmssName'), 9)]"
                          },
                          "networkProfile": {
                            "networkInterfaceConfigurations": [
                              {
                                "name": "[format('{0}-nic', parameters('vmssName'))]",
                                "properties": {
                                  "primary": true,
                                  "dnsSettings": {},
                                  "enableAcceleratedNetworking": false,
                                  "enableFpga": false,
                                  "enableIPForwarding": false,
                                  "ipConfigurations": [
                                    {
                                      "name": "[format('{0}-ipconfig', parameters('vmssName'))]",
                                      "properties": {
                                        "loadBalancerBackendAddressPools": [
                                          {
                                            "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('loadbalancerName'), format('{0}-backendaddresspool', parameters('vmssName')))]"
                                          }
                                        ],
                                        "loadBalancerInboundNatPools": [
                                          {
                                            "id": "[resourceId('Microsoft.Network/loadBalancers/inboundNatPools', variables('loadbalancerName'), format('{0}-natpool', parameters('vmssName')))]"
                                          }
                                        ],
                                        "primary": true,
                                        "privateIPAddressVersion": "IPv4",
                                        "subnet": {
                                          "id": "[parameters('subnetId')]"
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          "storageProfile": {
                            "imageReference": {
                              "offer": "WindowsServer",
                              "publisher": "MicrosoftWindowsServer",
                              "sku": "2019-Datacenter",
                              "version": "latest"
                            },
                            "osDisk": {
                              "caching": "ReadWrite",
                              "createOption": "FromImage"
                            }
                          },
                          "extensionProfile": {
                            "extensions": [
                              {
                                "name": "[format('{0}-integrationruntime-shir', parameters('vmssName'))]",
                                "properties": {
                                  "publisher": "Microsoft.Compute",
                                  "type": "CustomScriptExtension",
                                  "typeHandlerVersion": "1.10",
                                  "autoUpgradeMinorVersion": true,
                                  "settings": {
                                    "fileUris": [
                                      "[format('https://{0}.blob.{1}/{2}/installSHIRGateway.ps1', variables('storageAccountName'), environment().suffixes.storage, parameters('storageAccountContainerName'))]"
                                    ]
                                  },
                                  "protectedSettings": {
                                    "commandToExecute": "[format('powershell.exe -ExecutionPolicy Unrestricted -File installSHIRGateway.ps1 -gatewayKey {0}', parameters('datafactoryIntegrationRuntimeAuthKey'))]",
                                    "storageAccountName": "[variables('storageAccountName')]",
                                    "storageAccountKey": "[listkeys(parameters('storageAccountId'), '2021-02-01').keys[0].value]"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'artifactstorage001')]",
                "[resourceId('Microsoft.DataFactory/factories/integrationRuntimes', split(format('{0}/dataLandingZoneSelfHostedIntegrationRuntime-{1}', variables('datafactoryIntegration001Name'), variables('shir001Name')), '/')[0], split(format('{0}/dataLandingZoneSelfHostedIntegrationRuntime-{1}', variables('datafactoryIntegration001Name'), variables('shir001Name')), '/')[1])]"
              ]
            },
            {
              "condition": "[parameters('deploySelfHostedIntegrationRuntimes')]",
              "copy": {
                "name": "shareDatafactoryIntegration001IntegrationRuntime001",
                "count": "[length(parameters('datafactoryIds'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2019-10-01",
              "name": "[format('shareDatafactoryIntegration001IntegrationRuntime001-{0}', copyIndex())]",
              "subscriptionId": "[split(parameters('datafactoryIds')[copyIndex()], '/')[2]]",
              "resourceGroup": "[split(parameters('datafactoryIds')[copyIndex()], '/')[4]]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "datafactorySourceId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'datafactoryIntegration001'), '2019-10-01').outputs.datafactoryId.value]"
                  },
                  "datafactorySourceShirId": {
                    "value": "[resourceId('Microsoft.DataFactory/factories/integrationRuntimes', split(format('{0}/dataLandingZoneSelfHostedIntegrationRuntime-{1}', variables('datafactoryIntegration001Name'), variables('shir001Name')), '/')[0], split(format('{0}/dataLandingZoneSelfHostedIntegrationRuntime-{1}', variables('datafactoryIntegration001Name'), variables('shir001Name')), '/')[1])]"
                  },
                  "datafactoryDestinationId": {
                    "value": "[parameters('datafactoryIds')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1.14562",
                      "templateHash": "10374901792138276939"
                    }
                  },
                  "parameters": {
                    "datafactorySourceId": {
                      "type": "string"
                    },
                    "datafactorySourceShirId": {
                      "type": "string"
                    },
                    "datafactoryDestinationId": {
                      "type": "string"
                    }
                  },
                  "functions": [],
                  "variables": {
                    "datafactorySourceSubscriptionId": "[split(parameters('datafactorySourceId'), '/')[2]]",
                    "datafactorySourceResourceGroup": "[split(parameters('datafactorySourceId'), '/')[4]]",
                    "datafactorySourceShirName": "[last(split(parameters('datafactorySourceShirId'), '/'))]",
                    "datafactoryDestinationName": "[last(split(parameters('datafactoryDestinationId'), '/'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.DataFactory/factories/integrationRuntimes",
                      "apiVersion": "2018-06-01",
                      "name": "[format('{0}/{1}', variables('datafactoryDestinationName'), variables('datafactorySourceShirName'))]",
                      "properties": {
                        "type": "SelfHosted",
                        "description": "Data Landing Zone - Self-hosted Integration Runtime",
                        "typeProperties": {
                          "linkedInfo": {
                            "authorizationType": "RBAC",
                            "resourceId": "[parameters('datafactorySourceShirId')]"
                          }
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', variables('datafactorySourceSubscriptionId'), variables('datafactorySourceResourceGroup')), 'Microsoft.Resources/deployments', 'datafactoryDestinationRoleAssignment')]"
                      ]
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2019-10-01",
                      "name": "datafactoryDestinationRoleAssignment",
                      "subscriptionId": "[variables('datafactorySourceSubscriptionId')]",
                      "resourceGroup": "[variables('datafactorySourceResourceGroup')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "datafactorySourceId": {
                            "value": "[parameters('datafactorySourceId')]"
                          },
                          "datafactoryDestinationId": {
                            "value": "[parameters('datafactoryDestinationId')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1.14562",
                              "templateHash": "9193582345089322679"
                            }
                          },
                          "parameters": {
                            "datafactorySourceId": {
                              "type": "string"
                            },
                            "datafactoryDestinationId": {
                              "type": "string"
                            }
                          },
                          "functions": [],
                          "variables": {
                            "datafactorySourceName": "[last(split(parameters('datafactorySourceId'), '/'))]",
                            "datafactoryDestinationSubscriptionId": "[split(parameters('datafactoryDestinationId'), '/')[2]]",
                            "datafactoryDestinationResourceGroup": "[split(parameters('datafactoryDestinationId'), '/')[4]]",
                            "datafactoryDestinationName": "[last(split(parameters('datafactoryDestinationId'), '/'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2020-04-01-preview",
                              "scope": "[format('Microsoft.DataFactory/factories/{0}', variables('datafactorySourceName'))]",
                              "name": "[guid(uniqueString(resourceId('Microsoft.DataFactory/factories', variables('datafactorySourceName')), extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', variables('datafactoryDestinationSubscriptionId'), variables('datafactoryDestinationResourceGroup')), 'Microsoft.DataFactory/factories', variables('datafactoryDestinationName'))))]",
                              "properties": {
                                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
                                "principalId": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', variables('datafactoryDestinationSubscriptionId'), variables('datafactoryDestinationResourceGroup')), 'Microsoft.DataFactory/factories', variables('datafactoryDestinationName')), '2018-06-01', 'full').identity.principalId]",
                                "principalType": "ServicePrincipal"
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "copy": {
                        "name": "deploymentDelay",
                        "count": "[length(range(0, 5))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2019-10-01",
                      "name": "[format('delay-{0}', range(0, 5)[copyIndex()])]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "deploymentDelayIndex": {
                            "value": "[range(0, 5)[copyIndex()]]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1.14562",
                              "templateHash": "17161936924798786026"
                            }
                          },
                          "parameters": {
                            "deploymentDelayIndex": {
                              "type": "int"
                            }
                          },
                          "functions": [],
                          "resources": [],
                          "outputs": {
                            "deploymentDelayIndex": {
                              "type": "int",
                              "value": "[parameters('deploymentDelayIndex')]"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'datafactoryIntegration001')]",
                "[resourceId('Microsoft.DataFactory/factories/integrationRuntimes', split(format('{0}/dataLandingZoneSelfHostedIntegrationRuntime-{1}', variables('datafactoryIntegration001Name'), variables('shir001Name')), '/')[0], split(format('{0}/dataLandingZoneSelfHostedIntegrationRuntime-{1}', variables('datafactoryIntegration001Name'), variables('shir001Name')), '/')[1])]"
              ]
            },
            {
              "condition": "[and(parameters('deploySelfHostedIntegrationRuntimes'), not(equals(parameters('purviewSelfHostedIntegrationRuntimeAuthKey'), '')))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2019-10-01",
              "name": "purviewSelfHostedIntegrationRuntime001",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "subnetId": {
                    "value": "[parameters('subnetId')]"
                  },
                  "administratorUsername": {
                    "value": "[parameters('administratorUsername')]"
                  },
                  "administratorPassword": {
                    "value": "[parameters('administratorPassword')]"
                  },
                  "datafactoryIntegrationRuntimeAuthKey": {
                    "value": "[parameters('purviewSelfHostedIntegrationRuntimeAuthKey')]"
                  },
                  "storageAccountContainerName": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'artifactstorage001'), '2019-10-01').outputs.storageAccountContainerName.value]"
                  },
                  "storageAccountId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'artifactstorage001'), '2019-10-01').outputs.storageAccountId.value]"
                  },
                  "vmssName": {
                    "value": "[variables('shir001Name')]"
                  },
                  "vmssSkuCapacity": {
                    "value": 1
                  },
                  "vmssSkuName": {
                    "value": "Standard_DS2_v2"
                  },
                  "vmssSkuTier": {
                    "value": "Standard"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1.14562",
                      "templateHash": "4839165092845672216"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "object"
                    },
                    "subnetId": {
                      "type": "string"
                    },
                    "vmssName": {
                      "type": "string"
                    },
                    "vmssSkuName": {
                      "type": "string",
                      "defaultValue": "Standard_DS2_v2"
                    },
                    "vmssSkuTier": {
                      "type": "string",
                      "defaultValue": "Standard"
                    },
                    "vmssSkuCapacity": {
                      "type": "int",
                      "defaultValue": 1
                    },
                    "storageAccountId": {
                      "type": "string"
                    },
                    "storageAccountContainerName": {
                      "type": "string"
                    },
                    "administratorUsername": {
                      "type": "string",
                      "defaultValue": "VmssMainUser"
                    },
                    "administratorPassword": {
                      "type": "secureString"
                    },
                    "datafactoryIntegrationRuntimeAuthKey": {
                      "type": "secureString"
                    }
                  },
                  "functions": [],
                  "variables": {
                    "storageAccountName": "[last(split(parameters('storageAccountId'), '/'))]",
                    "loadbalancerName": "[format('{0}-lb', parameters('vmssName'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/loadBalancers",
                      "apiVersion": "2020-11-01",
                      "name": "[variables('loadbalancerName')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "sku": {
                        "name": "Basic"
                      },
                      "properties": {
                        "backendAddressPools": [
                          {
                            "name": "[format('{0}-backendaddresspool', parameters('vmssName'))]"
                          }
                        ],
                        "frontendIPConfigurations": [
                          {
                            "name": "frontendipconfiguration",
                            "properties": {
                              "subnet": {
                                "id": "[parameters('subnetId')]"
                              }
                            }
                          }
                        ],
                        "inboundNatPools": [
                          {
                            "name": "[format('{0}-natpool', parameters('vmssName'))]",
                            "properties": {
                              "frontendIPConfiguration": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', variables('loadbalancerName'), 'frontendipconfiguration')]"
                              },
                              "protocol": "Tcp",
                              "frontendPortRangeStart": 50000,
                              "frontendPortRangeEnd": 50099,
                              "backendPort": 3389,
                              "idleTimeoutInMinutes": 4
                            }
                          }
                        ],
                        "loadBalancingRules": [
                          {
                            "name": "proberule",
                            "properties": {
                              "loadDistribution": "Default",
                              "backendAddressPool": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('loadbalancerName'), format('{0}-backendaddresspool', parameters('vmssName')))]"
                              },
                              "frontendIPConfiguration": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', variables('loadbalancerName'), 'frontendipconfiguration')]"
                              },
                              "probe": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/probes', variables('loadbalancerName'), format('{0}-probe', parameters('vmssName')))]"
                              },
                              "protocol": "Tcp",
                              "frontendPort": 80,
                              "backendPort": 80,
                              "enableFloatingIP": false,
                              "idleTimeoutInMinutes": 5
                            }
                          }
                        ],
                        "probes": [
                          {
                            "name": "[format('{0}-probe', parameters('vmssName'))]",
                            "properties": {
                              "protocol": "Http",
                              "port": 80,
                              "requestPath": "/",
                              "intervalInSeconds": 5,
                              "numberOfProbes": 2
                            }
                          }
                        ]
                      }
                    },
                    {
                      "type": "Microsoft.Compute/virtualMachineScaleSets",
                      "apiVersion": "2020-12-01",
                      "name": "[parameters('vmssName')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "identity": {
                        "type": "SystemAssigned"
                      },
                      "sku": {
                        "name": "[parameters('vmssSkuName')]",
                        "tier": "[parameters('vmssSkuTier')]",
                        "capacity": "[parameters('vmssSkuCapacity')]"
                      },
                      "properties": {
                        "additionalCapabilities": {},
                        "automaticRepairsPolicy": {},
                        "doNotRunExtensionsOnOverprovisionedVMs": true,
                        "overprovision": true,
                        "platformFaultDomainCount": 1,
                        "scaleInPolicy": {
                          "rules": [
                            "Default"
                          ]
                        },
                        "singlePlacementGroup": true,
                        "upgradePolicy": {
                          "mode": "Automatic"
                        },
                        "virtualMachineProfile": {
                          "priority": "Regular",
                          "osProfile": {
                            "adminUsername": "[parameters('administratorUsername')]",
                            "adminPassword": "[parameters('administratorPassword')]",
                            "computerNamePrefix": "[take(parameters('vmssName'), 9)]"
                          },
                          "networkProfile": {
                            "networkInterfaceConfigurations": [
                              {
                                "name": "[format('{0}-nic', parameters('vmssName'))]",
                                "properties": {
                                  "primary": true,
                                  "dnsSettings": {},
                                  "enableAcceleratedNetworking": false,
                                  "enableFpga": false,
                                  "enableIPForwarding": false,
                                  "ipConfigurations": [
                                    {
                                      "name": "[format('{0}-ipconfig', parameters('vmssName'))]",
                                      "properties": {
                                        "loadBalancerBackendAddressPools": [
                                          {
                                            "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('loadbalancerName'), format('{0}-backendaddresspool', parameters('vmssName')))]"
                                          }
                                        ],
                                        "loadBalancerInboundNatPools": [
                                          {
                                            "id": "[resourceId('Microsoft.Network/loadBalancers/inboundNatPools', variables('loadbalancerName'), format('{0}-natpool', parameters('vmssName')))]"
                                          }
                                        ],
                                        "primary": true,
                                        "privateIPAddressVersion": "IPv4",
                                        "subnet": {
                                          "id": "[parameters('subnetId')]"
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          "storageProfile": {
                            "imageReference": {
                              "offer": "WindowsServer",
                              "publisher": "MicrosoftWindowsServer",
                              "sku": "2019-Datacenter",
                              "version": "latest"
                            },
                            "osDisk": {
                              "caching": "ReadWrite",
                              "createOption": "FromImage"
                            }
                          },
                          "extensionProfile": {
                            "extensions": [
                              {
                                "name": "[format('{0}-integrationruntime-shir', parameters('vmssName'))]",
                                "properties": {
                                  "publisher": "Microsoft.Compute",
                                  "type": "CustomScriptExtension",
                                  "typeHandlerVersion": "1.10",
                                  "autoUpgradeMinorVersion": true,
                                  "settings": {
                                    "fileUris": [
                                      "[format('https://{0}.blob.{1}/{2}/installSHIRGateway.ps1', variables('storageAccountName'), environment().suffixes.storage, parameters('storageAccountContainerName'))]"
                                    ]
                                  },
                                  "protectedSettings": {
                                    "commandToExecute": "[format('powershell.exe -ExecutionPolicy Unrestricted -File installSHIRGateway.ps1 -gatewayKey {0}', parameters('datafactoryIntegrationRuntimeAuthKey'))]",
                                    "storageAccountName": "[variables('storageAccountName')]",
                                    "storageAccountKey": "[listkeys(parameters('storageAccountId'), '2021-02-01').keys[0].value]"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'artifactstorage001')]"
              ]
            }
          ],
          "outputs": {
            "artifactstorage001Id": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'artifactstorage001'), '2019-10-01').outputs.storageAccountId.value]"
            },
            "artifactstorage001ContainerName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'artifactstorage001'), '2019-10-01').outputs.storageAccountContainerName.value]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('{0}-integration', variables('name')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-network', variables('name'))), 'Microsoft.Resources/deployments', 'networkServices')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-shared-domain', variables('name'))), 'Microsoft.Resources/deployments', 'sharedDomainServices')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "storageServices",
      "resourceGroup": "[format('{0}-storage', variables('name'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "prefix": {
            "value": "[variables('name')]"
          },
          "tags": {
            "value": "[variables('tags')]"
          },
          "subnetId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-network', variables('name'))), 'Microsoft.Resources/deployments', 'networkServices'), '2019-10-01').outputs.servicesSubnetId.value]"
          },
          "privateDnsZoneIdBlob": {
            "value": "[parameters('privateDnsZoneIdBlob')]"
          },
          "privateDnsZoneIdDfs": {
            "value": "[parameters('privateDnsZoneIdDfs')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1.14562",
              "templateHash": "6636989078691364758"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "prefix": {
              "type": "string"
            },
            "tags": {
              "type": "object"
            },
            "subnetId": {
              "type": "string"
            },
            "privateDnsZoneIdDfs": {
              "type": "string"
            },
            "privateDnsZoneIdBlob": {
              "type": "string"
            }
          },
          "functions": [],
          "variables": {
            "domainFileSytemNames": [
              "data",
              "dd001",
              "dd002"
            ],
            "dataProductFileSystemNames": [
              "data",
              "dp001",
              "dp002"
            ]
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2019-10-01",
              "name": "storageRaw",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "subnetId": {
                    "value": "[parameters('subnetId')]"
                  },
                  "storageName": {
                    "value": "[format('{0}-raw', parameters('prefix'))]"
                  },
                  "privateDnsZoneIdBlob": {
                    "value": "[parameters('privateDnsZoneIdBlob')]"
                  },
                  "privateDnsZoneIdDfs": {
                    "value": "[parameters('privateDnsZoneIdDfs')]"
                  },
                  "fileSystemNames": {
                    "value": "[variables('domainFileSytemNames')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1.14562",
                      "templateHash": "10579517856211424030"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "object"
                    },
                    "subnetId": {
                      "type": "string"
                    },
                    "storageName": {
                      "type": "string"
                    },
                    "privateDnsZoneIdDfs": {
                      "type": "string"
                    },
                    "privateDnsZoneIdBlob": {
                      "type": "string"
                    },
                    "fileSystemNames": {
                      "type": "array"
                    }
                  },
                  "functions": [],
                  "variables": {
                    "storageNameCleaned": "[replace(parameters('storageName'), '-', '')]",
                    "storagePrivateEndpointNameBlob": "[format('{0}-blob-private-endpoint', variables('storageNameCleaned'))]",
                    "storagePrivateEndpointNameDfs": "[format('{0}-dfs-private-endpoint', variables('storageNameCleaned'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Storage/storageAccounts",
                      "apiVersion": "2021-02-01",
                      "name": "[variables('storageNameCleaned')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "identity": {
                        "type": "SystemAssigned"
                      },
                      "sku": {
                        "name": "Standard_ZRS",
                        "tier": "Standard"
                      },
                      "kind": "StorageV2",
                      "properties": {
                        "accessTier": "Hot",
                        "allowBlobPublicAccess": false,
                        "allowSharedKeyAccess": false,
                        "encryption": {
                          "keySource": "Microsoft.Storage",
                          "requireInfrastructureEncryption": false,
                          "services": {
                            "blob": {
                              "enabled": true,
                              "keyType": "Account"
                            },
                            "file": {
                              "enabled": true,
                              "keyType": "Account"
                            },
                            "queue": {
                              "enabled": true,
                              "keyType": "Service"
                            },
                            "table": {
                              "enabled": true,
                              "keyType": "Service"
                            }
                          }
                        },
                        "isHnsEnabled": true,
                        "isNfsV3Enabled": false,
                        "largeFileSharesState": "Disabled",
                        "minimumTlsVersion": "TLS1_2",
                        "networkAcls": {
                          "bypass": "Metrics",
                          "defaultAction": "Deny",
                          "ipRules": [],
                          "virtualNetworkRules": [],
                          "resourceAccessRules": []
                        },
                        "supportsHttpsTrafficOnly": true
                      }
                    },
                    {
                      "type": "Microsoft.Storage/storageAccounts/managementPolicies",
                      "apiVersion": "2021-02-01",
                      "name": "[format('{0}/default', variables('storageNameCleaned'))]",
                      "properties": {
                        "policy": {
                          "rules": [
                            {
                              "enabled": true,
                              "name": "default",
                              "type": "Lifecycle",
                              "definition": {
                                "actions": {
                                  "baseBlob": {
                                    "tierToCool": {
                                      "daysAfterModificationGreaterThan": 90
                                    }
                                  },
                                  "snapshot": {
                                    "tierToCool": {
                                      "daysAfterCreationGreaterThan": 90
                                    }
                                  },
                                  "version": {
                                    "tierToCool": {
                                      "daysAfterCreationGreaterThan": 90
                                    }
                                  }
                                },
                                "filters": {
                                  "blobTypes": [
                                    "blockBlob"
                                  ],
                                  "prefixMatch": []
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageNameCleaned'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Storage/storageAccounts/blobServices",
                      "apiVersion": "2021-02-01",
                      "name": "[format('{0}/default', variables('storageNameCleaned'))]",
                      "properties": {
                        "containerDeleteRetentionPolicy": {
                          "enabled": true,
                          "days": 7
                        },
                        "cors": {
                          "corsRules": []
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageNameCleaned'))]"
                      ]
                    },
                    {
                      "copy": {
                        "name": "storageFileSystems",
                        "count": "[length(parameters('fileSystemNames'))]"
                      },
                      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
                      "apiVersion": "2021-02-01",
                      "name": "[format('{0}/default/{1}', variables('storageNameCleaned'), parameters('fileSystemNames')[copyIndex()])]",
                      "properties": {
                        "publicAccess": "None",
                        "metadata": {}
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageNameCleaned'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2020-11-01",
                      "name": "[variables('storagePrivateEndpointNameBlob')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "manualPrivateLinkServiceConnections": [],
                        "privateLinkServiceConnections": [
                          {
                            "name": "[variables('storagePrivateEndpointNameBlob')]",
                            "properties": {
                              "groupIds": [
                                "blob"
                              ],
                              "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageNameCleaned'))]",
                              "requestMessage": ""
                            }
                          }
                        ],
                        "subnet": {
                          "id": "[parameters('subnetId')]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageNameCleaned'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2020-11-01",
                      "name": "[format('{0}/aRecord', variables('storagePrivateEndpointNameBlob'))]",
                      "properties": {
                        "privateDnsZoneConfigs": [
                          {
                            "name": "[format('{0}-arecord', variables('storagePrivateEndpointNameBlob'))]",
                            "properties": {
                              "privateDnsZoneId": "[parameters('privateDnsZoneIdBlob')]"
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', variables('storagePrivateEndpointNameBlob'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2020-11-01",
                      "name": "[variables('storagePrivateEndpointNameDfs')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "manualPrivateLinkServiceConnections": [],
                        "privateLinkServiceConnections": [
                          {
                            "name": "[variables('storagePrivateEndpointNameDfs')]",
                            "properties": {
                              "groupIds": [
                                "dfs"
                              ],
                              "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageNameCleaned'))]",
                              "requestMessage": ""
                            }
                          }
                        ],
                        "subnet": {
                          "id": "[parameters('subnetId')]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageNameCleaned'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2020-11-01",
                      "name": "[format('{0}/aRecord', variables('storagePrivateEndpointNameDfs'))]",
                      "properties": {
                        "privateDnsZoneConfigs": [
                          {
                            "name": "[format('{0}-arecord', variables('storagePrivateEndpointNameDfs'))]",
                            "properties": {
                              "privateDnsZoneId": "[parameters('privateDnsZoneIdDfs')]"
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', variables('storagePrivateEndpointNameDfs'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "storageId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageNameCleaned'))]"
                    },
                    "storageFileSystemIds": {
                      "type": "array",
                      "copy": {
                        "count": "[length(parameters('fileSystemNames'))]",
                        "input": {
                          "storageFileSystemId": "[resourceId('Microsoft.Storage/storageAccounts/blobServices/containers', variables('storageNameCleaned'), 'default', parameters('fileSystemNames')[copyIndex()])]"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2019-10-01",
              "name": "storageEnrichedCurated",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "subnetId": {
                    "value": "[parameters('subnetId')]"
                  },
                  "storageName": {
                    "value": "[format('{0}-encur', parameters('prefix'))]"
                  },
                  "privateDnsZoneIdBlob": {
                    "value": "[parameters('privateDnsZoneIdBlob')]"
                  },
                  "privateDnsZoneIdDfs": {
                    "value": "[parameters('privateDnsZoneIdDfs')]"
                  },
                  "fileSystemNames": {
                    "value": "[variables('domainFileSytemNames')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1.14562",
                      "templateHash": "10579517856211424030"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "object"
                    },
                    "subnetId": {
                      "type": "string"
                    },
                    "storageName": {
                      "type": "string"
                    },
                    "privateDnsZoneIdDfs": {
                      "type": "string"
                    },
                    "privateDnsZoneIdBlob": {
                      "type": "string"
                    },
                    "fileSystemNames": {
                      "type": "array"
                    }
                  },
                  "functions": [],
                  "variables": {
                    "storageNameCleaned": "[replace(parameters('storageName'), '-', '')]",
                    "storagePrivateEndpointNameBlob": "[format('{0}-blob-private-endpoint', variables('storageNameCleaned'))]",
                    "storagePrivateEndpointNameDfs": "[format('{0}-dfs-private-endpoint', variables('storageNameCleaned'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Storage/storageAccounts",
                      "apiVersion": "2021-02-01",
                      "name": "[variables('storageNameCleaned')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "identity": {
                        "type": "SystemAssigned"
                      },
                      "sku": {
                        "name": "Standard_ZRS",
                        "tier": "Standard"
                      },
                      "kind": "StorageV2",
                      "properties": {
                        "accessTier": "Hot",
                        "allowBlobPublicAccess": false,
                        "allowSharedKeyAccess": false,
                        "encryption": {
                          "keySource": "Microsoft.Storage",
                          "requireInfrastructureEncryption": false,
                          "services": {
                            "blob": {
                              "enabled": true,
                              "keyType": "Account"
                            },
                            "file": {
                              "enabled": true,
                              "keyType": "Account"
                            },
                            "queue": {
                              "enabled": true,
                              "keyType": "Service"
                            },
                            "table": {
                              "enabled": true,
                              "keyType": "Service"
                            }
                          }
                        },
                        "isHnsEnabled": true,
                        "isNfsV3Enabled": false,
                        "largeFileSharesState": "Disabled",
                        "minimumTlsVersion": "TLS1_2",
                        "networkAcls": {
                          "bypass": "Metrics",
                          "defaultAction": "Deny",
                          "ipRules": [],
                          "virtualNetworkRules": [],
                          "resourceAccessRules": []
                        },
                        "supportsHttpsTrafficOnly": true
                      }
                    },
                    {
                      "type": "Microsoft.Storage/storageAccounts/managementPolicies",
                      "apiVersion": "2021-02-01",
                      "name": "[format('{0}/default', variables('storageNameCleaned'))]",
                      "properties": {
                        "policy": {
                          "rules": [
                            {
                              "enabled": true,
                              "name": "default",
                              "type": "Lifecycle",
                              "definition": {
                                "actions": {
                                  "baseBlob": {
                                    "tierToCool": {
                                      "daysAfterModificationGreaterThan": 90
                                    }
                                  },
                                  "snapshot": {
                                    "tierToCool": {
                                      "daysAfterCreationGreaterThan": 90
                                    }
                                  },
                                  "version": {
                                    "tierToCool": {
                                      "daysAfterCreationGreaterThan": 90
                                    }
                                  }
                                },
                                "filters": {
                                  "blobTypes": [
                                    "blockBlob"
                                  ],
                                  "prefixMatch": []
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageNameCleaned'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Storage/storageAccounts/blobServices",
                      "apiVersion": "2021-02-01",
                      "name": "[format('{0}/default', variables('storageNameCleaned'))]",
                      "properties": {
                        "containerDeleteRetentionPolicy": {
                          "enabled": true,
                          "days": 7
                        },
                        "cors": {
                          "corsRules": []
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageNameCleaned'))]"
                      ]
                    },
                    {
                      "copy": {
                        "name": "storageFileSystems",
                        "count": "[length(parameters('fileSystemNames'))]"
                      },
                      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
                      "apiVersion": "2021-02-01",
                      "name": "[format('{0}/default/{1}', variables('storageNameCleaned'), parameters('fileSystemNames')[copyIndex()])]",
                      "properties": {
                        "publicAccess": "None",
                        "metadata": {}
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageNameCleaned'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2020-11-01",
                      "name": "[variables('storagePrivateEndpointNameBlob')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "manualPrivateLinkServiceConnections": [],
                        "privateLinkServiceConnections": [
                          {
                            "name": "[variables('storagePrivateEndpointNameBlob')]",
                            "properties": {
                              "groupIds": [
                                "blob"
                              ],
                              "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageNameCleaned'))]",
                              "requestMessage": ""
                            }
                          }
                        ],
                        "subnet": {
                          "id": "[parameters('subnetId')]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageNameCleaned'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2020-11-01",
                      "name": "[format('{0}/aRecord', variables('storagePrivateEndpointNameBlob'))]",
                      "properties": {
                        "privateDnsZoneConfigs": [
                          {
                            "name": "[format('{0}-arecord', variables('storagePrivateEndpointNameBlob'))]",
                            "properties": {
                              "privateDnsZoneId": "[parameters('privateDnsZoneIdBlob')]"
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', variables('storagePrivateEndpointNameBlob'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2020-11-01",
                      "name": "[variables('storagePrivateEndpointNameDfs')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "manualPrivateLinkServiceConnections": [],
                        "privateLinkServiceConnections": [
                          {
                            "name": "[variables('storagePrivateEndpointNameDfs')]",
                            "properties": {
                              "groupIds": [
                                "dfs"
                              ],
                              "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageNameCleaned'))]",
                              "requestMessage": ""
                            }
                          }
                        ],
                        "subnet": {
                          "id": "[parameters('subnetId')]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageNameCleaned'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2020-11-01",
                      "name": "[format('{0}/aRecord', variables('storagePrivateEndpointNameDfs'))]",
                      "properties": {
                        "privateDnsZoneConfigs": [
                          {
                            "name": "[format('{0}-arecord', variables('storagePrivateEndpointNameDfs'))]",
                            "properties": {
                              "privateDnsZoneId": "[parameters('privateDnsZoneIdDfs')]"
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', variables('storagePrivateEndpointNameDfs'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "storageId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageNameCleaned'))]"
                    },
                    "storageFileSystemIds": {
                      "type": "array",
                      "copy": {
                        "count": "[length(parameters('fileSystemNames'))]",
                        "input": {
                          "storageFileSystemId": "[resourceId('Microsoft.Storage/storageAccounts/blobServices/containers', variables('storageNameCleaned'), 'default', parameters('fileSystemNames')[copyIndex()])]"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2019-10-01",
              "name": "storageWorkspace",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "subnetId": {
                    "value": "[parameters('subnetId')]"
                  },
                  "storageName": {
                    "value": "[format('{0}-work', parameters('prefix'))]"
                  },
                  "privateDnsZoneIdBlob": {
                    "value": "[parameters('privateDnsZoneIdBlob')]"
                  },
                  "privateDnsZoneIdDfs": {
                    "value": "[parameters('privateDnsZoneIdDfs')]"
                  },
                  "fileSystemNames": {
                    "value": "[variables('dataProductFileSystemNames')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1.14562",
                      "templateHash": "10579517856211424030"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "object"
                    },
                    "subnetId": {
                      "type": "string"
                    },
                    "storageName": {
                      "type": "string"
                    },
                    "privateDnsZoneIdDfs": {
                      "type": "string"
                    },
                    "privateDnsZoneIdBlob": {
                      "type": "string"
                    },
                    "fileSystemNames": {
                      "type": "array"
                    }
                  },
                  "functions": [],
                  "variables": {
                    "storageNameCleaned": "[replace(parameters('storageName'), '-', '')]",
                    "storagePrivateEndpointNameBlob": "[format('{0}-blob-private-endpoint', variables('storageNameCleaned'))]",
                    "storagePrivateEndpointNameDfs": "[format('{0}-dfs-private-endpoint', variables('storageNameCleaned'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Storage/storageAccounts",
                      "apiVersion": "2021-02-01",
                      "name": "[variables('storageNameCleaned')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "identity": {
                        "type": "SystemAssigned"
                      },
                      "sku": {
                        "name": "Standard_ZRS",
                        "tier": "Standard"
                      },
                      "kind": "StorageV2",
                      "properties": {
                        "accessTier": "Hot",
                        "allowBlobPublicAccess": false,
                        "allowSharedKeyAccess": false,
                        "encryption": {
                          "keySource": "Microsoft.Storage",
                          "requireInfrastructureEncryption": false,
                          "services": {
                            "blob": {
                              "enabled": true,
                              "keyType": "Account"
                            },
                            "file": {
                              "enabled": true,
                              "keyType": "Account"
                            },
                            "queue": {
                              "enabled": true,
                              "keyType": "Service"
                            },
                            "table": {
                              "enabled": true,
                              "keyType": "Service"
                            }
                          }
                        },
                        "isHnsEnabled": true,
                        "isNfsV3Enabled": false,
                        "largeFileSharesState": "Disabled",
                        "minimumTlsVersion": "TLS1_2",
                        "networkAcls": {
                          "bypass": "Metrics",
                          "defaultAction": "Deny",
                          "ipRules": [],
                          "virtualNetworkRules": [],
                          "resourceAccessRules": []
                        },
                        "supportsHttpsTrafficOnly": true
                      }
                    },
                    {
                      "type": "Microsoft.Storage/storageAccounts/managementPolicies",
                      "apiVersion": "2021-02-01",
                      "name": "[format('{0}/default', variables('storageNameCleaned'))]",
                      "properties": {
                        "policy": {
                          "rules": [
                            {
                              "enabled": true,
                              "name": "default",
                              "type": "Lifecycle",
                              "definition": {
                                "actions": {
                                  "baseBlob": {
                                    "tierToCool": {
                                      "daysAfterModificationGreaterThan": 90
                                    }
                                  },
                                  "snapshot": {
                                    "tierToCool": {
                                      "daysAfterCreationGreaterThan": 90
                                    }
                                  },
                                  "version": {
                                    "tierToCool": {
                                      "daysAfterCreationGreaterThan": 90
                                    }
                                  }
                                },
                                "filters": {
                                  "blobTypes": [
                                    "blockBlob"
                                  ],
                                  "prefixMatch": []
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageNameCleaned'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Storage/storageAccounts/blobServices",
                      "apiVersion": "2021-02-01",
                      "name": "[format('{0}/default', variables('storageNameCleaned'))]",
                      "properties": {
                        "containerDeleteRetentionPolicy": {
                          "enabled": true,
                          "days": 7
                        },
                        "cors": {
                          "corsRules": []
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageNameCleaned'))]"
                      ]
                    },
                    {
                      "copy": {
                        "name": "storageFileSystems",
                        "count": "[length(parameters('fileSystemNames'))]"
                      },
                      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
                      "apiVersion": "2021-02-01",
                      "name": "[format('{0}/default/{1}', variables('storageNameCleaned'), parameters('fileSystemNames')[copyIndex()])]",
                      "properties": {
                        "publicAccess": "None",
                        "metadata": {}
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageNameCleaned'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2020-11-01",
                      "name": "[variables('storagePrivateEndpointNameBlob')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "manualPrivateLinkServiceConnections": [],
                        "privateLinkServiceConnections": [
                          {
                            "name": "[variables('storagePrivateEndpointNameBlob')]",
                            "properties": {
                              "groupIds": [
                                "blob"
                              ],
                              "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageNameCleaned'))]",
                              "requestMessage": ""
                            }
                          }
                        ],
                        "subnet": {
                          "id": "[parameters('subnetId')]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageNameCleaned'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2020-11-01",
                      "name": "[format('{0}/aRecord', variables('storagePrivateEndpointNameBlob'))]",
                      "properties": {
                        "privateDnsZoneConfigs": [
                          {
                            "name": "[format('{0}-arecord', variables('storagePrivateEndpointNameBlob'))]",
                            "properties": {
                              "privateDnsZoneId": "[parameters('privateDnsZoneIdBlob')]"
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', variables('storagePrivateEndpointNameBlob'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2020-11-01",
                      "name": "[variables('storagePrivateEndpointNameDfs')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "manualPrivateLinkServiceConnections": [],
                        "privateLinkServiceConnections": [
                          {
                            "name": "[variables('storagePrivateEndpointNameDfs')]",
                            "properties": {
                              "groupIds": [
                                "dfs"
                              ],
                              "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageNameCleaned'))]",
                              "requestMessage": ""
                            }
                          }
                        ],
                        "subnet": {
                          "id": "[parameters('subnetId')]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageNameCleaned'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2020-11-01",
                      "name": "[format('{0}/aRecord', variables('storagePrivateEndpointNameDfs'))]",
                      "properties": {
                        "privateDnsZoneConfigs": [
                          {
                            "name": "[format('{0}-arecord', variables('storagePrivateEndpointNameDfs'))]",
                            "properties": {
                              "privateDnsZoneId": "[parameters('privateDnsZoneIdDfs')]"
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', variables('storagePrivateEndpointNameDfs'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "storageId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageNameCleaned'))]"
                    },
                    "storageFileSystemIds": {
                      "type": "array",
                      "copy": {
                        "count": "[length(parameters('fileSystemNames'))]",
                        "input": {
                          "storageFileSystemId": "[resourceId('Microsoft.Storage/storageAccounts/blobServices/containers', variables('storageNameCleaned'), 'default', parameters('fileSystemNames')[copyIndex()])]"
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "outputs": {
            "storageRawId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'storageRaw'), '2019-10-01').outputs.storageId.value]"
            },
            "storageRawFileSystemId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'storageRaw'), '2019-10-01').outputs.storageFileSystemIds.value[0].storageFileSystemId]"
            },
            "storageEnrichedCuratedId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'storageEnrichedCurated'), '2019-10-01').outputs.storageId.value]"
            },
            "storageEnrichedCuratedFileSystemId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'storageEnrichedCurated'), '2019-10-01').outputs.storageFileSystemIds.value[0].storageFileSystemId]"
            },
            "storageWorkspaceId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'storageWorkspace'), '2019-10-01').outputs.storageId.value]"
            },
            "storageWorkspaceFileSystemId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'storageWorkspace'), '2019-10-01').outputs.storageFileSystemIds.value[0].storageFileSystemId]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-network', variables('name'))), 'Microsoft.Resources/deployments', 'networkServices')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('{0}-storage', variables('name')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "externalStorageServices",
      "resourceGroup": "[format('{0}-externalstorage', variables('name'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "prefix": {
            "value": "[variables('name')]"
          },
          "tags": {
            "value": "[variables('tags')]"
          },
          "subnetId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-network', variables('name'))), 'Microsoft.Resources/deployments', 'networkServices'), '2019-10-01').outputs.servicesSubnetId.value]"
          },
          "privateDnsZoneIdBlob": {
            "value": "[parameters('privateDnsZoneIdBlob')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1.14562",
              "templateHash": "4799461784598790167"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "prefix": {
              "type": "string"
            },
            "tags": {
              "type": "object"
            },
            "subnetId": {
              "type": "string"
            },
            "privateDnsZoneIdBlob": {
              "type": "string"
            }
          },
          "functions": [],
          "variables": {
            "fileSytemNames": [
              "data"
            ]
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2019-10-01",
              "name": "storageExternal001",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "subnetId": {
                    "value": "[parameters('subnetId')]"
                  },
                  "storageName": {
                    "value": "[format('{0}-ext001', parameters('prefix'))]"
                  },
                  "privateDnsZoneIdBlob": {
                    "value": "[parameters('privateDnsZoneIdBlob')]"
                  },
                  "fileSytemNames": {
                    "value": "[variables('fileSytemNames')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1.14562",
                      "templateHash": "2037613535849699201"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "object"
                    },
                    "subnetId": {
                      "type": "string"
                    },
                    "storageName": {
                      "type": "string"
                    },
                    "privateDnsZoneIdBlob": {
                      "type": "string"
                    },
                    "fileSytemNames": {
                      "type": "array",
                      "defaultValue": [
                        "data"
                      ]
                    }
                  },
                  "functions": [],
                  "variables": {
                    "storageNameCleaned": "[replace(parameters('storageName'), '-', '')]",
                    "storageExternalPrivateEndpointNameBlob": "[format('{0}-blob-private-endpoint', variables('storageNameCleaned'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Storage/storageAccounts",
                      "apiVersion": "2021-02-01",
                      "name": "[variables('storageNameCleaned')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "identity": {
                        "type": "SystemAssigned"
                      },
                      "sku": {
                        "name": "Standard_ZRS",
                        "tier": "Standard"
                      },
                      "kind": "StorageV2",
                      "properties": {
                        "accessTier": "Hot",
                        "allowBlobPublicAccess": false,
                        "allowSharedKeyAccess": false,
                        "encryption": {
                          "keySource": "Microsoft.Storage",
                          "requireInfrastructureEncryption": false,
                          "services": {
                            "blob": {
                              "enabled": true,
                              "keyType": "Account"
                            },
                            "file": {
                              "enabled": true,
                              "keyType": "Account"
                            },
                            "queue": {
                              "enabled": true,
                              "keyType": "Service"
                            },
                            "table": {
                              "enabled": true,
                              "keyType": "Service"
                            }
                          }
                        },
                        "isHnsEnabled": false,
                        "isNfsV3Enabled": false,
                        "largeFileSharesState": "Disabled",
                        "minimumTlsVersion": "TLS1_2",
                        "networkAcls": {
                          "bypass": "Metrics",
                          "defaultAction": "Deny",
                          "ipRules": [],
                          "virtualNetworkRules": [],
                          "resourceAccessRules": []
                        },
                        "supportsHttpsTrafficOnly": true
                      }
                    },
                    {
                      "type": "Microsoft.Storage/storageAccounts/managementPolicies",
                      "apiVersion": "2021-02-01",
                      "name": "[format('{0}/default', variables('storageNameCleaned'))]",
                      "properties": {
                        "policy": {
                          "rules": [
                            {
                              "enabled": true,
                              "name": "default",
                              "type": "Lifecycle",
                              "definition": {
                                "actions": {
                                  "baseBlob": {
                                    "tierToCool": {
                                      "daysAfterModificationGreaterThan": 90
                                    }
                                  },
                                  "snapshot": {
                                    "tierToCool": {
                                      "daysAfterCreationGreaterThan": 90
                                    }
                                  },
                                  "version": {
                                    "tierToCool": {
                                      "daysAfterCreationGreaterThan": 90
                                    }
                                  }
                                },
                                "filters": {
                                  "blobTypes": [
                                    "blockBlob"
                                  ],
                                  "prefixMatch": []
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageNameCleaned'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Storage/storageAccounts/blobServices",
                      "apiVersion": "2021-02-01",
                      "name": "[format('{0}/default', variables('storageNameCleaned'))]",
                      "properties": {
                        "containerDeleteRetentionPolicy": {
                          "enabled": true,
                          "days": 7
                        },
                        "cors": {
                          "corsRules": []
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageNameCleaned'))]"
                      ]
                    },
                    {
                      "copy": {
                        "name": "storageExternalFileSystems",
                        "count": "[length(parameters('fileSytemNames'))]"
                      },
                      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
                      "apiVersion": "2021-02-01",
                      "name": "[format('{0}/default/{1}', variables('storageNameCleaned'), parameters('fileSytemNames')[copyIndex()])]",
                      "properties": {
                        "publicAccess": "None",
                        "metadata": {}
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageNameCleaned'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2020-11-01",
                      "name": "[variables('storageExternalPrivateEndpointNameBlob')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "manualPrivateLinkServiceConnections": [],
                        "privateLinkServiceConnections": [
                          {
                            "name": "[variables('storageExternalPrivateEndpointNameBlob')]",
                            "properties": {
                              "groupIds": [
                                "blob"
                              ],
                              "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageNameCleaned'))]",
                              "requestMessage": ""
                            }
                          }
                        ],
                        "subnet": {
                          "id": "[parameters('subnetId')]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageNameCleaned'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2020-11-01",
                      "name": "[format('{0}/aRecord', variables('storageExternalPrivateEndpointNameBlob'))]",
                      "properties": {
                        "privateDnsZoneConfigs": [
                          {
                            "name": "[format('{0}-arecord', variables('storageExternalPrivateEndpointNameBlob'))]",
                            "properties": {
                              "privateDnsZoneId": "[parameters('privateDnsZoneIdBlob')]"
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', variables('storageExternalPrivateEndpointNameBlob'))]"
                      ]
                    }
                  ]
                }
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('{0}-externalstorage', variables('name')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-network', variables('name'))), 'Microsoft.Resources/deployments', 'networkServices')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "metadataServices",
      "resourceGroup": "[format('{0}-metadata', variables('name'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "prefix": {
            "value": "[variables('name')]"
          },
          "tags": {
            "value": "[variables('tags')]"
          },
          "subnetId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-network', variables('name'))), 'Microsoft.Resources/deployments', 'networkServices'), '2019-10-01').outputs.servicesSubnetId.value]"
          },
          "administratorUsername": {
            "value": "[variables('administratorUsername')]"
          },
          "administratorPassword": {
            "value": "[parameters('administratorPassword')]"
          },
          "sqlserverAdminGroupName": {
            "value": ""
          },
          "sqlserverAdminGroupObjectID": {
            "value": ""
          },
          "mysqlserverAdminGroupName": {
            "value": ""
          },
          "mysqlserverAdminGroupObjectID": {
            "value": ""
          },
          "privateDnsZoneIdKeyVault": {
            "value": "[parameters('privateDnsZoneIdKeyVault')]"
          },
          "privateDnsZoneIdSqlServer": {
            "value": "[parameters('privateDnsZoneIdSqlServer')]"
          },
          "privateDnsZoneIdMySqlServer": {
            "value": "[parameters('privateDnsZoneIdMySqlServer')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1.14562",
              "templateHash": "13917159333902148731"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "prefix": {
              "type": "string"
            },
            "tags": {
              "type": "object"
            },
            "subnetId": {
              "type": "string"
            },
            "administratorUsername": {
              "type": "string",
              "defaultValue": "SqlServerMainUser"
            },
            "administratorPassword": {
              "type": "secureString"
            },
            "sqlserverAdminGroupName": {
              "type": "string"
            },
            "sqlserverAdminGroupObjectID": {
              "type": "string"
            },
            "mysqlserverAdminGroupName": {
              "type": "string"
            },
            "mysqlserverAdminGroupObjectID": {
              "type": "string"
            },
            "privateDnsZoneIdSqlServer": {
              "type": "string"
            },
            "privateDnsZoneIdMySqlServer": {
              "type": "string"
            },
            "privateDnsZoneIdKeyVault": {
              "type": "string"
            }
          },
          "functions": [],
          "variables": {
            "keyVault001Name": "[format('{0}-vault001', parameters('prefix'))]",
            "keyVault002Name": "[format('{0}-vault002', parameters('prefix'))]",
            "sqlServer001Name": "[format('{0}-sqlserver001', parameters('prefix'))]",
            "mySqlServer001Name": "[format('{0}-mysqlserver001', parameters('prefix'))]",
            "mySqlServer001UsernameSecretName": "[format('{0}Username', variables('mySqlServer001Name'))]",
            "mySqlServer001PasswordSecretName": "[format('{0}Password', variables('mySqlServer001Name'))]",
            "mySqlServer001ConnectionStringSecretName": "[format('{0}ConnectionString', variables('mySqlServer001Name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-04-01-preview",
              "name": "[format('{0}/{1}', variables('keyVault002Name'), variables('mySqlServer001UsernameSecretName'))]",
              "properties": {
                "attributes": {
                  "enabled": true
                },
                "contentType": "text/plain",
                "value": "[parameters('administratorUsername')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'keyVault002')]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-04-01-preview",
              "name": "[format('{0}/{1}', variables('keyVault002Name'), variables('mySqlServer001PasswordSecretName'))]",
              "properties": {
                "attributes": {
                  "enabled": true
                },
                "contentType": "text/plain",
                "value": "[parameters('administratorPassword')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'keyVault002')]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-04-01-preview",
              "name": "[format('{0}/{1}', variables('keyVault002Name'), variables('mySqlServer001ConnectionStringSecretName'))]",
              "properties": {
                "attributes": {
                  "enabled": true
                },
                "contentType": "text/plain",
                "value": "[format('jdbc:mysql://{0}.mysql.database.azure.com:3306/{1}?useSSL=true&requireSSL=false&enabledSslProtocolSuites=TLSv1.2', variables('mySqlServer001Name'), reference(resourceId('Microsoft.Resources/deployments', 'mysqlserver001'), '2019-10-01').outputs.mySqlServerDatabaseName.value)]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'keyVault002')]",
                "[resourceId('Microsoft.Resources/deployments', 'mysqlserver001')]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2019-10-01",
              "name": "keyVault001",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "subnetId": {
                    "value": "[parameters('subnetId')]"
                  },
                  "keyvaultName": {
                    "value": "[variables('keyVault001Name')]"
                  },
                  "privateDnsZoneIdKeyVault": {
                    "value": "[parameters('privateDnsZoneIdKeyVault')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1.14562",
                      "templateHash": "15833037392214690975"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "object"
                    },
                    "subnetId": {
                      "type": "string"
                    },
                    "keyvaultName": {
                      "type": "string"
                    },
                    "privateDnsZoneIdKeyVault": {
                      "type": "string"
                    }
                  },
                  "functions": [],
                  "variables": {
                    "keyVaultPrivateEndpointName": "[format('{0}-private-endpoint', parameters('keyvaultName'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.KeyVault/vaults",
                      "apiVersion": "2021-04-01-preview",
                      "name": "[parameters('keyvaultName')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "accessPolicies": [],
                        "createMode": "default",
                        "enabledForDeployment": false,
                        "enabledForDiskEncryption": false,
                        "enabledForTemplateDeployment": false,
                        "enablePurgeProtection": true,
                        "enableRbacAuthorization": true,
                        "enableSoftDelete": true,
                        "networkAcls": {
                          "bypass": "AzureServices",
                          "defaultAction": "Deny",
                          "ipRules": [],
                          "virtualNetworkRules": []
                        },
                        "sku": {
                          "family": "A",
                          "name": "standard"
                        },
                        "softDeleteRetentionInDays": 7,
                        "tenantId": "[subscription().tenantId]"
                      }
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2020-11-01",
                      "name": "[variables('keyVaultPrivateEndpointName')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "manualPrivateLinkServiceConnections": [],
                        "privateLinkServiceConnections": [
                          {
                            "name": "[variables('keyVaultPrivateEndpointName')]",
                            "properties": {
                              "groupIds": [
                                "vault"
                              ],
                              "privateLinkServiceId": "[resourceId('Microsoft.KeyVault/vaults', parameters('keyvaultName'))]",
                              "requestMessage": ""
                            }
                          }
                        ],
                        "subnet": {
                          "id": "[parameters('subnetId')]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyvaultName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2020-11-01",
                      "name": "[format('{0}/{1}', variables('keyVaultPrivateEndpointName'), 'aRecord')]",
                      "properties": {
                        "privateDnsZoneConfigs": [
                          {
                            "name": "[format('{0}-arecord', variables('keyVaultPrivateEndpointName'))]",
                            "properties": {
                              "privateDnsZoneId": "[parameters('privateDnsZoneIdKeyVault')]"
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', variables('keyVaultPrivateEndpointName'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "keyvaultId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.KeyVault/vaults', parameters('keyvaultName'))]"
                    },
                    "keyVaultName": {
                      "type": "string",
                      "value": "[parameters('keyvaultName')]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2019-10-01",
              "name": "keyVault002",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "subnetId": {
                    "value": "[parameters('subnetId')]"
                  },
                  "keyvaultName": {
                    "value": "[variables('keyVault002Name')]"
                  },
                  "privateDnsZoneIdKeyVault": {
                    "value": "[parameters('privateDnsZoneIdKeyVault')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1.14562",
                      "templateHash": "15833037392214690975"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "object"
                    },
                    "subnetId": {
                      "type": "string"
                    },
                    "keyvaultName": {
                      "type": "string"
                    },
                    "privateDnsZoneIdKeyVault": {
                      "type": "string"
                    }
                  },
                  "functions": [],
                  "variables": {
                    "keyVaultPrivateEndpointName": "[format('{0}-private-endpoint', parameters('keyvaultName'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.KeyVault/vaults",
                      "apiVersion": "2021-04-01-preview",
                      "name": "[parameters('keyvaultName')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "accessPolicies": [],
                        "createMode": "default",
                        "enabledForDeployment": false,
                        "enabledForDiskEncryption": false,
                        "enabledForTemplateDeployment": false,
                        "enablePurgeProtection": true,
                        "enableRbacAuthorization": true,
                        "enableSoftDelete": true,
                        "networkAcls": {
                          "bypass": "AzureServices",
                          "defaultAction": "Deny",
                          "ipRules": [],
                          "virtualNetworkRules": []
                        },
                        "sku": {
                          "family": "A",
                          "name": "standard"
                        },
                        "softDeleteRetentionInDays": 7,
                        "tenantId": "[subscription().tenantId]"
                      }
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2020-11-01",
                      "name": "[variables('keyVaultPrivateEndpointName')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "manualPrivateLinkServiceConnections": [],
                        "privateLinkServiceConnections": [
                          {
                            "name": "[variables('keyVaultPrivateEndpointName')]",
                            "properties": {
                              "groupIds": [
                                "vault"
                              ],
                              "privateLinkServiceId": "[resourceId('Microsoft.KeyVault/vaults', parameters('keyvaultName'))]",
                              "requestMessage": ""
                            }
                          }
                        ],
                        "subnet": {
                          "id": "[parameters('subnetId')]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyvaultName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2020-11-01",
                      "name": "[format('{0}/{1}', variables('keyVaultPrivateEndpointName'), 'aRecord')]",
                      "properties": {
                        "privateDnsZoneConfigs": [
                          {
                            "name": "[format('{0}-arecord', variables('keyVaultPrivateEndpointName'))]",
                            "properties": {
                              "privateDnsZoneId": "[parameters('privateDnsZoneIdKeyVault')]"
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', variables('keyVaultPrivateEndpointName'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "keyvaultId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.KeyVault/vaults', parameters('keyvaultName'))]"
                    },
                    "keyVaultName": {
                      "type": "string",
                      "value": "[parameters('keyvaultName')]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2019-10-01",
              "name": "sqlserver001",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "subnetId": {
                    "value": "[parameters('subnetId')]"
                  },
                  "administratorUsername": {
                    "value": "[parameters('administratorUsername')]"
                  },
                  "administratorPassword": {
                    "value": "[parameters('administratorPassword')]"
                  },
                  "sqlserverAdminGroupName": {
                    "value": "[parameters('sqlserverAdminGroupName')]"
                  },
                  "sqlserverAdminGroupObjectID": {
                    "value": "[parameters('sqlserverAdminGroupObjectID')]"
                  },
                  "sqlserverName": {
                    "value": "[variables('sqlServer001Name')]"
                  },
                  "privateDnsZoneIdSqlServer": {
                    "value": "[parameters('privateDnsZoneIdSqlServer')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1.14562",
                      "templateHash": "3931828577918550372"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "sqlserverName": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "object"
                    },
                    "subnetId": {
                      "type": "string"
                    },
                    "administratorUsername": {
                      "type": "string",
                      "defaultValue": "SqlServerMainUser"
                    },
                    "administratorPassword": {
                      "type": "secureString"
                    },
                    "sqlserverAdminGroupName": {
                      "type": "string"
                    },
                    "sqlserverAdminGroupObjectID": {
                      "type": "string"
                    },
                    "privateDnsZoneIdSqlServer": {
                      "type": "string"
                    }
                  },
                  "functions": [],
                  "variables": {
                    "sqlserverAdfMetastoreDbName": "AdfMetastoreDb",
                    "sqlserverPrivateEndpointName": "[format('{0}-private-endpoint', parameters('sqlserverName'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Sql/servers",
                      "apiVersion": "2020-11-01-preview",
                      "name": "[parameters('sqlserverName')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "identity": {
                        "type": "SystemAssigned"
                      },
                      "properties": {
                        "administratorLogin": "[parameters('administratorUsername')]",
                        "administratorLoginPassword": "[parameters('administratorPassword')]",
                        "administrators": {},
                        "minimalTlsVersion": "1.2",
                        "publicNetworkAccess": "Disabled",
                        "version": "12.0"
                      }
                    },
                    {
                      "condition": "[and(not(equals(parameters('sqlserverAdminGroupName'), '')), not(equals(parameters('sqlserverAdminGroupObjectID'), '')))]",
                      "type": "Microsoft.Sql/servers/administrators",
                      "apiVersion": "2020-11-01-preview",
                      "name": "[format('{0}/{1}', parameters('sqlserverName'), 'activeDirectory')]",
                      "properties": {
                        "administratorType": "ActiveDirectory",
                        "login": "[parameters('sqlserverAdminGroupName')]",
                        "sid": "[parameters('sqlserverAdminGroupObjectID')]",
                        "tenantId": "[subscription().tenantId]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Sql/servers', parameters('sqlserverName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Sql/servers/databases",
                      "apiVersion": "2020-11-01-preview",
                      "name": "[format('{0}/{1}', parameters('sqlserverName'), variables('sqlserverAdfMetastoreDbName'))]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "sku": {
                        "name": "Basic",
                        "tier": "Basic",
                        "capacity": 5
                      },
                      "properties": {
                        "autoPauseDelay": -1,
                        "catalogCollation": "DATABASE_DEFAULT",
                        "collation": "SQL_Latin1_General_CP1_CI_AS",
                        "createMode": "Default",
                        "readScale": "Disabled",
                        "highAvailabilityReplicaCount": 0,
                        "licenseType": "LicenseIncluded",
                        "maxSizeBytes": 524288000,
                        "minCapacity": 1,
                        "requestedBackupStorageRedundancy": "Geo",
                        "zoneRedundant": false
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Sql/servers', parameters('sqlserverName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2020-11-01",
                      "name": "[variables('sqlserverPrivateEndpointName')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "manualPrivateLinkServiceConnections": [],
                        "privateLinkServiceConnections": [
                          {
                            "name": "[variables('sqlserverPrivateEndpointName')]",
                            "properties": {
                              "groupIds": [
                                "sqlServer"
                              ],
                              "privateLinkServiceId": "[resourceId('Microsoft.Sql/servers', parameters('sqlserverName'))]",
                              "requestMessage": ""
                            }
                          }
                        ],
                        "subnet": {
                          "id": "[parameters('subnetId')]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Sql/servers', parameters('sqlserverName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2020-11-01",
                      "name": "[format('{0}/{1}', variables('sqlserverPrivateEndpointName'), 'aRecord')]",
                      "properties": {
                        "privateDnsZoneConfigs": [
                          {
                            "name": "[format('{0}-arecord', variables('sqlserverPrivateEndpointName'))]",
                            "properties": {
                              "privateDnsZoneId": "[parameters('privateDnsZoneIdSqlServer')]"
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', variables('sqlserverPrivateEndpointName'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "sqlServerId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Sql/servers', parameters('sqlserverName'))]"
                    },
                    "sqlServerDatabaseName": {
                      "type": "string",
                      "value": "[variables('sqlserverAdfMetastoreDbName')]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2019-10-01",
              "name": "mysqlserver001",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "subnetId": {
                    "value": "[parameters('subnetId')]"
                  },
                  "mysqlserverName": {
                    "value": "[variables('mySqlServer001Name')]"
                  },
                  "administratorUsername": {
                    "value": "[parameters('administratorUsername')]"
                  },
                  "administratorPassword": {
                    "value": "[parameters('administratorPassword')]"
                  },
                  "mysqlserverAdminGroupName": {
                    "value": "[parameters('mysqlserverAdminGroupName')]"
                  },
                  "mysqlserverAdminGroupObjectID": {
                    "value": "[parameters('mysqlserverAdminGroupObjectID')]"
                  },
                  "privateDnsZoneIdMySqlServer": {
                    "value": "[parameters('privateDnsZoneIdMySqlServer')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1.14562",
                      "templateHash": "8327631663795669090"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "mysqlserverName": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "object"
                    },
                    "subnetId": {
                      "type": "string"
                    },
                    "administratorUsername": {
                      "type": "string",
                      "defaultValue": "SqlServerMainUser"
                    },
                    "administratorPassword": {
                      "type": "secureString"
                    },
                    "mysqlserverAdminGroupName": {
                      "type": "string"
                    },
                    "mysqlserverAdminGroupObjectID": {
                      "type": "string"
                    },
                    "privateDnsZoneIdMySqlServer": {
                      "type": "string"
                    }
                  },
                  "functions": [],
                  "variables": {
                    "mySqlServerDatabaseName": "HiveMetastoreDb",
                    "mysqlserverPrivateEndpointName": "[format('{0}-private-endpoint', parameters('mysqlserverName'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.DBForMySQL/servers",
                      "apiVersion": "2017-12-01",
                      "name": "[parameters('mysqlserverName')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "identity": {
                        "type": "SystemAssigned"
                      },
                      "sku": {
                        "name": "GP_Gen5_2",
                        "tier": "GeneralPurpose",
                        "family": "Gen5",
                        "capacity": 2,
                        "size": "5120"
                      },
                      "properties": {
                        "administratorLogin": "[parameters('administratorUsername')]",
                        "administratorLoginPassword": "[parameters('administratorPassword')]",
                        "createMode": "Default",
                        "infrastructureEncryption": "Disabled",
                        "minimalTlsVersion": "TLS1_2",
                        "publicNetworkAccess": "Disabled",
                        "sslEnforcement": "Enabled",
                        "storageProfile": {
                          "backupRetentionDays": 7,
                          "geoRedundantBackup": "Enabled",
                          "storageAutogrow": "Enabled",
                          "storageMB": 5120
                        },
                        "version": "5.7"
                      }
                    },
                    {
                      "type": "Microsoft.DBForMySQL/servers/configurations",
                      "apiVersion": "2017-12-01",
                      "name": "[format('{0}/{1}', parameters('mysqlserverName'), 'lower_case_table_names')]",
                      "properties": {
                        "value": "2",
                        "source": "user-override"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.DBForMySQL/servers', parameters('mysqlserverName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.DBForMySQL/servers/databases",
                      "apiVersion": "2017-12-01",
                      "name": "[format('{0}/{1}', parameters('mysqlserverName'), variables('mySqlServerDatabaseName'))]",
                      "properties": {
                        "charset": "latin1",
                        "collation": "latin1_swedish_ci"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.DBForMySQL/servers', parameters('mysqlserverName'))]"
                      ]
                    },
                    {
                      "condition": "[and(not(equals(parameters('mysqlserverAdminGroupName'), '')), not(equals(parameters('mysqlserverAdminGroupObjectID'), '')))]",
                      "type": "Microsoft.DBForMySQL/servers/administrators",
                      "apiVersion": "2017-12-01",
                      "name": "[format('{0}/{1}', parameters('mysqlserverName'), 'activeDirectory')]",
                      "properties": {
                        "administratorType": "ActiveDirectory",
                        "login": "[parameters('mysqlserverAdminGroupName')]",
                        "sid": "[parameters('mysqlserverAdminGroupObjectID')]",
                        "tenantId": "[subscription().tenantId]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.DBForMySQL/servers', parameters('mysqlserverName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2020-11-01",
                      "name": "[variables('mysqlserverPrivateEndpointName')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "manualPrivateLinkServiceConnections": [],
                        "privateLinkServiceConnections": [
                          {
                            "name": "[variables('mysqlserverPrivateEndpointName')]",
                            "properties": {
                              "groupIds": [
                                "mysqlServer"
                              ],
                              "privateLinkServiceId": "[resourceId('Microsoft.DBForMySQL/servers', parameters('mysqlserverName'))]",
                              "requestMessage": ""
                            }
                          }
                        ],
                        "subnet": {
                          "id": "[parameters('subnetId')]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.DBForMySQL/servers', parameters('mysqlserverName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2020-11-01",
                      "name": "[format('{0}/{1}', variables('mysqlserverPrivateEndpointName'), 'aRecord')]",
                      "properties": {
                        "privateDnsZoneConfigs": [
                          {
                            "name": "[format('{0}-arecord', variables('mysqlserverPrivateEndpointName'))]",
                            "properties": {
                              "privateDnsZoneId": "[parameters('privateDnsZoneIdMySqlServer')]"
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', variables('mysqlserverPrivateEndpointName'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "mySqlServerId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.DBForMySQL/servers', parameters('mysqlserverName'))]"
                    },
                    "mySqlServerDatabaseName": {
                      "type": "string",
                      "value": "[variables('mySqlServerDatabaseName')]"
                    }
                  }
                }
              }
            }
          ],
          "outputs": {
            "keyVault001Id": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'keyVault001'), '2019-10-01').outputs.keyvaultId.value]"
            },
            "sqlServer001Id": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'sqlserver001'), '2019-10-01').outputs.sqlServerId.value]"
            },
            "sqlServer001DatabaseName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'sqlserver001'), '2019-10-01').outputs.sqlServerDatabaseName.value]"
            },
            "mySqlServer001Id": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'mysqlserver001'), '2019-10-01').outputs.mySqlServerId.value]"
            },
            "mySqlServer001UsernameSecretName": {
              "type": "string",
              "value": "[variables('mySqlServer001UsernameSecretName')]"
            },
            "mySqlServer001PasswordSecretName": {
              "type": "string",
              "value": "[variables('mySqlServer001PasswordSecretName')]"
            },
            "mySqlServer001ConnectionStringSecretName": {
              "type": "string",
              "value": "[variables('mySqlServer001ConnectionStringSecretName')]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('{0}-metadata', variables('name')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-network', variables('name'))), 'Microsoft.Resources/deployments', 'networkServices')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "sharedDomainServices",
      "resourceGroup": "[format('{0}-shared-domain', variables('name'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "prefix": {
            "value": "[variables('name')]"
          },
          "tags": {
            "value": "[variables('tags')]"
          },
          "subnetId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-network', variables('name'))), 'Microsoft.Resources/deployments', 'networkServices'), '2019-10-01').outputs.servicesSubnetId.value]"
          },
          "vnetId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-network', variables('name'))), 'Microsoft.Resources/deployments', 'networkServices'), '2019-10-01').outputs.vnetId.value]"
          },
          "databricksDomain001PrivateSubnetName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-network', variables('name'))), 'Microsoft.Resources/deployments', 'networkServices'), '2019-10-01').outputs.databricksDomainPrivateSubnetName.value]"
          },
          "databricksDomain001PublicSubnetName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-network', variables('name'))), 'Microsoft.Resources/deployments', 'networkServices'), '2019-10-01').outputs.databricksDomainPublicSubnetName.value]"
          },
          "storageRawId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-storage', variables('name'))), 'Microsoft.Resources/deployments', 'storageServices'), '2019-10-01').outputs.storageRawId.value]"
          },
          "storageAccountRawFileSystemId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-storage', variables('name'))), 'Microsoft.Resources/deployments', 'storageServices'), '2019-10-01').outputs.storageRawFileSystemId.value]"
          },
          "storageEnrichedCuratedId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-storage', variables('name'))), 'Microsoft.Resources/deployments', 'storageServices'), '2019-10-01').outputs.storageEnrichedCuratedId.value]"
          },
          "storageAccountEnrichedCuratedFileSystemId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-storage', variables('name'))), 'Microsoft.Resources/deployments', 'storageServices'), '2019-10-01').outputs.storageEnrichedCuratedFileSystemId.value]"
          },
          "keyVault001Id": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-metadata', variables('name'))), 'Microsoft.Resources/deployments', 'metadataServices'), '2019-10-01').outputs.keyVault001Id.value]"
          },
          "sqlServer001Id": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-metadata', variables('name'))), 'Microsoft.Resources/deployments', 'metadataServices'), '2019-10-01').outputs.sqlServer001Id.value]"
          },
          "sqlDatabase001Name": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-metadata', variables('name'))), 'Microsoft.Resources/deployments', 'metadataServices'), '2019-10-01').outputs.sqlServer001DatabaseName.value]"
          },
          "purviewId": {
            "value": "[parameters('purviewId')]"
          },
          "privateDnsZoneIdDataFactory": {
            "value": "[parameters('privateDnsZoneIdDataFactory')]"
          },
          "privateDnsZoneIdDataFactoryPortal": {
            "value": "[parameters('privateDnsZoneIdDataFactoryPortal')]"
          },
          "privateDnsZoneIdEventhubNamespace": {
            "value": "[parameters('privateDnsZoneIdEventhubNamespace')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1.14562",
              "templateHash": "1405675899852748818"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "prefix": {
              "type": "string"
            },
            "tags": {
              "type": "object"
            },
            "storageAccountRawFileSystemId": {
              "type": "string"
            },
            "storageAccountEnrichedCuratedFileSystemId": {
              "type": "string"
            },
            "vnetId": {
              "type": "string"
            },
            "databricksDomain001PrivateSubnetName": {
              "type": "string"
            },
            "databricksDomain001PublicSubnetName": {
              "type": "string"
            },
            "subnetId": {
              "type": "string"
            },
            "purviewId": {
              "type": "string"
            },
            "storageRawId": {
              "type": "string"
            },
            "storageEnrichedCuratedId": {
              "type": "string"
            },
            "keyVault001Id": {
              "type": "string"
            },
            "sqlServer001Id": {
              "type": "string"
            },
            "sqlDatabase001Name": {
              "type": "string"
            },
            "privateDnsZoneIdDataFactory": {
              "type": "string"
            },
            "privateDnsZoneIdDataFactoryPortal": {
              "type": "string"
            },
            "privateDnsZoneIdEventhubNamespace": {
              "type": "string"
            }
          },
          "functions": [],
          "variables": {
            "databricksDomain001Name": "[format('{0}-domain-databricks001', parameters('prefix'))]",
            "eventhubNamespaceDomain001Name": "[format('{0}-domain-eventhub001', parameters('prefix'))]",
            "datafactoryDomain001Name": "[format('{0}-domain-datafactory001', parameters('prefix'))]",
            "storageAccountRawSubscriptionId": "[split(parameters('storageAccountRawFileSystemId'), '/')[2]]",
            "storageAccountRawResourceGroupName": "[split(parameters('storageAccountRawFileSystemId'), '/')[4]]",
            "storageAccountEnrichedCuratedSubscriptionId": "[split(parameters('storageAccountEnrichedCuratedFileSystemId'), '/')[2]]",
            "storageAccountEnrichedCuratedResourceGroupName": "[split(parameters('storageAccountEnrichedCuratedFileSystemId'), '/')[4]]"
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2019-10-01",
              "name": "databricksDomain001",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "databricksName": {
                    "value": "[variables('databricksDomain001Name')]"
                  },
                  "vnetId": {
                    "value": "[parameters('vnetId')]"
                  },
                  "privateSubnetName": {
                    "value": "[parameters('databricksDomain001PrivateSubnetName')]"
                  },
                  "publicSubnetName": {
                    "value": "[parameters('databricksDomain001PublicSubnetName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1.14562",
                      "templateHash": "15600877305649937658"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "object"
                    },
                    "databricksName": {
                      "type": "string"
                    },
                    "vnetId": {
                      "type": "string"
                    },
                    "privateSubnetName": {
                      "type": "string"
                    },
                    "publicSubnetName": {
                      "type": "string"
                    }
                  },
                  "functions": [],
                  "resources": [
                    {
                      "type": "Microsoft.Databricks/workspaces",
                      "apiVersion": "2018-04-01",
                      "name": "[parameters('databricksName')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "sku": {
                        "name": "premium"
                      },
                      "properties": {
                        "managedResourceGroupId": "[format('{0}/resourceGroups/{1}-rg', subscription().id, parameters('databricksName'))]",
                        "parameters": {
                          "customVirtualNetworkId": {
                            "value": "[parameters('vnetId')]"
                          },
                          "customPrivateSubnetName": {
                            "value": "[parameters('privateSubnetName')]"
                          },
                          "customPublicSubnetName": {
                            "value": "[parameters('publicSubnetName')]"
                          },
                          "enableNoPublicIp": {
                            "value": true
                          },
                          "prepareEncryption": {
                            "value": true
                          },
                          "requireInfrastructureEncryption": {
                            "value": false
                          }
                        }
                      }
                    }
                  ],
                  "outputs": {
                    "databricksId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Databricks/workspaces', parameters('databricksName'))]"
                    },
                    "databricksWorkspaceUrl": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Databricks/workspaces', parameters('databricksName'))).workspaceUrl]"
                    },
                    "databricksApiUrl": {
                      "type": "string",
                      "value": "[format('https://{0}.azuredatabricks.net', parameters('location'))]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2019-10-01",
              "name": "eventhubNamespaceDomain001",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "subnetId": {
                    "value": "[parameters('subnetId')]"
                  },
                  "eventhubnamespaceName": {
                    "value": "[variables('eventhubNamespaceDomain001Name')]"
                  },
                  "privateDnsZoneIdEventhubNamespace": {
                    "value": "[parameters('privateDnsZoneIdEventhubNamespace')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1.14562",
                      "templateHash": "10681228852820684691"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "object"
                    },
                    "subnetId": {
                      "type": "string"
                    },
                    "eventhubnamespaceName": {
                      "type": "string"
                    },
                    "privateDnsZoneIdEventhubNamespace": {
                      "type": "string"
                    }
                  },
                  "functions": [],
                  "variables": {
                    "eventhubNamespacePrivateEndpointName": "[format('{0}-private-endpoint', parameters('eventhubnamespaceName'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.EventHub/namespaces",
                      "apiVersion": "2021-01-01-preview",
                      "name": "[parameters('eventhubnamespaceName')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "identity": {
                        "type": "SystemAssigned"
                      },
                      "sku": {
                        "name": "Standard",
                        "tier": "Standard",
                        "capacity": 1
                      },
                      "properties": {
                        "isAutoInflateEnabled": true,
                        "kafkaEnabled": true,
                        "maximumThroughputUnits": 1,
                        "zoneRedundant": true
                      }
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2020-11-01",
                      "name": "[variables('eventhubNamespacePrivateEndpointName')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "manualPrivateLinkServiceConnections": [],
                        "privateLinkServiceConnections": [
                          {
                            "name": "[variables('eventhubNamespacePrivateEndpointName')]",
                            "properties": {
                              "groupIds": [
                                "namespace"
                              ],
                              "privateLinkServiceId": "[resourceId('Microsoft.EventHub/namespaces', parameters('eventhubnamespaceName'))]",
                              "requestMessage": ""
                            }
                          }
                        ],
                        "subnet": {
                          "id": "[parameters('subnetId')]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.EventHub/namespaces', parameters('eventhubnamespaceName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2020-11-01",
                      "name": "[format('{0}/{1}', variables('eventhubNamespacePrivateEndpointName'), 'aRecord')]",
                      "properties": {
                        "privateDnsZoneConfigs": [
                          {
                            "name": "[format('{0}-arecord', variables('eventhubNamespacePrivateEndpointName'))]",
                            "properties": {
                              "privateDnsZoneId": "[parameters('privateDnsZoneIdEventhubNamespace')]"
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', variables('eventhubNamespacePrivateEndpointName'))]"
                      ]
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2019-10-01",
              "name": "datafactoryDomain001",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "subnetId": {
                    "value": "[parameters('subnetId')]"
                  },
                  "datafactoryName": {
                    "value": "[variables('datafactoryDomain001Name')]"
                  },
                  "privateDnsZoneIdDataFactory": {
                    "value": "[parameters('privateDnsZoneIdDataFactory')]"
                  },
                  "privateDnsZoneIdDataFactoryPortal": {
                    "value": "[parameters('privateDnsZoneIdDataFactoryPortal')]"
                  },
                  "purviewId": {
                    "value": "[parameters('purviewId')]"
                  },
                  "storageRawId": {
                    "value": "[parameters('storageRawId')]"
                  },
                  "storageEnrichedCuratedId": {
                    "value": "[parameters('storageEnrichedCuratedId')]"
                  },
                  "databricks001Id": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'databricksDomain001'), '2019-10-01').outputs.databricksId.value]"
                  },
                  "databricks001WorkspaceUrl": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'databricksDomain001'), '2019-10-01').outputs.databricksWorkspaceUrl.value]"
                  },
                  "keyVault001Id": {
                    "value": "[parameters('keyVault001Id')]"
                  },
                  "sqlServer001Id": {
                    "value": "[parameters('sqlServer001Id')]"
                  },
                  "sqlDatabase001Name": {
                    "value": "[parameters('sqlDatabase001Name')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1.14562",
                      "templateHash": "8529648024909088001"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "object"
                    },
                    "subnetId": {
                      "type": "string"
                    },
                    "datafactoryName": {
                      "type": "string"
                    },
                    "privateDnsZoneIdDataFactory": {
                      "type": "string"
                    },
                    "privateDnsZoneIdDataFactoryPortal": {
                      "type": "string"
                    },
                    "purviewId": {
                      "type": "string"
                    },
                    "storageRawId": {
                      "type": "string"
                    },
                    "storageEnrichedCuratedId": {
                      "type": "string"
                    },
                    "databricks001Id": {
                      "type": "string"
                    },
                    "databricks001WorkspaceUrl": {
                      "type": "string"
                    },
                    "keyVault001Id": {
                      "type": "string"
                    },
                    "sqlServer001Id": {
                      "type": "string"
                    },
                    "sqlDatabase001Name": {
                      "type": "string"
                    }
                  },
                  "functions": [],
                  "variables": {
                    "storageRawName": "[last(split(parameters('storageRawId'), '/'))]",
                    "storageEnrichedCuratedName": "[last(split(parameters('storageEnrichedCuratedId'), '/'))]",
                    "databricks001Name": "[last(split(parameters('databricks001Id'), '/'))]",
                    "keyVault001Name": "[last(split(parameters('keyVault001Id'), '/'))]",
                    "sqlServer001Name": "[last(split(parameters('sqlServer001Id'), '/'))]",
                    "datafactoryDefaultManagedVnetIntegrationRuntimeName": "AutoResolveIntegrationRuntime",
                    "datafactoryPrivateEndpointNameDatafactory": "[format('{0}-datafactory-private-endpoint', parameters('datafactoryName'))]",
                    "datafactoryPrivateEndpointNamePortal": "[format('{0}-portal-private-endpoint', parameters('datafactoryName'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.DataFactory/factories",
                      "apiVersion": "2018-06-01",
                      "name": "[parameters('datafactoryName')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "identity": {
                        "type": "SystemAssigned"
                      },
                      "properties": {
                        "globalParameters": {},
                        "publicNetworkAccess": "Disabled",
                        "purviewConfiguration": {
                          "purviewResourceId": "[parameters('purviewId')]"
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2020-11-01",
                      "name": "[variables('datafactoryPrivateEndpointNameDatafactory')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "manualPrivateLinkServiceConnections": [],
                        "privateLinkServiceConnections": [
                          {
                            "name": "[variables('datafactoryPrivateEndpointNameDatafactory')]",
                            "properties": {
                              "groupIds": [
                                "dataFactory"
                              ],
                              "privateLinkServiceId": "[resourceId('Microsoft.DataFactory/factories', parameters('datafactoryName'))]",
                              "requestMessage": ""
                            }
                          }
                        ],
                        "subnet": {
                          "id": "[parameters('subnetId')]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.DataFactory/factories', parameters('datafactoryName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2020-11-01",
                      "name": "[format('{0}/{1}', variables('datafactoryPrivateEndpointNameDatafactory'), 'aRecord')]",
                      "properties": {
                        "privateDnsZoneConfigs": [
                          {
                            "name": "[format('{0}-arecord', variables('datafactoryPrivateEndpointNameDatafactory'))]",
                            "properties": {
                              "privateDnsZoneId": "[parameters('privateDnsZoneIdDataFactory')]"
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', variables('datafactoryPrivateEndpointNameDatafactory'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2020-11-01",
                      "name": "[variables('datafactoryPrivateEndpointNamePortal')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "manualPrivateLinkServiceConnections": [],
                        "privateLinkServiceConnections": [
                          {
                            "name": "[variables('datafactoryPrivateEndpointNamePortal')]",
                            "properties": {
                              "groupIds": [
                                "portal"
                              ],
                              "privateLinkServiceId": "[resourceId('Microsoft.DataFactory/factories', parameters('datafactoryName'))]",
                              "requestMessage": ""
                            }
                          }
                        ],
                        "subnet": {
                          "id": "[parameters('subnetId')]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.DataFactory/factories', parameters('datafactoryName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2020-11-01",
                      "name": "[format('{0}/{1}', variables('datafactoryPrivateEndpointNamePortal'), 'aRecord')]",
                      "properties": {
                        "privateDnsZoneConfigs": [
                          {
                            "name": "[format('{0}-arecord', variables('datafactoryPrivateEndpointNamePortal'))]",
                            "properties": {
                              "privateDnsZoneId": "[parameters('privateDnsZoneIdDataFactoryPortal')]"
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', variables('datafactoryPrivateEndpointNamePortal'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.DataFactory/factories/managedVirtualNetworks",
                      "apiVersion": "2018-06-01",
                      "name": "[format('{0}/{1}', parameters('datafactoryName'), 'default')]",
                      "properties": {},
                      "dependsOn": [
                        "[resourceId('Microsoft.DataFactory/factories', parameters('datafactoryName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.DataFactory/factories/integrationRuntimes",
                      "apiVersion": "2018-06-01",
                      "name": "[format('{0}/{1}', parameters('datafactoryName'), variables('datafactoryDefaultManagedVnetIntegrationRuntimeName'))]",
                      "properties": {
                        "type": "Managed",
                        "managedVirtualNetwork": {
                          "type": "ManagedVirtualNetworkReference",
                          "referenceName": "default"
                        },
                        "typeProperties": {
                          "computeProperties": {
                            "location": "AutoResolve"
                          }
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.DataFactory/factories', parameters('datafactoryName'))]",
                        "[resourceId('Microsoft.DataFactory/factories/managedVirtualNetworks', parameters('datafactoryName'), 'default')]"
                      ]
                    },
                    {
                      "type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
                      "apiVersion": "2018-06-01",
                      "name": "[format('{0}/{1}/{2}', parameters('datafactoryName'), 'default', replace(variables('keyVault001Name'), '-', ''))]",
                      "properties": {
                        "fqdns": [],
                        "groupId": "vault",
                        "privateLinkResourceId": "[parameters('keyVault001Id')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.DataFactory/factories', parameters('datafactoryName'))]",
                        "[resourceId('Microsoft.DataFactory/factories/managedVirtualNetworks', parameters('datafactoryName'), 'default')]"
                      ]
                    },
                    {
                      "type": "Microsoft.DataFactory/factories/linkedservices",
                      "apiVersion": "2018-06-01",
                      "name": "[format('{0}/{1}', parameters('datafactoryName'), replace(variables('keyVault001Name'), '-', ''))]",
                      "properties": {
                        "type": "AzureKeyVault",
                        "annotations": [],
                        "connectVia": {
                          "type": "IntegrationRuntimeReference",
                          "referenceName": "[variables('datafactoryDefaultManagedVnetIntegrationRuntimeName')]",
                          "parameters": {}
                        },
                        "description": "Key Vault for storing secrets",
                        "parameters": {},
                        "typeProperties": {
                          "baseUrl": "[format('https://{0}{1}/', variables('keyVault001Name'), environment().suffixes.keyvaultDns)]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.DataFactory/factories', parameters('datafactoryName'))]",
                        "[resourceId('Microsoft.DataFactory/factories/integrationRuntimes', parameters('datafactoryName'), variables('datafactoryDefaultManagedVnetIntegrationRuntimeName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
                      "apiVersion": "2018-06-01",
                      "name": "[format('{0}/{1}/{2}', parameters('datafactoryName'), 'default', replace(variables('sqlServer001Name'), '-', ''))]",
                      "properties": {
                        "fqdns": [],
                        "groupId": "sqlServer",
                        "privateLinkResourceId": "[parameters('sqlServer001Id')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.DataFactory/factories', parameters('datafactoryName'))]",
                        "[resourceId('Microsoft.DataFactory/factories/managedVirtualNetworks', parameters('datafactoryName'), 'default')]"
                      ]
                    },
                    {
                      "type": "Microsoft.DataFactory/factories/linkedservices",
                      "apiVersion": "2018-06-01",
                      "name": "[format('{0}/{1}', parameters('datafactoryName'), format('{0}{1}', replace(variables('sqlServer001Name'), '-', ''), replace(parameters('sqlDatabase001Name'), '-', '')))]",
                      "properties": {
                        "type": "AzureSqlDatabase",
                        "annotations": [],
                        "connectVia": {
                          "type": "IntegrationRuntimeReference",
                          "referenceName": "[variables('datafactoryDefaultManagedVnetIntegrationRuntimeName')]",
                          "parameters": {}
                        },
                        "description": "Sql Database for storing metadata",
                        "parameters": {},
                        "typeProperties": {
                          "connectionString": "[format('Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source={0}{1};Initial Catalog={2}', variables('sqlServer001Name'), environment().suffixes.sqlServerHostname, parameters('sqlDatabase001Name'))]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.DataFactory/factories', parameters('datafactoryName'))]",
                        "[resourceId('Microsoft.DataFactory/factories/integrationRuntimes', parameters('datafactoryName'), variables('datafactoryDefaultManagedVnetIntegrationRuntimeName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
                      "apiVersion": "2018-06-01",
                      "name": "[format('{0}/{1}/{2}', parameters('datafactoryName'), 'default', variables('storageRawName'))]",
                      "properties": {
                        "fqdns": [],
                        "groupId": "dfs",
                        "privateLinkResourceId": "[parameters('storageRawId')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.DataFactory/factories', parameters('datafactoryName'))]",
                        "[resourceId('Microsoft.DataFactory/factories/managedVirtualNetworks', parameters('datafactoryName'), 'default')]"
                      ]
                    },
                    {
                      "type": "Microsoft.DataFactory/factories/linkedservices",
                      "apiVersion": "2018-06-01",
                      "name": "[format('{0}/{1}', parameters('datafactoryName'), variables('storageRawName'))]",
                      "properties": {
                        "type": "AzureBlobFS",
                        "annotations": [],
                        "connectVia": {
                          "type": "IntegrationRuntimeReference",
                          "referenceName": "[variables('datafactoryDefaultManagedVnetIntegrationRuntimeName')]",
                          "parameters": {}
                        },
                        "description": "Storage Account for raw data",
                        "parameters": {},
                        "typeProperties": {
                          "url": "[format('https://{0}.dfs.{1}', variables('storageRawName'), environment().suffixes.storage)]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.DataFactory/factories', parameters('datafactoryName'))]",
                        "[resourceId('Microsoft.DataFactory/factories/integrationRuntimes', parameters('datafactoryName'), variables('datafactoryDefaultManagedVnetIntegrationRuntimeName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
                      "apiVersion": "2018-06-01",
                      "name": "[format('{0}/{1}/{2}', parameters('datafactoryName'), 'default', variables('storageEnrichedCuratedName'))]",
                      "properties": {
                        "fqdns": [],
                        "groupId": "dfs",
                        "privateLinkResourceId": "[parameters('storageEnrichedCuratedId')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.DataFactory/factories', parameters('datafactoryName'))]",
                        "[resourceId('Microsoft.DataFactory/factories/managedVirtualNetworks', parameters('datafactoryName'), 'default')]"
                      ]
                    },
                    {
                      "type": "Microsoft.DataFactory/factories/linkedservices",
                      "apiVersion": "2018-06-01",
                      "name": "[format('{0}/{1}', parameters('datafactoryName'), variables('storageEnrichedCuratedName'))]",
                      "properties": {
                        "type": "AzureBlobFS",
                        "annotations": [],
                        "connectVia": {
                          "type": "IntegrationRuntimeReference",
                          "referenceName": "[variables('datafactoryDefaultManagedVnetIntegrationRuntimeName')]",
                          "parameters": {}
                        },
                        "description": "Storage Account for raw data",
                        "parameters": {},
                        "typeProperties": {
                          "url": "[format('https://{0}.dfs.{1}', variables('storageEnrichedCuratedName'), environment().suffixes.storage)]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.DataFactory/factories', parameters('datafactoryName'))]",
                        "[resourceId('Microsoft.DataFactory/factories/integrationRuntimes', parameters('datafactoryName'), variables('datafactoryDefaultManagedVnetIntegrationRuntimeName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.DataFactory/factories/linkedservices",
                      "apiVersion": "2018-06-01",
                      "name": "[format('{0}/{1}', parameters('datafactoryName'), replace(variables('databricks001Name'), '-', ''))]",
                      "properties": {
                        "type": "AzureDatabricks",
                        "annotations": [],
                        "connectVia": {
                          "type": "IntegrationRuntimeReference",
                          "referenceName": "[variables('datafactoryDefaultManagedVnetIntegrationRuntimeName')]",
                          "parameters": {}
                        },
                        "description": "Azure Databricks Compute for Data Engineering",
                        "parameters": {
                          "DatabricksClusterType": {
                            "type": "String",
                            "defaultValue": "Standard_DS3_v2"
                          },
                          "DatabricksAutoscale": {
                            "type": "String",
                            "defaultValue": "1:15"
                          },
                          "DatabrickClusterVersion": {
                            "type": "String",
                            "defaultValue": "7.3.x-scala2.12"
                          }
                        },
                        "typeProperties": {
                          "authentication": "MSI",
                          "domain": "[format('https://{0}', parameters('databricks001WorkspaceUrl'))]",
                          "newClusterCustomTags": {
                            "costCenter": "ABCDE-12345"
                          },
                          "newClusterDriverNodeType": "@linkedService().DatabricksClusterType",
                          "newClusterNodeType": "@linkedService().DatabricksClusterType",
                          "newClusterNumOfWorker": "@linkedService().DatabricksAutoscale",
                          "newClusterSparkEnvVars": {
                            "PYSPARK_PYTHON": "/databricks/python3/bin/python3"
                          },
                          "newClusterVersion": "@linkedService().DatabrickClusterVersion",
                          "workspaceResourceId": "[parameters('databricks001Id')]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.DataFactory/factories', parameters('datafactoryName'))]",
                        "[resourceId('Microsoft.DataFactory/factories/integrationRuntimes', parameters('datafactoryName'), variables('datafactoryDefaultManagedVnetIntegrationRuntimeName'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "datafactoryId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.DataFactory/factories', parameters('datafactoryName'))]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'databricksDomain001')]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2019-10-01",
              "name": "datafactory001StorageRawRoleAssignment",
              "subscriptionId": "[variables('storageAccountRawSubscriptionId')]",
              "resourceGroup": "[variables('storageAccountRawResourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "datafactoryId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'datafactoryDomain001'), '2019-10-01').outputs.datafactoryId.value]"
                  },
                  "storageAccountFileSystemId": {
                    "value": "[parameters('storageAccountRawFileSystemId')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1.14562",
                      "templateHash": "16848691429098486424"
                    }
                  },
                  "parameters": {
                    "storageAccountFileSystemId": {
                      "type": "string"
                    },
                    "datafactoryId": {
                      "type": "string"
                    }
                  },
                  "functions": [],
                  "variables": {
                    "storageAccountFileSystemName": "[last(split(parameters('storageAccountFileSystemId'), '/'))]",
                    "storageAccountName": "[split(parameters('storageAccountFileSystemId'), '/')[8]]",
                    "datafactorySubscriptionId": "[split(parameters('datafactoryId'), '/')[2]]",
                    "datafactoryResourceGroupName": "[split(parameters('datafactoryId'), '/')[4]]",
                    "datafactoryName": "[last(split(parameters('datafactoryId'), '/'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2020-04-01-preview",
                      "scope": "[format('Microsoft.Storage/storageAccounts/{0}/blobServices/{1}/containers/{2}', split(format('{0}/default/{1}', variables('storageAccountName'), variables('storageAccountFileSystemName')), '/')[0], split(format('{0}/default/{1}', variables('storageAccountName'), variables('storageAccountFileSystemName')), '/')[1], split(format('{0}/default/{1}', variables('storageAccountName'), variables('storageAccountFileSystemName')), '/')[2])]",
                      "name": "[guid(uniqueString(resourceId('Microsoft.Storage/storageAccounts/blobServices/containers', split(format('{0}/default/{1}', variables('storageAccountName'), variables('storageAccountFileSystemName')), '/')[0], split(format('{0}/default/{1}', variables('storageAccountName'), variables('storageAccountFileSystemName')), '/')[1], split(format('{0}/default/{1}', variables('storageAccountName'), variables('storageAccountFileSystemName')), '/')[2]), extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', variables('datafactorySubscriptionId'), variables('datafactoryResourceGroupName')), 'Microsoft.DataFactory/factories', variables('datafactoryName'))))]",
                      "properties": {
                        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]",
                        "principalId": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', variables('datafactorySubscriptionId'), variables('datafactoryResourceGroupName')), 'Microsoft.DataFactory/factories', variables('datafactoryName')), '2018-06-01', 'full').identity.principalId]",
                        "principalType": "ServicePrincipal"
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'datafactoryDomain001')]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2019-10-01",
              "name": "datafactory001StorageEnrichedCuratedRoleAssignment",
              "subscriptionId": "[variables('storageAccountEnrichedCuratedSubscriptionId')]",
              "resourceGroup": "[variables('storageAccountEnrichedCuratedResourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "datafactoryId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'datafactoryDomain001'), '2019-10-01').outputs.datafactoryId.value]"
                  },
                  "storageAccountFileSystemId": {
                    "value": "[parameters('storageAccountEnrichedCuratedFileSystemId')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1.14562",
                      "templateHash": "16848691429098486424"
                    }
                  },
                  "parameters": {
                    "storageAccountFileSystemId": {
                      "type": "string"
                    },
                    "datafactoryId": {
                      "type": "string"
                    }
                  },
                  "functions": [],
                  "variables": {
                    "storageAccountFileSystemName": "[last(split(parameters('storageAccountFileSystemId'), '/'))]",
                    "storageAccountName": "[split(parameters('storageAccountFileSystemId'), '/')[8]]",
                    "datafactorySubscriptionId": "[split(parameters('datafactoryId'), '/')[2]]",
                    "datafactoryResourceGroupName": "[split(parameters('datafactoryId'), '/')[4]]",
                    "datafactoryName": "[last(split(parameters('datafactoryId'), '/'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2020-04-01-preview",
                      "scope": "[format('Microsoft.Storage/storageAccounts/{0}/blobServices/{1}/containers/{2}', split(format('{0}/default/{1}', variables('storageAccountName'), variables('storageAccountFileSystemName')), '/')[0], split(format('{0}/default/{1}', variables('storageAccountName'), variables('storageAccountFileSystemName')), '/')[1], split(format('{0}/default/{1}', variables('storageAccountName'), variables('storageAccountFileSystemName')), '/')[2])]",
                      "name": "[guid(uniqueString(resourceId('Microsoft.Storage/storageAccounts/blobServices/containers', split(format('{0}/default/{1}', variables('storageAccountName'), variables('storageAccountFileSystemName')), '/')[0], split(format('{0}/default/{1}', variables('storageAccountName'), variables('storageAccountFileSystemName')), '/')[1], split(format('{0}/default/{1}', variables('storageAccountName'), variables('storageAccountFileSystemName')), '/')[2]), extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', variables('datafactorySubscriptionId'), variables('datafactoryResourceGroupName')), 'Microsoft.DataFactory/factories', variables('datafactoryName'))))]",
                      "properties": {
                        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]",
                        "principalId": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', variables('datafactorySubscriptionId'), variables('datafactoryResourceGroupName')), 'Microsoft.DataFactory/factories', variables('datafactoryName')), '2018-06-01', 'full').identity.principalId]",
                        "principalType": "ServicePrincipal"
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'datafactoryDomain001')]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2019-10-01",
              "name": "datafactory001DatabricksRoleAssignment",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "datafactoryId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'datafactoryDomain001'), '2019-10-01').outputs.datafactoryId.value]"
                  },
                  "databricksId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'databricksDomain001'), '2019-10-01').outputs.databricksId.value]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1.14562",
                      "templateHash": "3170349211861953845"
                    }
                  },
                  "parameters": {
                    "databricksId": {
                      "type": "string"
                    },
                    "datafactoryId": {
                      "type": "string"
                    }
                  },
                  "functions": [],
                  "variables": {
                    "databricksName": "[last(split(parameters('databricksId'), '/'))]",
                    "datafactorySubscriptionId": "[split(parameters('datafactoryId'), '/')[2]]",
                    "datafactoryResourceGroupName": "[split(parameters('datafactoryId'), '/')[4]]",
                    "datafactoryName": "[last(split(parameters('datafactoryId'), '/'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2020-04-01-preview",
                      "scope": "[format('Microsoft.Databricks/workspaces/{0}', variables('databricksName'))]",
                      "name": "[guid(uniqueString(resourceId('Microsoft.Databricks/workspaces', variables('databricksName')), extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', variables('datafactorySubscriptionId'), variables('datafactoryResourceGroupName')), 'Microsoft.DataFactory/factories', variables('datafactoryName'))))]",
                      "properties": {
                        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
                        "principalId": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', variables('datafactorySubscriptionId'), variables('datafactoryResourceGroupName')), 'Microsoft.DataFactory/factories', variables('datafactoryName')), '2018-06-01', 'full').identity.principalId]",
                        "principalType": "ServicePrincipal"
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'databricksDomain001')]",
                "[resourceId('Microsoft.Resources/deployments', 'datafactoryDomain001')]"
              ]
            }
          ],
          "outputs": {
            "datafactoryDomain001Id": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'datafactoryDomain001'), '2019-10-01').outputs.datafactoryId.value]"
            },
            "databricksDomain001Id": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'databricksDomain001'), '2019-10-01').outputs.databricksId.value]"
            },
            "databricksDomain001ApiUrl": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'databricksDomain001'), '2019-10-01').outputs.databricksApiUrl.value]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-metadata', variables('name'))), 'Microsoft.Resources/deployments', 'metadataServices')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-network', variables('name'))), 'Microsoft.Resources/deployments', 'networkServices')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('{0}-shared-domain', variables('name')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-storage', variables('name'))), 'Microsoft.Resources/deployments', 'storageServices')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "sharedProductServices",
      "resourceGroup": "[format('{0}-shared-product', variables('name'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "prefix": {
            "value": "[variables('name')]"
          },
          "tags": {
            "value": "[variables('tags')]"
          },
          "subnetId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-network', variables('name'))), 'Microsoft.Resources/deployments', 'networkServices'), '2019-10-01').outputs.servicesSubnetId.value]"
          },
          "vnetId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-network', variables('name'))), 'Microsoft.Resources/deployments', 'networkServices'), '2019-10-01').outputs.vnetId.value]"
          },
          "databricksProduct001PrivateSubnetName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-network', variables('name'))), 'Microsoft.Resources/deployments', 'networkServices'), '2019-10-01').outputs.databricksProductPrivateSubnetName.value]"
          },
          "databricksProduct001PublicSubnetName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-network', variables('name'))), 'Microsoft.Resources/deployments', 'networkServices'), '2019-10-01').outputs.databricksProductPublicSubnetName.value]"
          },
          "administratorUsername": {
            "value": "[variables('administratorUsername')]"
          },
          "administratorPassword": {
            "value": "[parameters('administratorPassword')]"
          },
          "synapseProduct001DefaultStorageAccountFileSystemId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-storage', variables('name'))), 'Microsoft.Resources/deployments', 'storageServices'), '2019-10-01').outputs.storageWorkspaceFileSystemId.value]"
          },
          "synapseSqlAdminGroupName": {
            "value": ""
          },
          "synapseSqlAdminGroupObjectID": {
            "value": ""
          },
          "synapseProduct001ComputeSubnetId": {
            "value": ""
          },
          "purviewId": {
            "value": "[parameters('purviewId')]"
          },
          "privateDnsZoneIdSynapseDev": {
            "value": "[parameters('privateDnsZoneIdSynapseDev')]"
          },
          "privateDnsZoneIdSynapseSql": {
            "value": "[parameters('privateDnsZoneIdSynapseSql')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1.14562",
              "templateHash": "17180381478031883609"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "prefix": {
              "type": "string"
            },
            "tags": {
              "type": "object"
            },
            "administratorUsername": {
              "type": "string",
              "defaultValue": "SqlServerMainUser"
            },
            "administratorPassword": {
              "type": "secureString"
            },
            "synapseSqlAdminGroupName": {
              "type": "string"
            },
            "synapseSqlAdminGroupObjectID": {
              "type": "string"
            },
            "synapseProduct001DefaultStorageAccountFileSystemId": {
              "type": "string"
            },
            "synapseProduct001ComputeSubnetId": {
              "type": "string"
            },
            "privateDnsZoneIdSynapseSql": {
              "type": "string"
            },
            "privateDnsZoneIdSynapseDev": {
              "type": "string"
            },
            "vnetId": {
              "type": "string"
            },
            "databricksProduct001PrivateSubnetName": {
              "type": "string"
            },
            "databricksProduct001PublicSubnetName": {
              "type": "string"
            },
            "subnetId": {
              "type": "string"
            },
            "purviewId": {
              "type": "string"
            }
          },
          "functions": [],
          "variables": {
            "synapseProduct001DefaultStorageAccountSubscriptionId": "[split(parameters('synapseProduct001DefaultStorageAccountFileSystemId'), '/')[2]]",
            "synapseProduct001DefaultStorageAccountResourceGroupName": "[split(parameters('synapseProduct001DefaultStorageAccountFileSystemId'), '/')[4]]",
            "databricksProduct001Name": "[format('{0}-product-databricks001', parameters('prefix'))]",
            "synapseProduct001Name": "[format('{0}-product-synapse001', parameters('prefix'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2019-10-01",
              "name": "databricksProduct001",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "databricksName": {
                    "value": "[variables('databricksProduct001Name')]"
                  },
                  "privateSubnetName": {
                    "value": "[parameters('databricksProduct001PrivateSubnetName')]"
                  },
                  "publicSubnetName": {
                    "value": "[parameters('databricksProduct001PublicSubnetName')]"
                  },
                  "vnetId": {
                    "value": "[parameters('vnetId')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1.14562",
                      "templateHash": "15600877305649937658"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "object"
                    },
                    "databricksName": {
                      "type": "string"
                    },
                    "vnetId": {
                      "type": "string"
                    },
                    "privateSubnetName": {
                      "type": "string"
                    },
                    "publicSubnetName": {
                      "type": "string"
                    }
                  },
                  "functions": [],
                  "resources": [
                    {
                      "type": "Microsoft.Databricks/workspaces",
                      "apiVersion": "2018-04-01",
                      "name": "[parameters('databricksName')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "sku": {
                        "name": "premium"
                      },
                      "properties": {
                        "managedResourceGroupId": "[format('{0}/resourceGroups/{1}-rg', subscription().id, parameters('databricksName'))]",
                        "parameters": {
                          "customVirtualNetworkId": {
                            "value": "[parameters('vnetId')]"
                          },
                          "customPrivateSubnetName": {
                            "value": "[parameters('privateSubnetName')]"
                          },
                          "customPublicSubnetName": {
                            "value": "[parameters('publicSubnetName')]"
                          },
                          "enableNoPublicIp": {
                            "value": true
                          },
                          "prepareEncryption": {
                            "value": true
                          },
                          "requireInfrastructureEncryption": {
                            "value": false
                          }
                        }
                      }
                    }
                  ],
                  "outputs": {
                    "databricksId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Databricks/workspaces', parameters('databricksName'))]"
                    },
                    "databricksWorkspaceUrl": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Databricks/workspaces', parameters('databricksName'))).workspaceUrl]"
                    },
                    "databricksApiUrl": {
                      "type": "string",
                      "value": "[format('https://{0}.azuredatabricks.net', parameters('location'))]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2019-10-01",
              "name": "synapseProduct001",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "subnetId": {
                    "value": "[parameters('subnetId')]"
                  },
                  "synapseName": {
                    "value": "[variables('synapseProduct001Name')]"
                  },
                  "administratorUsername": {
                    "value": "[parameters('administratorUsername')]"
                  },
                  "administratorPassword": {
                    "value": "[parameters('administratorPassword')]"
                  },
                  "synapseSqlAdminGroupName": {
                    "value": "[parameters('synapseSqlAdminGroupName')]"
                  },
                  "synapseSqlAdminGroupObjectID": {
                    "value": "[parameters('synapseSqlAdminGroupObjectID')]"
                  },
                  "synapseDefaultStorageAccountFileSystemId": {
                    "value": "[parameters('synapseProduct001DefaultStorageAccountFileSystemId')]"
                  },
                  "synapseComputeSubnetId": {
                    "value": "[parameters('synapseProduct001ComputeSubnetId')]"
                  },
                  "privateDnsZoneIdSynapseDev": {
                    "value": "[parameters('privateDnsZoneIdSynapseDev')]"
                  },
                  "privateDnsZoneIdSynapseSql": {
                    "value": "[parameters('privateDnsZoneIdSynapseSql')]"
                  },
                  "purviewId": {
                    "value": "[parameters('purviewId')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1.14562",
                      "templateHash": "9726627610024057974"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "object"
                    },
                    "subnetId": {
                      "type": "string"
                    },
                    "synapseName": {
                      "type": "string"
                    },
                    "administratorUsername": {
                      "type": "string",
                      "defaultValue": "SqlServerMainUser"
                    },
                    "administratorPassword": {
                      "type": "secureString"
                    },
                    "synapseSqlAdminGroupName": {
                      "type": "string"
                    },
                    "synapseSqlAdminGroupObjectID": {
                      "type": "string"
                    },
                    "synapseDefaultStorageAccountFileSystemId": {
                      "type": "string"
                    },
                    "synapseComputeSubnetId": {
                      "type": "string"
                    },
                    "privateDnsZoneIdSynapseSql": {
                      "type": "string"
                    },
                    "privateDnsZoneIdSynapseDev": {
                      "type": "string"
                    },
                    "purviewId": {
                      "type": "string"
                    }
                  },
                  "functions": [],
                  "variables": {
                    "synapseDefaultStorageAccountFileSystemName": "[last(split(parameters('synapseDefaultStorageAccountFileSystemId'), '/'))]",
                    "synapseDefaultStorageAccountName": "[split(parameters('synapseDefaultStorageAccountFileSystemId'), '/')[7]]",
                    "synapsePrivateEndpointNameSql": "[format('{0}-sql-private-endpoint', parameters('synapseName'))]",
                    "synapsePrivateEndpointNameSqlOnDemand": "[format('{0}-sqlondemand-private-endpoint', parameters('synapseName'))]",
                    "synapsePrivateEndpointNameDev": "[format('{0}-dev-private-endpoint', parameters('synapseName'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Synapse/workspaces",
                      "apiVersion": "2021-03-01",
                      "name": "[parameters('synapseName')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "identity": {
                        "type": "SystemAssigned"
                      },
                      "properties": {
                        "defaultDataLakeStorage": {
                          "accountUrl": "[format('https://{0}.dfs.{1}', variables('synapseDefaultStorageAccountName'), environment().suffixes.storage)]",
                          "filesystem": "[variables('synapseDefaultStorageAccountFileSystemName')]"
                        },
                        "managedResourceGroupName": "[parameters('synapseName')]",
                        "managedVirtualNetwork": "default",
                        "managedVirtualNetworkSettings": {
                          "allowedAadTenantIdsForLinking": [],
                          "linkedAccessCheckOnTargetResource": true,
                          "preventDataExfiltration": true
                        },
                        "publicNetworkAccess": "Disabled",
                        "purviewConfiguration": {
                          "purviewResourceId": "[parameters('purviewId')]"
                        },
                        "sqlAdministratorLogin": "[parameters('administratorUsername')]",
                        "sqlAdministratorLoginPassword": "[parameters('administratorPassword')]",
                        "virtualNetworkProfile": {
                          "computeSubnetId": "[parameters('synapseComputeSubnetId')]"
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Synapse/workspaces/sqlPools",
                      "apiVersion": "2021-03-01",
                      "name": "[format('{0}/{1}', parameters('synapseName'), 'sqlPool001')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "sku": {
                        "name": "DW100c"
                      },
                      "properties": {
                        "collation": "SQL_Latin1_General_CP1_CI_AS",
                        "createMode": "Default",
                        "storageAccountType": "GRS"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Synapse/workspaces', parameters('synapseName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Synapse/workspaces/bigDataPools",
                      "apiVersion": "2021-03-01",
                      "name": "[format('{0}/{1}', parameters('synapseName'), 'bigDataPool001')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "autoPause": {
                          "enabled": true,
                          "delayInMinutes": 15
                        },
                        "autoScale": {
                          "enabled": true,
                          "maxNodeCount": 10,
                          "minNodeCount": 3
                        },
                        "customLibraries": [],
                        "defaultSparkLogFolder": "logs/",
                        "dynamicExecutorAllocation": {
                          "enabled": true
                        },
                        "nodeSize": "Small",
                        "nodeSizeFamily": "MemoryOptimized",
                        "sessionLevelPackagesEnabled": true,
                        "sparkEventsFolder": "events/",
                        "sparkVersion": "3.0"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Synapse/workspaces', parameters('synapseName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Synapse/workspaces/managedIdentitySqlControlSettings",
                      "apiVersion": "2021-03-01",
                      "name": "[format('{0}/{1}', parameters('synapseName'), 'default')]",
                      "properties": {
                        "grantSqlControlToManagedIdentity": {
                          "desiredState": "Enabled"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Synapse/workspaces', parameters('synapseName'))]"
                      ]
                    },
                    {
                      "condition": "[and(not(equals(parameters('synapseSqlAdminGroupName'), '')), not(equals(parameters('synapseSqlAdminGroupObjectID'), '')))]",
                      "type": "Microsoft.Synapse/workspaces/administrators",
                      "apiVersion": "2021-03-01",
                      "name": "[format('{0}/{1}', parameters('synapseName'), 'activeDirectory')]",
                      "properties": {
                        "administratorType": "ActiveDirectory",
                        "login": "[parameters('synapseSqlAdminGroupName')]",
                        "sid": "[parameters('synapseSqlAdminGroupObjectID')]",
                        "tenantId": "[subscription().tenantId]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Synapse/workspaces', parameters('synapseName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2020-11-01",
                      "name": "[variables('synapsePrivateEndpointNameSql')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "manualPrivateLinkServiceConnections": [],
                        "privateLinkServiceConnections": [
                          {
                            "name": "[variables('synapsePrivateEndpointNameSql')]",
                            "properties": {
                              "groupIds": [
                                "Sql"
                              ],
                              "privateLinkServiceId": "[resourceId('Microsoft.Synapse/workspaces', parameters('synapseName'))]",
                              "requestMessage": ""
                            }
                          }
                        ],
                        "subnet": {
                          "id": "[parameters('subnetId')]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Synapse/workspaces', parameters('synapseName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2020-11-01",
                      "name": "[format('{0}/{1}', variables('synapsePrivateEndpointNameSql'), 'aRecord')]",
                      "properties": {
                        "privateDnsZoneConfigs": [
                          {
                            "name": "[format('{0}-arecord', variables('synapsePrivateEndpointNameSql'))]",
                            "properties": {
                              "privateDnsZoneId": "[parameters('privateDnsZoneIdSynapseSql')]"
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', variables('synapsePrivateEndpointNameSql'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2020-11-01",
                      "name": "[variables('synapsePrivateEndpointNameSqlOnDemand')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "manualPrivateLinkServiceConnections": [],
                        "privateLinkServiceConnections": [
                          {
                            "name": "[variables('synapsePrivateEndpointNameSqlOnDemand')]",
                            "properties": {
                              "groupIds": [
                                "SqlOnDemand"
                              ],
                              "privateLinkServiceId": "[resourceId('Microsoft.Synapse/workspaces', parameters('synapseName'))]",
                              "requestMessage": ""
                            }
                          }
                        ],
                        "subnet": {
                          "id": "[parameters('subnetId')]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Synapse/workspaces', parameters('synapseName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2020-11-01",
                      "name": "[format('{0}/{1}', variables('synapsePrivateEndpointNameSqlOnDemand'), 'aRecord')]",
                      "properties": {
                        "privateDnsZoneConfigs": [
                          {
                            "name": "[format('{0}-arecord', variables('synapsePrivateEndpointNameSqlOnDemand'))]",
                            "properties": {
                              "privateDnsZoneId": "[parameters('privateDnsZoneIdSynapseSql')]"
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', variables('synapsePrivateEndpointNameSqlOnDemand'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2020-11-01",
                      "name": "[variables('synapsePrivateEndpointNameDev')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "manualPrivateLinkServiceConnections": [],
                        "privateLinkServiceConnections": [
                          {
                            "name": "[variables('synapsePrivateEndpointNameDev')]",
                            "properties": {
                              "groupIds": [
                                "Dev"
                              ],
                              "privateLinkServiceId": "[resourceId('Microsoft.Synapse/workspaces', parameters('synapseName'))]",
                              "requestMessage": ""
                            }
                          }
                        ],
                        "subnet": {
                          "id": "[parameters('subnetId')]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Synapse/workspaces', parameters('synapseName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                      "apiVersion": "2020-11-01",
                      "name": "[format('{0}/{1}', variables('synapsePrivateEndpointNameDev'), 'aRecord')]",
                      "properties": {
                        "privateDnsZoneConfigs": [
                          {
                            "name": "[format('{0}-arecord', variables('synapsePrivateEndpointNameDev'))]",
                            "properties": {
                              "privateDnsZoneId": "[parameters('privateDnsZoneIdSynapseDev')]"
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', variables('synapsePrivateEndpointNameDev'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "synapseId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Synapse/workspaces', parameters('synapseName'))]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2019-10-01",
              "name": "synapse001StorageRoleAssignment",
              "subscriptionId": "[variables('synapseProduct001DefaultStorageAccountSubscriptionId')]",
              "resourceGroup": "[variables('synapseProduct001DefaultStorageAccountResourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "storageAccountFileSystemId": {
                    "value": "[parameters('synapseProduct001DefaultStorageAccountFileSystemId')]"
                  },
                  "synapseId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'synapseProduct001'), '2019-10-01').outputs.synapseId.value]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1.14562",
                      "templateHash": "10336898227818705673"
                    }
                  },
                  "parameters": {
                    "storageAccountFileSystemId": {
                      "type": "string"
                    },
                    "synapseId": {
                      "type": "string"
                    }
                  },
                  "functions": [],
                  "variables": {
                    "storageAccountFileSystemName": "[last(split(parameters('storageAccountFileSystemId'), '/'))]",
                    "storageAccountName": "[split(parameters('storageAccountFileSystemId'), '/')[8]]",
                    "synapseSubscriptionId": "[split(parameters('synapseId'), '/')[2]]",
                    "synapseResourceGroupName": "[split(parameters('synapseId'), '/')[4]]",
                    "synapseName": "[last(split(parameters('synapseId'), '/'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2020-04-01-preview",
                      "scope": "[format('Microsoft.Storage/storageAccounts/{0}/blobServices/{1}/containers/{2}', split(format('{0}/default/{1}', variables('storageAccountName'), variables('storageAccountFileSystemName')), '/')[0], split(format('{0}/default/{1}', variables('storageAccountName'), variables('storageAccountFileSystemName')), '/')[1], split(format('{0}/default/{1}', variables('storageAccountName'), variables('storageAccountFileSystemName')), '/')[2])]",
                      "name": "[guid(uniqueString(resourceId('Microsoft.Storage/storageAccounts/blobServices/containers', split(format('{0}/default/{1}', variables('storageAccountName'), variables('storageAccountFileSystemName')), '/')[0], split(format('{0}/default/{1}', variables('storageAccountName'), variables('storageAccountFileSystemName')), '/')[1], split(format('{0}/default/{1}', variables('storageAccountName'), variables('storageAccountFileSystemName')), '/')[2]), extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', variables('synapseSubscriptionId'), variables('synapseResourceGroupName')), 'Microsoft.Synapse/workspaces', variables('synapseName'))))]",
                      "properties": {
                        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]",
                        "principalId": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', variables('synapseSubscriptionId'), variables('synapseResourceGroupName')), 'Microsoft.Synapse/workspaces', variables('synapseName')), '2021-03-01', 'full').identity.principalId]",
                        "principalType": "ServicePrincipal"
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'synapseProduct001')]"
              ]
            }
          ],
          "outputs": {
            "databricksProduct001Id": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'databricksProduct001'), '2019-10-01').outputs.databricksId.value]"
            },
            "databricksProduct001ApiUrl": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'databricksProduct001'), '2019-10-01').outputs.databricksApiUrl.value]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-network', variables('name'))), 'Microsoft.Resources/deployments', 'networkServices')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('{0}-shared-product', variables('name')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-storage', variables('name'))), 'Microsoft.Resources/deployments', 'storageServices')]"
      ]
    }
  ],
  "outputs": {
    "artifactstorage001ResourceGroupName": {
      "type": "string",
      "value": "[split(reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-integration', variables('name'))), 'Microsoft.Resources/deployments', 'integrationServices'), '2019-10-01').outputs.artifactstorage001Id.value, '/')[4]]"
    },
    "artifactstorage001Name": {
      "type": "string",
      "value": "[last(split(reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-integration', variables('name'))), 'Microsoft.Resources/deployments', 'integrationServices'), '2019-10-01').outputs.artifactstorage001Id.value, '/'))]"
    },
    "artifactstorage001ContainerName": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-integration', variables('name'))), 'Microsoft.Resources/deployments', 'integrationServices'), '2019-10-01').outputs.artifactstorage001ContainerName.value]"
    },
    "mySqlServer001SubscriptionId": {
      "type": "string",
      "value": "[split(reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-metadata', variables('name'))), 'Microsoft.Resources/deployments', 'metadataServices'), '2019-10-01').outputs.mySqlServer001Id.value, '/')[2]]"
    },
    "mySqlServer001ResourceGroupName": {
      "type": "string",
      "value": "[split(reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-metadata', variables('name'))), 'Microsoft.Resources/deployments', 'metadataServices'), '2019-10-01').outputs.mySqlServer001Id.value, '/')[4]]"
    },
    "mySqlServer001Name": {
      "type": "string",
      "value": "[last(split(reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-metadata', variables('name'))), 'Microsoft.Resources/deployments', 'metadataServices'), '2019-10-01').outputs.mySqlServer001Id.value, '/'))]"
    },
    "mySqlServer001KeyVaultid": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-metadata', variables('name'))), 'Microsoft.Resources/deployments', 'metadataServices'), '2019-10-01').outputs.keyVault001Id.value]"
    },
    "mySqlServer001UsernameSecretName": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-metadata', variables('name'))), 'Microsoft.Resources/deployments', 'metadataServices'), '2019-10-01').outputs.mySqlServer001UsernameSecretName.value]"
    },
    "mySqlServer001PasswordSecretName": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-metadata', variables('name'))), 'Microsoft.Resources/deployments', 'metadataServices'), '2019-10-01').outputs.mySqlServer001PasswordSecretName.value]"
    },
    "mySqlServer001ConnectionStringSecretName": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-metadata', variables('name'))), 'Microsoft.Resources/deployments', 'metadataServices'), '2019-10-01').outputs.mySqlServer001ConnectionStringSecretName.value]"
    },
    "logAnalyticsWorkspaceKeyVaultId": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-logging', variables('name'))), 'Microsoft.Resources/deployments', 'loggingServices'), '2019-10-01').outputs.logAnalytics001WorkspaceKeyVaultId.value]"
    },
    "logAnalyticsWorkspaceIdSecretName": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-logging', variables('name'))), 'Microsoft.Resources/deployments', 'loggingServices'), '2019-10-01').outputs.logAnalytics001WorkspaceIdSecretName.value]"
    },
    "logAnalyticsWorkspaceKeySecretName": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-logging', variables('name'))), 'Microsoft.Resources/deployments', 'loggingServices'), '2019-10-01').outputs.logAnalytics001WorkspaceKeySecretName.value]"
    },
    "databricksDomain001ApiUrl": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-shared-domain', variables('name'))), 'Microsoft.Resources/deployments', 'sharedDomainServices'), '2019-10-01').outputs.databricksDomain001ApiUrl.value]"
    },
    "databricksDomain001Id": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-shared-domain', variables('name'))), 'Microsoft.Resources/deployments', 'sharedDomainServices'), '2019-10-01').outputs.databricksDomain001Id.value]"
    },
    "databricksDomain001SubscriptionId": {
      "type": "string",
      "value": "[split(reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-shared-domain', variables('name'))), 'Microsoft.Resources/deployments', 'sharedDomainServices'), '2019-10-01').outputs.databricksDomain001Id.value, '/')[2]]"
    },
    "databricksDomain001ResourceGroupName": {
      "type": "string",
      "value": "[split(reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-shared-domain', variables('name'))), 'Microsoft.Resources/deployments', 'sharedDomainServices'), '2019-10-01').outputs.databricksDomain001Id.value, '/')[4]]"
    },
    "databricksDomain001Name": {
      "type": "string",
      "value": "[last(split(reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-shared-domain', variables('name'))), 'Microsoft.Resources/deployments', 'sharedDomainServices'), '2019-10-01').outputs.databricksDomain001Id.value, '/'))]"
    },
    "databricksProduct001ApiUrl": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-shared-product', variables('name'))), 'Microsoft.Resources/deployments', 'sharedProductServices'), '2019-10-01').outputs.databricksProduct001ApiUrl.value]"
    },
    "databricksProduct001Id": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-shared-product', variables('name'))), 'Microsoft.Resources/deployments', 'sharedProductServices'), '2019-10-01').outputs.databricksProduct001Id.value]"
    },
    "databricksProduct001SubscriptionId": {
      "type": "string",
      "value": "[split(reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-shared-product', variables('name'))), 'Microsoft.Resources/deployments', 'sharedProductServices'), '2019-10-01').outputs.databricksProduct001Id.value, '/')[2]]"
    },
    "databricksProduct001ResourceGroupName": {
      "type": "string",
      "value": "[split(reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-shared-product', variables('name'))), 'Microsoft.Resources/deployments', 'sharedProductServices'), '2019-10-01').outputs.databricksProduct001Id.value, '/')[4]]"
    },
    "databricksProduct001Name": {
      "type": "string",
      "value": "[last(split(reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}-shared-product', variables('name'))), 'Microsoft.Resources/deployments', 'sharedProductServices'), '2019-10-01').outputs.databricksProduct001Id.value, '/'))]"
    }
  }
}