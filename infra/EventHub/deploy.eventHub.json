{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "metadata": {
                "description": "Specifies the location for all resources."
            }
        },
        "eventHubName": {
            "type": "string",
            "metadata": {
                "description": "Specifies the name of the event hub."
            }
        },
        "eventHubSku": {
            "type": "string",
            "allowedValues": [
                "Basic",
                "Standard"
            ],
            "defaultValue": "Standard",
            "metadata": {
                "description": "Specifies the minimum throughput units of the event hub."
            }
        },
        "eventHubMinThroughputUnits": {
            "type": "int",
            "minValue": 1,
            "maxValue": 20,
            "defaultValue": 1,
            "metadata": {
                "description": "Specifies the minimum throughput units of the event hub."
            }
        },
        "eventHubMaxThroughputUnits": {
            "type": "int",
            "minValue": 1,
            "maxValue": 20,
            "defaultValue": 2,
            "metadata": {
                "description": "Specifies the maximum throughput units of the event hub."
            }
        },
        "keyVaultId": {
            "type": "string",
            "metadata": {
                "description": "Specifies the resource id of the key vault to store the storage access key."
            }
        },
        "subnetId": {
            "type": "string",
            "metadata": {
                "description": "Specifies the id of the subnet which the private endpoint uses."
            }
        },
        "privateDnsZoneId": {
            "type": "string",
            "metadata": {
                "description": "Specifies the ID of the private dns zone."
            }
        },
        "tags": {
            "type": "object",
            "defaultValue": {},
            "metadata": {
                "description": "Specifies tags which should be added to all resources."
            }
        }
    },
    "functions": [],
    "variables": {
        "location": "[parameters('location')]",
        "eventHubName": "[parameters('eventHubName')]",
        "eventHubSku": "[parameters('eventHubSku')]",
        "eventHubMinThroughputUnits": "[parameters('eventHubMinThroughputUnits')]",
        "eventHubMaxThroughputUnits": "[parameters('eventHubMaxThroughputUnits')]",
        "keyVaultId": "[parameters('keyVaultId')]",
        "keyVaultName": "[last(split(variables('keyVaultId'), '/'))]",
        "subnetId": "[parameters('subnetId')]",
        "privateDnsZoneId": "[parameters('privateDnsZoneId')]",
        "tags": "[parameters('tags')]",
        "privateEndpointName": "[concat(variables('eventHubName'), '-private-endpoint')]"
    },
    "resources": [
        {
            "type": "Microsoft.EventHub/namespaces",
            "apiVersion": "2018-01-01-preview",
            "name": "[variables('eventHubName')]",
            "tags": "[variables('tags')]",
            "location": "[variables('location')]",
            "sku": {
                "name": "[variables('eventHubSku')]",
                "tier": "[variables('eventHubSku')]",
                "capacity": "[variables('eventHubMinThroughputUnits')]"
            },
            "properties": {
                "isAutoInflateEnabled": true,
                "kafkaEnabled": true,
                "maximumThroughputUnits": "[variables('eventHubMaxThroughputUnits')]",
                "zoneRedundant": true
            },
            "resources": [
                // {  // Uncomment this to deploy an event hub in the event hub namespace
                //     "type": "eventhubs",
                //     "apiVersion": "2018-01-01-preview",
                //     "name": "default",
                //     "tags": "[variables('tags')]",
                //     "properties": {
                //         "messageRetentionInDays": 3,
                //         "partitionCount": 1,
                //         "status": "Deleting",
                //         "captureDescription": {
                //             "enabled": true,
                //             "encoding": "Avro",
                //             "intervalInSeconds": 900,
                //             "sizeLimitInBytes": 10485760,
                //             "destination": {
                //                 "name": "default",
                //                 "properties": {
                //                     "storageAccountResourceId": "",
                //                     "blobContainer": "",
                //                     "archiveNameFormat": ""
                //                 }
                //             },
                //             "skipEmptyArchives": true
                //         }
                //     }
                // }
            ]
        },
        {
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2020-05-01",
            "name": "[variables('privateEndpointName')]",
            "tags": "[variables('tags')]",
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', variables('eventHubName'))]"
            ],
            "location": "[variables('location')]",
            "properties": {
                "privateLinkServiceConnections": [
                    {
                        "name": "[variables('privateEndpointName')]",
                        "properties": {
                            "privateLinkServiceId": "[resourceId('Microsoft.EventHub/namespaces', variables('eventHubName'))]",
                            "groupIds": [
                                "namespace"
                            ]
                        }
                    }
                ],
                "manualPrivateLinkServiceConnections": [
                ],
                "subnet": {
                    "id": "[variables('subnetId')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
            "apiVersion": "2020-05-01",
            "name": "[concat(variables('privateEndpointName'), '/aRecord')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', variables('privateEndpointName'))]"
            ],
            "location": "[variables('location')]",
            "properties": {
                "privateDnsZoneConfigs": [
                    {
                        "name": "[concat(variables('privateEndpointName'), '-aRecord')]",
                        "properties": {
                            "privateDnsZoneId": "[variables('privateDnsZoneId')]"
                        }
                    }
                ]
            }
        },
        {
            "name": "EventHubSecretDeployment",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', variables('eventHubName'))]"
            ],
            "properties": {
                "expressionEvaluationOptions": {
                    "scope": "outer"
                },
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.KeyVault/vaults/secrets",
                            "name": "[concat(variables('keyVaultName'), '/eventHubNamespacePrimaryConnectionString')]",
                            "apiVersion": "2019-09-01",
                            "properties": {
                                "contentType": "text/plain",
                                "value": "[listkeys(resourceId('Microsoft.EventHub/namespaces/authorizationRules', variables('eventHubName'), 'RootManageSharedAccessKey'), '2017-04-01').primaryConnectionString]",
                                "attributes": {
                                    "enabled": true
                                }
                            }
                        }
                    ],
                    "outputs": {}
                }
            },
            "subscriptionId": "[split(variables('keyVaultId'), '/')[2]]",
            "resourceGroup": "[split(variables('keyVaultId'), '/')[4]]"
        }
    ],
    "outputs": {}
}