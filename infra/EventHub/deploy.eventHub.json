{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Specifies the location for all resources."
            }
        },
        "eventHubName": {
            "type": "string",
            "metadata": {
                "description": "Specifies the name of the event hub."
            }
        },
        "eventHubSku": {
            "type": "string",
            "allowedValues": [
                "Basic",
                "Standard"
            ],
            "defaultValue": "Standard",
            "metadata": {
                "description": "Specifies the minimum throughput units of the event hub."
            }
        },
        "eventHubMinThroughputUnits": {
            "type": "int",
            "minValue": 1,
            "maxValue": 20,
            "defaultValue": 1,
            "metadata": {
                "description": "Specifies the minimum throughput units of the event hub."
            }
        },
        "eventHubMaxThroughputUnits": {
            "type": "int",
            "minValue": 1,
            "maxValue": 20,
            "defaultValue": 2,
            "metadata": {
                "description": "Specifies the maximum throughput units of the event hub."
            }
        },
        "keyVaultId": {
            "type": "string",
            "metadata": {
                "description": "Specifies the resource id of the key vault to store the storage access key."
            }
        },
        "subnetResourceId": {
            "type": "string",
            "metadata": {
                "description": "Specifies the id of the subnet which the private endpoint uses."
            }
        },
        "privateDnsZoneResourceGroupId": {
            "type": "string",
            "metadata": {
                "description": "Specifies the ID of the resource group of the private dns zones."
            }
        }
    },
    "functions": [],
    "variables": {
        "location": "[parameters('location')]",
        "eventHubName": "[parameters('eventHubName')]",
        "eventHubSku": "[parameters('eventHubSku')]",
        "eventHubMinThroughputUnits": "[parameters('eventHubMinThroughputUnits')]",
        "eventHubMaxThroughputUnits": "[parameters('eventHubMaxThroughputUnits')]",
        "keyVaultId": "[parameters('keyVaultId')]",
        "keyVaultName": "[last(split(variables('keyVaultId'), '/'))]",
        "subnetResourceId": "[parameters('subnetResourceId')]",
        "privateDnsZoneResourceGroupId": "[parameters('privateDnsZoneResourceGroupId')]",
        "privateDnsZoneResourceGroupName": "[last(split(variables('privateDnsZoneResourceGroupId'), '/'))]",
        "templateUri": "https://raw.githubusercontent.com/Azure/data-node/main/infra/PrivateEndpoint/deploy.privateEndpoint.json?token=AIHRGTTAL6RUMGCV4HOACXS7L5OO4"
    },
    "resources": [
        {
            "name": "[variables('eventHubName')]",
            "type": "Microsoft.EventHub/namespaces",
            "apiVersion": "2017-04-01",
            "location": "[variables('location')]",
            "sku": {
                "name": "[variables('eventHubSku')]",
                "tier": "[variables('eventHubSku')]",
                "capacity": "[variables('eventHubMinThroughputUnits')]"
            },
            "properties": {
                "isAutoInflateEnabled": true,
                "kafkaEnabled": true,
                "maximumThroughputUnits": "[variables('eventHubMaxThroughputUnits')]",
                "zoneRedundant": true
            },
            "resources": [
                // {
                //     "name": "default",
                //     "type": "eventhubs",
                //     "apiVersion": "2017-04-01",
                //     "properties": {
                //         "messageRetentionInDays": 3,
                //         "partitionCount": 1,
                //         "status": "Deleting",
                //         "captureDescription": {
                //             "enabled": true,
                //             "encoding": "Avro",
                //             "intervalInSeconds": 900,
                //             "sizeLimitInBytes": 10485760,
                //             "destination": {
                //                 "name": "default",
                //                 "properties": {
                //                     "storageAccountResourceId": "",
                //                     "blobContainer": "",
                //                     "archiveNameFormat": ""
                //                 }
                //             },
                //             "skipEmptyArchives": true
                //         }
                //     }
                // }
            ]
        },
        {
            "name": "PrivateEndpointDeployment",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', variables('eventHubName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('templateUri')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "privateEndpointName": {
                        "value": "[concat(variables('eventHubName'), '-private-endpoint')]"
                    },
                    "privateEndpointLocation": {
                        "value": "[variables('location')]"
                    },
                    "privateLinkServiceResourceId": {
                        "value": "[resourceId('Microsoft.EventHub/namespaces', variables('eventHubName'))]"
                    },
                    "privateLinkServiceGroupId": {
                        "value": "namespace"
                    },
                    "subnetResourceId": {
                        "value": "[variables('subnetResourceId')]"
                    },
                    "privateDnsZoneId": {
                        "value": "[resourceId(reference(variables('privateDnsZoneResourceGroupId'), '2020-06-01', 'Full').subscriptionId, variables('privateDnsZoneResourceGroupName'), 'Microsoft.Network/privateDnsZones', 'privatelink.servicebus.windows.net')]"
                    }
                }
            }
        },
        {
            "name": "SecretDeployment",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', variables('eventHubName'))]"
            ],
            "properties": {
                "expressionEvaluationOptions": {
                    "scope": "outer"
                },
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.KeyVault/vaults/secrets",
                            "name": "[concat(variables('keyVaultName'), '/eventHubNamespacePrimaryConnectionString')]",
                            "apiVersion": "2019-09-01",
                            "properties": {
                                "contentType": "text/plain",
                                "value": "[listkeys(resourceId('Microsoft.EventHub/namespaces/authorizationRules', variables('eventHubName'), 'RootManageSharedAccessKey'), '2017-04-01').primaryConnectionString]",
                                "attributes": {
                                    "enabled": true
                                }
                            }
                        }
                    ],
                    "outputs": {}
                }
            },
            "subscriptionId": "[split(variables('keyVaultId'), '/')[2]]",
            "resourceGroup": "[split(variables('keyVaultId'), '/')[4]]"
        }
    ],
    "outputs": {}
}