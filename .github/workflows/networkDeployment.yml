name: Network Deployment

on:
  push:
    branches: [ main ]
    paths: 
      - 'infra/VirtualNetwork/**'
      - 'infra/VirtualNetworkPeering/**'
      - '.github/workflows/networkDeployment.yml'

env:
  AZURE_SUBSCRIPTION_ID: '2150d511-458f-43b9-8691-6819ba2e6c7b'
  AZURE_RESOURCE_GROUP_NAME_NETWORK: dn001-network
  AZURE_LOCATION: northeurope

jobs:
  create-resource-group:
    runs-on: ubuntu-latest

    steps:
    # Login to Azure
    - name: Azure Login
      id: azure_login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    # Create resource group
    - name: Create resource group
      id: resource_group_network
      uses: azure/cli@v1
      with:
        azcliversion: latest
        inlineScript: |
          echo "Creating resource group \"${{ env.AZURE_RESOURCE_GROUP_NAME_NETWORK }}\""
          az group create --location ${{ env.AZURE_LOCATION }} --name ${{ env.AZURE_RESOURCE_GROUP_NAME_NETWORK }}
    
    # Log out from Azure
    - name: Log out from Azure
      id: azure_logout
      uses: azure/cli@v1
      with:
        azcliversion: latest
        inlineScript: |
          az logout

  validation:
    needs: [ create-resource-group ]
    runs-on: ubuntu-latest
    
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Check Out Repository
      id: checkout_repository
      uses: actions/checkout@v2
    
    # Login to Azure
    - name: Azure Login
      id: azure_login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    # Deploy Vnet - validation
    - name: Deploy Vnet - validation
      id: vnet_validation
      uses: azure/arm-deploy@v1
      with:
        scope: resourcegroup
        subscriptionId: ${{ env.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP_NAME_NETWORK }}
        region: ${{ env.AZURE_LOCATION }}
        template: ${{ github.workspace }}/infra/VirtualNetwork/deploy.vnet.json
        parameters: ${{ github.workspace }}/infra/VirtualNetwork/params.vnet.json
        deploymentMode: Validate
    
    # Deploy Vnet Peering 001 - validation
    - name: Deploy Vnet Peering 001 - validation
      id: vnet_peering_001_validation
      uses: azure/arm-deploy@v1
      with:
        scope: resourcegroup
        subscriptionId: ${{ env.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP_NAME_NETWORK }}
        region: ${{ env.AZURE_LOCATION }}
        template: ${{ github.workspace }}/infra/VirtualNetworkPeering/deploy.vnetPeering.json
        parameters: ${{ github.workspace }}/infra/VirtualNetworkPeering/params.vnetPeering001.json
        deploymentMode: Validate
    
    # Deploy Vnet Peering 002 - validation
    - name: Deploy Vnet Peering 002 - validation
      id: vnet_peering_002_validation
      uses: azure/arm-deploy@v1
      with:
        scope: resourcegroup
        subscriptionId: ${{ env.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP_NAME_NETWORK }}
        region: ${{ env.AZURE_LOCATION }}
        template: ${{ github.workspace }}/infra/VirtualNetworkPeering/deploy.vnetPeering.json
        parameters: ${{ github.workspace }}/infra/VirtualNetworkPeering/params.vnetPeering002.json
        deploymentMode: Validate
    
    # Log out from Azure
    - name: Log out from Azure
      id: azure_logout
      uses: azure/cli@v1
      with:
        azcliversion: latest
        inlineScript: |
          az logout

  deployment:
    needs: [ create-resource-group, validation ]
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Check Out Repository
      id: checkout_repository
      uses: actions/checkout@v2
    
    # Login to Azure
    - name: Azure Login
      id: azure_login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    # Deploy Vnet
    - name: Deploy Vnet
      id: vnet_deployment
      uses: azure/arm-deploy@v1
      with:
        scope: resourcegroup
        subscriptionId: ${{ env.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP_NAME_NETWORK }}
        region: ${{ env.AZURE_LOCATION }}
        template: ${{ github.workspace }}/infra/VirtualNetwork/deploy.vnet.json
        parameters: ${{ github.workspace }}/infra/VirtualNetwork/params.vnet.json
        deploymentMode: Incremental
    
    # Deploy Vnet Peering 001
    - name: Deploy Vnet Peering 001
      id: vnet_peering_001_deployment
      uses: azure/arm-deploy@v1
      with:
        scope: resourcegroup
        subscriptionId: ${{ env.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP_NAME_NETWORK }}
        region: ${{ env.AZURE_LOCATION }}
        template: ${{ github.workspace }}/infra/VirtualNetworkPeering/deploy.vnetPeering.json
        parameters: ${{ github.workspace }}/infra/VirtualNetworkPeering/params.vnetPeering001.json
        deploymentMode: Incremental
    
    # Deploy Vnet Peering 002
    - name: Deploy Vnet Peering 002
      id: vnet_peering_002_deployment
      uses: azure/arm-deploy@v1
      with:
        scope: resourcegroup
        subscriptionId: ${{ env.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP_NAME_NETWORK }}
        region: ${{ env.AZURE_LOCATION }}
        template: ${{ github.workspace }}/infra/VirtualNetworkPeering/deploy.vnetPeering.json
        parameters: ${{ github.workspace }}/infra/VirtualNetworkPeering/params.vnetPeering002.json
        deploymentMode: Incremental
    
    # Log out from Azure
    - name: Log out from Azure
      id: azure_logout
      uses: azure/cli@v1
      with:
        azcliversion: latest
        inlineScript: |
          az logout
