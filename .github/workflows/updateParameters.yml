name: Update Parameter Files

on:
  push:
    branches: [main]
    paths:
      - 'configs/**'
      - '.github/workflows/updateParameters.yml'

env:
  GLOBAL_DNS_RESOURCE_GROUP_ID: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'
  DATA_LANDING_ZONE_SUBSCRIPTION_ID: '{dataLandingZoneSubscriptionId}'
  DATA_LANDING_ZONE_NAME: '{dataLandingZoneName}' # Choose max. 11 characters. They will be used as a prefix for all services. If not unique, deployment can fail for some services.
  LOCATION: '{regionName}' # Specifies the region for all services (e.g. 'northeurope', 'eastus', etc.)
  HUB_VNET_ID: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}'
  AZURE_RESOURCE_MANAGER_CONNECTION_NAME: '{resourceManagerConnectionName}'

jobs:
  renaming:
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Check Out Repository
        id: checkout_repository
        uses: actions/checkout@v2
      
      # Install Required Packages
      - name: Install Required Modules
        id: install_modules
        run: |
          echo "Install Modules"
          pwsh -Command "Set-PSRepository -Name "PSGallery" -InstallationPolicy Trusted"
          pwsh -Command "Install-Module -Name powershell-yaml"

      # Update Parameters
      - name: Update Parameters
        id: update_parameters
        run: |
          echo "Updating Parameters"
          pwsh $GITHUB_WORKSPACE/configs/UpdateParameters.ps1 \
            -ConfigurationFilePath 'configs/config.json' \
            -GlobalDnsResourceGroupId '${{ env.GLOBAL_DNS_RESOURCE_GROUP_ID }}' \
            -DataLandingZoneSubscriptionId '${{ env.DATA_LANDING_ZONE_SUBSCRIPTION_ID }}' \
            -DataLandingZoneName '${{ env.DATA_LANDING_ZONE_NAME }}' \
            -Location '${{ env.LOCATION }}' \
            -HubVnetId '${{ env.HUB_VNET_ID }}' \
            -AzureResourceManagerConnectionName '${{ env.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}'
      
      # Define Pull Request Body
      - name: Define Pull Request Body
        id: define_pull_request_body
        run: |
          body="This is line \`one\`
                This is line **two**"
          body="${body//'%'/'%25'}"
          body="${body//$'\n'/'%0A'}"
          body="${body//$'\r'/'%0D'}" 
          echo "::set-output name=body::$body"

      # Create Pull Request
      - name: Create Pull Request
        id: create_pull_request
        uses: peter-evans/create-pull-request@v3
        with:
          commit-message: 'Updated Parameters'
          branch: 'parameter_update_${{ github.run_id }}'
          title: 'Updated Parameters with GitHub Workflow Run ID ${{ github.run_id }}'
          body: ${{ steps.define_pull_request_body.outputs.body }}
